!function(t){var s={};function r(e){if(s[e])return s[e].exports;var n=s[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=s,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var s in n)r.d(t,s,function(e){return n[e]}.bind(null,s));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s="./src/electron.js")}({"./node_modules/@paulcbetts/mime-db/db.json":
/*!**************************************************!*\
  !*** ./node_modules/@paulcbetts/mime-db/db.json ***!
  \**************************************************/
/*! exports provided: application/font-woff, application/font-woff2, application/javascript, application/pdf, application/postscript, application/x-font-otf, application/x-font-ttf, application/xml, application/zip, audio/midi, audio/mpeg, audio/wav, audio/wave, audio/x-aiff, audio/x-wav, font/opentype, image/bmp, image/gif, image/jpeg, image/png, image/svg+xml, image/tiff, image/webp, image/x-icon, image/x-ms-bmp, text/coffeescript, text/css, text/html, text/jsx, text/less, text/plain, text/x-sass, text/x-scss, text/xml, video/mp4, video/mpeg, video/quicktime, video/webm, video/x-fli, video/x-m4v, video/x-ms-asf, video/x-msvideo, default */function(module){eval('module.exports = JSON.parse("{\\"application/font-woff\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"woff\\"]},\\"application/font-woff2\\":{\\"compressible\\":false,\\"extensions\\":[\\"woff2\\"]},\\"application/javascript\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"js\\"]},\\"application/pdf\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"pdf\\"]},\\"application/postscript\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"ai\\",\\"eps\\",\\"ps\\"]},\\"application/x-font-otf\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"otf\\"]},\\"application/x-font-ttf\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"ttf\\",\\"ttc\\"]},\\"application/xml\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"xml\\",\\"xsl\\"]},\\"application/zip\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"zip\\"]},\\"audio/midi\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"mid\\",\\"midi\\",\\"kar\\",\\"rmi\\"]},\\"audio/mpeg\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"mpga\\",\\"mp2\\",\\"mp2a\\",\\"mp3\\",\\"m2a\\",\\"m3a\\"]},\\"audio/wav\\":{\\"compressible\\":false,\\"extensions\\":[\\"wav\\"]},\\"audio/wave\\":{\\"compressible\\":false,\\"extensions\\":[\\"wav\\"]},\\"audio/x-aiff\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"aif\\",\\"aiff\\",\\"aifc\\"]},\\"audio/x-wav\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"wav\\"]},\\"font/opentype\\":{\\"compressible\\":true,\\"extensions\\":[\\"otf\\"]},\\"image/bmp\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"bmp\\"]},\\"image/gif\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"gif\\"]},\\"image/jpeg\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"jpeg\\",\\"jpg\\",\\"jpe\\"]},\\"image/png\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"png\\"]},\\"image/svg+xml\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"svg\\",\\"svgz\\"]},\\"image/tiff\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"tiff\\",\\"tif\\"]},\\"image/webp\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"webp\\"]},\\"image/x-icon\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"ico\\"]},\\"image/x-ms-bmp\\":{\\"source\\":\\"nginx\\",\\"extensions\\":[\\"bmp\\"]},\\"text/coffeescript\\":{\\"extensions\\":[\\"coffee\\",\\"litcoffee\\"]},\\"text/css\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"css\\"]},\\"text/html\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"html\\",\\"htm\\",\\"shtml\\"]},\\"text/jsx\\":{\\"compressible\\":true,\\"extensions\\":[\\"jsx\\"]},\\"text/less\\":{\\"extensions\\":[\\"less\\"]},\\"text/plain\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"txt\\",\\"text\\",\\"conf\\",\\"def\\",\\"list\\",\\"log\\",\\"in\\"]},\\"text/x-sass\\":{\\"extensions\\":[\\"sass\\"]},\\"text/x-scss\\":{\\"extensions\\":[\\"scss\\"]},\\"text/xml\\":{\\"source\\":\\"nginx\\",\\"extensions\\":[\\"xml\\"]},\\"video/mp4\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"mp4\\",\\"mp4v\\",\\"mpg4\\"]},\\"video/mpeg\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"mpeg\\",\\"mpg\\",\\"mpe\\",\\"m1v\\",\\"m2v\\"]},\\"video/quicktime\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"qt\\",\\"mov\\"]},\\"video/webm\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"webm\\"]},\\"video/x-fli\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"fli\\"]},\\"video/x-m4v\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"m4v\\"]},\\"video/x-ms-asf\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"asf\\",\\"asx\\"]},\\"video/x-msvideo\\":{\\"source\\":\\"apache\\",\\"extensions\\":[\\"avi\\"]}}");\n\n//# sourceURL=webpack:///./node_modules/@paulcbetts/mime-db/db.json?')},"./node_modules/@paulcbetts/mime-db/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@paulcbetts/mime-db/index.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = __webpack_require__(/*! ./db.json */ "./node_modules/@paulcbetts/mime-db/db.json")\n\n\n//# sourceURL=webpack:///./node_modules/@paulcbetts/mime-db/index.js?')},"./node_modules/@paulcbetts/mime-types/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@paulcbetts/mime-types/index.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = __webpack_require__(/*! @paulcbetts/mime-db */ \"./node_modules/@paulcbetts/mime-db/index.js\")\nvar extname = __webpack_require__(/*! path */ \"path\").extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar extractTypeRegExp = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar textTypeRegExp = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset(type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = extractTypeRegExp.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && textTypeRegExp.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType(str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension(type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = extractTypeRegExp.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup(path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps(extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType(type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream'\n          && from > to || (from === to && types[extension].substr(0, 12) === 'application/')) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n\n\n//# sourceURL=webpack:///./node_modules/@paulcbetts/mime-types/index.js?")},"./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/browser.js?")},"./node_modules/debug/src/debug.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/debug.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/debug.js?")},"./node_modules/debug/src/index.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/index.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = __webpack_require__(/*! ./browser.js */ \"./node_modules/debug/src/browser.js\");\n} else {\n  module.exports = __webpack_require__(/*! ./node.js */ \"./node_modules/debug/src/node.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/index.js?")},"./node_modules/debug/src/node.js":
/*!****************************************!*\
  !*** ./node_modules/debug/src/node.js ***!
  \****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/**\n * Module dependencies.\n */\n\nvar tty = __webpack_require__(/*! tty */ \"tty\");\nvar util = __webpack_require__(/*! util */ \"util\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/debug/src/debug.js\");\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = __webpack_require__(/*! fs */ \"fs\");\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = __webpack_require__(/*! net */ \"net\");\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/node.js?")},"./node_modules/electron-compile/lib sync recursive":
/*!************************************************!*\
  !*** ./node_modules/electron-compile/lib sync ***!
  \************************************************/
/*! no static exports found */function(module,exports){eval('function webpackEmptyContext(req) {\n\tvar e = new Error("Cannot find module \'" + req + "\'");\n\te.code = \'MODULE_NOT_FOUND\';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = "./node_modules/electron-compile/lib sync recursive";\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib_sync?')},"./node_modules/electron-compile/lib/browser-signal.js":
/*!*************************************************************!*\
  !*** ./node_modules/electron-compile/lib/browser-signal.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.send = send;\nexports.listen = listen;\n\nvar _Observable = __webpack_require__(/*! rxjs/Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n\nvar _Subject = __webpack_require__(/*! rxjs/Subject */ "./node_modules/electron-compile/node_modules/rxjs/Subject.js");\n\n__webpack_require__(/*! rxjs/add/observable/throw */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/throw.js");\n\nconst isElectron = \'type\' in process;\nconst isBrowser = process.type === \'browser\';\n\nconst ipc = !isElectron ? null : isBrowser ? __webpack_require__(/*! electron */ "electron").ipcMain : __webpack_require__(/*! electron */ "electron").ipcRenderer;\n\nconst channelList = {};\n\nfunction send(channel) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isElectron && !isBrowser) {\n    ipc.send(channel, ...args);\n    return;\n  }\n\n  if (!(channel in channelList)) return;\n\n  let subj = channelList[channel].subj;\n\n  subj.next(args);\n}\n\nfunction listen(channel) {\n  if (isElectron && !isBrowser) return _Observable.Observable.throw(new Error("Can only call listen from browser"));\n\n  return _Observable.Observable.create(s => {\n    if (!(channel in channelList)) {\n      let subj = new _Subject.Subject();\n      let ipcListener = function (e) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        subj.next(args);\n      };\n\n      channelList[channel] = { subj, refcount: 0 };\n      if (isElectron && isBrowser) {\n        ipc.on(channel, ipcListener);\n        channelList[channel].listener = ipcListener;\n      }\n    }\n\n    channelList[channel].refcount++;\n\n    let disp = channelList[channel].subj.subscribe(s);\n    disp.add(() => {\n      channelList[channel].refcount--;\n      if (channelList[channel].refcount > 0) return;\n\n      if (channelList[channel].listener) {\n        ipc.removeListener(channel, channelList[channel].listener);\n      }\n\n      delete channelList.channel;\n    });\n\n    return disp;\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9icm93c2VyLXNpZ25hbC5qcyJdLCJuYW1lcyI6WyJzZW5kIiwibGlzdGVuIiwiaXNFbGVjdHJvbiIsInByb2Nlc3MiLCJpc0Jyb3dzZXIiLCJ0eXBlIiwiaXBjIiwicmVxdWlyZSIsImlwY01haW4iLCJpcGNSZW5kZXJlciIsImNoYW5uZWxMaXN0IiwiY2hhbm5lbCIsImFyZ3MiLCJzdWJqIiwibmV4dCIsIk9ic2VydmFibGUiLCJ0aHJvdyIsIkVycm9yIiwiY3JlYXRlIiwicyIsIlN1YmplY3QiLCJpcGNMaXN0ZW5lciIsImUiLCJyZWZjb3VudCIsIm9uIiwibGlzdGVuZXIiLCJkaXNwIiwic3Vic2NyaWJlIiwiYWRkIiwicmVtb3ZlTGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7O1FBYWdCQSxJLEdBQUFBLEk7UUFZQUMsTSxHQUFBQSxNOztBQXpCaEI7O0FBQ0E7O0FBRUE7O0FBRUEsTUFBTUMsYUFBYSxVQUFVQyxPQUE3QjtBQUNBLE1BQU1DLFlBQVlELFFBQVFFLElBQVIsS0FBaUIsU0FBbkM7O0FBRUEsTUFBTUMsTUFBTSxDQUFDSixVQUFELEdBQWMsSUFBZCxHQUNWRSxZQUFZRyxRQUFRLFVBQVIsRUFBb0JDLE9BQWhDLEdBQTBDRCxRQUFRLFVBQVIsRUFBb0JFLFdBRGhFOztBQUdBLE1BQU1DLGNBQWMsRUFBcEI7O0FBRU8sU0FBU1YsSUFBVCxDQUFjVyxPQUFkLEVBQWdDO0FBQUEsb0NBQU5DLElBQU07QUFBTkEsUUFBTTtBQUFBOztBQUNyQyxNQUFJVixjQUFjLENBQUNFLFNBQW5CLEVBQThCO0FBQzVCRSxRQUFJTixJQUFKLENBQVNXLE9BQVQsRUFBa0IsR0FBR0MsSUFBckI7QUFDQTtBQUNEOztBQUVELE1BQUksRUFBRUQsV0FBV0QsV0FBYixDQUFKLEVBQStCOztBQU5NLE1BUS9CRyxJQVIrQixHQVF0QkgsWUFBWUMsT0FBWixDQVJzQixDQVEvQkUsSUFSK0I7O0FBU3JDQSxPQUFLQyxJQUFMLENBQVVGLElBQVY7QUFDRDs7QUFFTSxTQUFTWCxNQUFULENBQWdCVSxPQUFoQixFQUF5QjtBQUM5QixNQUFJVCxjQUFjLENBQUNFLFNBQW5CLEVBQThCLE9BQU9XLHVCQUFXQyxLQUFYLENBQWlCLElBQUlDLEtBQUosQ0FBVSxtQ0FBVixDQUFqQixDQUFQOztBQUU5QixTQUFPRix1QkFBV0csTUFBWCxDQUFtQkMsQ0FBRCxJQUFPO0FBQzlCLFFBQUksRUFBRVIsV0FBV0QsV0FBYixDQUFKLEVBQStCO0FBQzdCLFVBQUlHLE9BQU8sSUFBSU8sZ0JBQUosRUFBWDtBQUNBLFVBQUlDLGNBQWMsVUFBQ0MsQ0FBRCxFQUFnQjtBQUFBLDJDQUFUVixJQUFTO0FBQVRBLGNBQVM7QUFBQTs7QUFBRUMsYUFBS0MsSUFBTCxDQUFVRixJQUFWO0FBQWtCLE9BQXREOztBQUVBRixrQkFBWUMsT0FBWixJQUF1QixFQUFFRSxJQUFGLEVBQVFVLFVBQVUsQ0FBbEIsRUFBdkI7QUFDQSxVQUFJckIsY0FBY0UsU0FBbEIsRUFBNkI7QUFDM0JFLFlBQUlrQixFQUFKLENBQU9iLE9BQVAsRUFBZ0JVLFdBQWhCO0FBQ0FYLG9CQUFZQyxPQUFaLEVBQXFCYyxRQUFyQixHQUFnQ0osV0FBaEM7QUFDRDtBQUNGOztBQUVEWCxnQkFBWUMsT0FBWixFQUFxQlksUUFBckI7O0FBRUEsUUFBSUcsT0FBT2hCLFlBQVlDLE9BQVosRUFBcUJFLElBQXJCLENBQTBCYyxTQUExQixDQUFvQ1IsQ0FBcEMsQ0FBWDtBQUNBTyxTQUFLRSxHQUFMLENBQVMsTUFBTTtBQUNibEIsa0JBQVlDLE9BQVosRUFBcUJZLFFBQXJCO0FBQ0EsVUFBSWIsWUFBWUMsT0FBWixFQUFxQlksUUFBckIsR0FBZ0MsQ0FBcEMsRUFBdUM7O0FBRXZDLFVBQUliLFlBQVlDLE9BQVosRUFBcUJjLFFBQXpCLEVBQW1DO0FBQ2pDbkIsWUFBSXVCLGNBQUosQ0FBbUJsQixPQUFuQixFQUE0QkQsWUFBWUMsT0FBWixFQUFxQmMsUUFBakQ7QUFDRDs7QUFFRCxhQUFPZixZQUFZQyxPQUFuQjtBQUNELEtBVEQ7O0FBV0EsV0FBT2UsSUFBUDtBQUNELEdBM0JNLENBQVA7QUE0QkQiLCJmaWxlIjoiYnJvd3Nlci1zaWduYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMvU3ViamVjdCc7XG5cbmltcG9ydCAncnhqcy9hZGQvb2JzZXJ2YWJsZS90aHJvdyc7XG5cbmNvbnN0IGlzRWxlY3Ryb24gPSAndHlwZScgaW4gcHJvY2VzcztcbmNvbnN0IGlzQnJvd3NlciA9IHByb2Nlc3MudHlwZSA9PT0gJ2Jyb3dzZXInO1xuXG5jb25zdCBpcGMgPSAhaXNFbGVjdHJvbiA/IG51bGwgOlxuICBpc0Jyb3dzZXIgPyByZXF1aXJlKCdlbGVjdHJvbicpLmlwY01haW4gOiByZXF1aXJlKCdlbGVjdHJvbicpLmlwY1JlbmRlcmVyO1xuXG5jb25zdCBjaGFubmVsTGlzdCA9IHt9O1xuXG5leHBvcnQgZnVuY3Rpb24gc2VuZChjaGFubmVsLCAuLi5hcmdzKSB7XG4gIGlmIChpc0VsZWN0cm9uICYmICFpc0Jyb3dzZXIpIHtcbiAgICBpcGMuc2VuZChjaGFubmVsLCAuLi5hcmdzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIShjaGFubmVsIGluIGNoYW5uZWxMaXN0KSkgcmV0dXJuO1xuXG4gIGxldCB7IHN1YmogfSA9IGNoYW5uZWxMaXN0W2NoYW5uZWxdO1xuICBzdWJqLm5leHQoYXJncyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsaXN0ZW4oY2hhbm5lbCkge1xuICBpZiAoaXNFbGVjdHJvbiAmJiAhaXNCcm93c2VyKSByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhuZXcgRXJyb3IoXCJDYW4gb25seSBjYWxsIGxpc3RlbiBmcm9tIGJyb3dzZXJcIikpO1xuXG4gIHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZSgocykgPT4ge1xuICAgIGlmICghKGNoYW5uZWwgaW4gY2hhbm5lbExpc3QpKSB7XG4gICAgICBsZXQgc3ViaiA9IG5ldyBTdWJqZWN0KCk7XG4gICAgICBsZXQgaXBjTGlzdGVuZXIgPSAoZSwgLi4uYXJncykgPT4geyBzdWJqLm5leHQoYXJncyk7IH07XG5cbiAgICAgIGNoYW5uZWxMaXN0W2NoYW5uZWxdID0geyBzdWJqLCByZWZjb3VudDogMCB9O1xuICAgICAgaWYgKGlzRWxlY3Ryb24gJiYgaXNCcm93c2VyKSB7XG4gICAgICAgIGlwYy5vbihjaGFubmVsLCBpcGNMaXN0ZW5lcik7XG4gICAgICAgIGNoYW5uZWxMaXN0W2NoYW5uZWxdLmxpc3RlbmVyID0gaXBjTGlzdGVuZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY2hhbm5lbExpc3RbY2hhbm5lbF0ucmVmY291bnQrKztcblxuICAgIGxldCBkaXNwID0gY2hhbm5lbExpc3RbY2hhbm5lbF0uc3Viai5zdWJzY3JpYmUocyk7XG4gICAgZGlzcC5hZGQoKCkgPT4ge1xuICAgICAgY2hhbm5lbExpc3RbY2hhbm5lbF0ucmVmY291bnQtLTtcbiAgICAgIGlmIChjaGFubmVsTGlzdFtjaGFubmVsXS5yZWZjb3VudCA+IDApIHJldHVybjtcblxuICAgICAgaWYgKGNoYW5uZWxMaXN0W2NoYW5uZWxdLmxpc3RlbmVyKSB7XG4gICAgICAgIGlwYy5yZW1vdmVMaXN0ZW5lcihjaGFubmVsLCBjaGFubmVsTGlzdFtjaGFubmVsXS5saXN0ZW5lcik7XG4gICAgICB9XG5cbiAgICAgIGRlbGV0ZSBjaGFubmVsTGlzdC5jaGFubmVsO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRpc3A7XG4gIH0pO1xufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/browser-signal.js?')},"./node_modules/electron-compile/lib/compile-cache.js":
/*!************************************************************!*\
  !*** ./node_modules/electron-compile/lib/compile-cache.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = __webpack_require__(/*! path */ \"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\nvar _zlib2 = _interopRequireDefault(_zlib);\n\nvar _digestForObject = __webpack_require__(/*! ./digest-for-object */ \"./node_modules/electron-compile/lib/digest-for-object.js\");\n\nvar _digestForObject2 = _interopRequireDefault(_digestForObject);\n\nvar _promise = __webpack_require__(/*! ./promise */ \"./node_modules/electron-compile/lib/promise.js\");\n\nvar _mkdirp = __webpack_require__(/*! mkdirp */ \"./node_modules/mkdirp/index.js\");\n\nvar _mkdirp2 = _interopRequireDefault(_mkdirp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst d = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('electron-compile:compile-cache');\n\n/**\n * CompileCache manages getting and setting entries for a single compiler; each\n * in-use compiler will have an instance of this class, usually created via\n * {@link createFromCompiler}.\n *\n * You usually will not use this class directly, it is an implementation class\n * for {@link CompileHost}.\n */\nclass CompileCache {\n  /**\n   * Creates an instance, usually used for testing only.\n   *\n   * @param  {string} cachePath  The root directory to use as a cache path\n   *\n   * @param  {FileChangedCache} fileChangeCache  A file-change cache that is\n   *                                             optionally pre-loaded.\n   * @param {string} sourceMapPath The directory to store sourcemap separately if compiler option enabled to emit.\n   *                               Default to cachePath if not specified.\n   */\n  constructor(cachePath, fileChangeCache) {\n    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    this.cachePath = cachePath;\n    this.fileChangeCache = fileChangeCache;\n    this.sourceMapPath = sourceMapPath || this.cachePath;\n  }\n\n  /**\n   * Creates a CompileCache from a class compatible with the CompilerBase\n   * interface. This method uses the compiler name / version / options to\n   * generate a unique directory name for cached results\n   *\n   * @param  {string} cachePath  The root path to use for the cache, a directory\n   *                             representing the hash of the compiler parameters\n   *                             will be created here.\n   *\n   * @param  {CompilerBase} compiler  The compiler to use for version / option\n   *                                  information.\n   *\n   * @param  {FileChangedCache} fileChangeCache  A file-change cache that is\n   *                                             optionally pre-loaded.\n   *\n   * @param  {boolean} readOnlyMode  Don't attempt to create the cache directory.\n   *\n   * @param {string} sourceMapPath The directory to store sourcemap separately if compiler option enabled to emit.\n   *                               Default to cachePath if not specified.\n   *\n   * @return {CompileCache}  A configured CompileCache instance.\n   */\n  static createFromCompiler(cachePath, compiler, fileChangeCache) {\n    let readOnlyMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let sourceMapPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n    let newCachePath = null;\n    let getCachePath = () => {\n      if (newCachePath) return newCachePath;\n\n      const digestObj = {\n        name: compiler.name || Object.getPrototypeOf(compiler).constructor.name,\n        version: compiler.getCompilerVersion(),\n        options: compiler.compilerOptions\n      };\n\n      newCachePath = _path2.default.join(cachePath, (0, _digestForObject2.default)(digestObj));\n\n      d(`Path for ${digestObj.name}: ${newCachePath}`);\n      d(`Set up with parameters: ${JSON.stringify(digestObj)}`);\n\n      if (!readOnlyMode) _mkdirp2.default.sync(newCachePath);\n      return newCachePath;\n    };\n\n    let ret = new CompileCache('', fileChangeCache);\n    ret.getCachePath = getCachePath;\n\n    const newSourceMapPath = sourceMapPath;\n    ret.getSourceMapPath = () => newSourceMapPath || getCachePath();\n\n    return ret;\n  }\n\n  /**\n   * Returns a file's compiled contents from the cache.\n   *\n   * @param  {string} filePath  The path to the file. FileChangedCache will look\n   *                            up the hash and use that as the key in the cache.\n   *\n   * @return {Promise<Object>}  An object with all kinds of information\n   *\n   * @property {Object} hashInfo  The hash information returned from getHashForPath\n   * @property {string} code  The source code if the file was a text file\n   * @property {Buffer} binaryData  The file if it was a binary file\n   * @property {string} mimeType  The MIME type saved in the cache.\n   * @property {string[]} dependentFiles  The dependent files returned from\n   *                                      compiling the file, if any.\n   */\n  get(filePath) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      d(`Fetching ${filePath} from cache`);\n      let hashInfo = yield _this.fileChangeCache.getHashForPath(_path2.default.resolve(filePath));\n\n      let code = null;\n      let mimeType = null;\n      let binaryData = null;\n      let dependentFiles = null;\n\n      let cacheFile = null;\n      try {\n        cacheFile = _path2.default.join(_this.getCachePath(), hashInfo.hash);\n        let result = null;\n\n        if (hashInfo.isFileBinary) {\n          d(\"File is binary, reading out info\");\n          let info = JSON.parse((yield _promise.pfs.readFile(cacheFile + '.info')));\n          mimeType = info.mimeType;\n          dependentFiles = info.dependentFiles;\n\n          binaryData = hashInfo.binaryData;\n          if (!binaryData) {\n            binaryData = yield _promise.pfs.readFile(cacheFile);\n            binaryData = yield _promise.pzlib.gunzip(binaryData);\n          }\n        } else {\n          let buf = yield _promise.pfs.readFile(cacheFile);\n          let str = (yield _promise.pzlib.gunzip(buf)).toString('utf8');\n\n          result = JSON.parse(str);\n          code = result.code;\n          mimeType = result.mimeType;\n          dependentFiles = result.dependentFiles;\n        }\n      } catch (e) {\n        d(`Failed to read cache for ${filePath}, looked in ${cacheFile}: ${e.message}`);\n      }\n\n      return { hashInfo, code, mimeType, binaryData, dependentFiles };\n    })();\n  }\n\n  /**\n   * Saves a compiled result to cache\n   *\n   * @param  {Object} hashInfo  The hash information returned from getHashForPath\n   *\n   * @param  {string / Buffer} codeOrBinaryData   The file's contents, either as\n   *                                              a string or a Buffer.\n   * @param  {string} mimeType  The MIME type returned by the compiler.\n   *\n   * @param  {string[]} dependentFiles  The list of dependent files returned by\n   *                                    the compiler.\n   * @return {Promise}  Completion.\n   */\n  save(hashInfo, codeOrBinaryData, mimeType, dependentFiles) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let buf = null;\n      let target = _path2.default.join(_this2.getCachePath(), hashInfo.hash);\n      d(`Saving to ${target}`);\n\n      if (hashInfo.isFileBinary) {\n        buf = yield _promise.pzlib.gzip(codeOrBinaryData);\n        yield _promise.pfs.writeFile(target + '.info', JSON.stringify({ mimeType, dependentFiles }), 'utf8');\n      } else {\n        buf = yield _promise.pzlib.gzip(new Buffer(JSON.stringify({ code: codeOrBinaryData, mimeType, dependentFiles })));\n      }\n\n      yield _promise.pfs.writeFile(target, buf);\n    })();\n  }\n\n  /**\n   * Attempts to first get a key via {@link get}, then if it fails, call a method\n   * to retrieve the contents, then save the result to cache.\n   *\n   * The fetcher parameter is expected to have the signature:\n   *\n   * Promise<Object> fetcher(filePath : string, hashInfo : Object);\n   *\n   * hashInfo is a value returned from getHashForPath\n   * The return value of fetcher must be an Object with the properties:\n   *\n   * mimeType - the MIME type of the data to save\n   * code (optional) - the source code as a string, if file is text\n   * binaryData (optional) - the file contents as a Buffer, if file is binary\n   * dependentFiles - the dependent files returned by the compiler.\n   *\n   * @param  {string} filePath  The path to the file. FileChangedCache will look\n   *                            up the hash and use that as the key in the cache.\n   *\n   * @param  {Function} fetcher  A method which conforms to the description above.\n   *\n   * @return {Promise<Object>}  An Object which has the same fields as the\n   *                            {@link get} method return result.\n   */\n  getOrFetch(filePath, fetcher) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let cacheResult = yield _this3.get(filePath);\n      let anyDependenciesChanged = yield _this3.haveAnyDependentFilesChanged(cacheResult);\n\n      if ((cacheResult.code || cacheResult.binaryData) && !anyDependenciesChanged) {\n        return cacheResult;\n      }\n\n      let result = (yield fetcher(filePath, cacheResult.hashInfo)) || { hashInfo: cacheResult.hashInfo };\n\n      if (result.mimeType && !cacheResult.hashInfo.isInNodeModules) {\n        d(`Cache miss: saving out info for ${filePath}`);\n        yield _this3.save(cacheResult.hashInfo, result.code || result.binaryData, result.mimeType, result.dependentFiles);\n\n        const map = result.sourceMaps;\n        if (map) {\n          d(`source map for ${filePath} found, saving it to ${_this3.getSourceMapPath()}`);\n          yield _this3.saveSourceMap(cacheResult.hashInfo, filePath, map);\n        }\n      }\n\n      result.hashInfo = cacheResult.hashInfo;\n      return result;\n    })();\n  }\n\n  /**\n   * @private Check if any of a file's dependencies have changed\n   */\n  haveAnyDependentFilesChanged(cacheResult) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!cacheResult.code || !cacheResult.dependentFiles.length) return false;\n\n      for (let dependentFile of cacheResult.dependentFiles) {\n        let hasFileChanged = yield _this4.fileChangeCache.hasFileChanged(dependentFile);\n        if (hasFileChanged) {\n          return true;\n        }\n\n        let dependentFileCacheResult = yield _this4.get(dependentFile);\n        if (dependentFileCacheResult.dependentFiles && dependentFileCacheResult.dependentFiles.length) {\n          let anySubdependentFilesChanged = yield _this4.haveAnyDependentFilesChanged(dependentFileCacheResult);\n          if (anySubdependentFilesChanged) return true;\n        }\n      }\n\n      return false;\n    })();\n  }\n\n  getSync(filePath) {\n    d(`Fetching ${filePath} from cache`);\n    let hashInfo = this.fileChangeCache.getHashForPathSync(_path2.default.resolve(filePath));\n\n    let code = null;\n    let mimeType = null;\n    let binaryData = null;\n    let dependentFiles = null;\n\n    try {\n      let cacheFile = _path2.default.join(this.getCachePath(), hashInfo.hash);\n\n      let result = null;\n      if (hashInfo.isFileBinary) {\n        d(\"File is binary, reading out info\");\n        let info = JSON.parse(_fs2.default.readFileSync(cacheFile + '.info'));\n        mimeType = info.mimeType;\n        dependentFiles = info.dependentFiles;\n\n        binaryData = hashInfo.binaryData;\n        if (!binaryData) {\n          binaryData = _fs2.default.readFileSync(cacheFile);\n          binaryData = _zlib2.default.gunzipSync(binaryData);\n        }\n      } else {\n        let buf = _fs2.default.readFileSync(cacheFile);\n        let str = _zlib2.default.gunzipSync(buf).toString('utf8');\n\n        result = JSON.parse(str);\n        code = result.code;\n        mimeType = result.mimeType;\n        dependentFiles = result.dependentFiles;\n      }\n    } catch (e) {\n      d(`Failed to read cache for ${filePath}`);\n    }\n\n    return { hashInfo, code, mimeType, binaryData, dependentFiles };\n  }\n\n  saveSync(hashInfo, codeOrBinaryData, mimeType, dependentFiles) {\n    let buf = null;\n    let target = _path2.default.join(this.getCachePath(), hashInfo.hash);\n    d(`Saving to ${target}`);\n\n    if (hashInfo.isFileBinary) {\n      buf = _zlib2.default.gzipSync(codeOrBinaryData);\n      _fs2.default.writeFileSync(target + '.info', JSON.stringify({ mimeType, dependentFiles }), 'utf8');\n    } else {\n      buf = _zlib2.default.gzipSync(new Buffer(JSON.stringify({ code: codeOrBinaryData, mimeType, dependentFiles })));\n    }\n\n    _fs2.default.writeFileSync(target, buf);\n  }\n\n  getOrFetchSync(filePath, fetcher) {\n    let cacheResult = this.getSync(filePath);\n    if (cacheResult.code || cacheResult.binaryData) return cacheResult;\n\n    let result = fetcher(filePath, cacheResult.hashInfo) || { hashInfo: cacheResult.hashInfo };\n\n    if (result.mimeType && !cacheResult.hashInfo.isInNodeModules) {\n      d(`Cache miss: saving out info for ${filePath}`);\n      this.saveSync(cacheResult.hashInfo, result.code || result.binaryData, result.mimeType, result.dependentFiles);\n    }\n\n    const map = result.sourceMaps;\n    if (map) {\n      d(`source map for ${filePath} found, saving it to ${this.getSourceMapPath()}`);\n      this.saveSourceMapSync(cacheResult.hashInfo, filePath, map);\n    }\n\n    result.hashInfo = cacheResult.hashInfo;\n    return result;\n  }\n\n  buildSourceMapTarget(hashInfo, filePath) {\n    const fileName = _path2.default.basename(filePath);\n    const mapFileName = fileName.replace(_path2.default.extname(fileName), '.js.map');\n\n    const target = _path2.default.join(this.getSourceMapPath(), mapFileName);\n    d(`Sourcemap target is: ${target}`);\n\n    return target;\n  }\n\n  /**\n   * Saves sourcemap string into cache, or specified separate dir\n   *\n   * @param  {Object} hashInfo  The hash information returned from getHashForPath\n   *\n   * @param  {string} filePath Path to original file to construct sourcemap file name\n    * @param  {string} sourceMap Sourcemap data as string\n   *\n   * @memberOf CompileCache\n   */\n  saveSourceMap(hashInfo, filePath, sourceMap) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const target = _this5.buildSourceMapTarget(hashInfo, filePath);\n      yield _promise.pfs.writeFile(target, sourceMap, 'utf-8');\n    })();\n  }\n\n  saveSourceMapSync(hashInfo, filePath, sourceMap) {\n    const target = this.buildSourceMapTarget(hashInfo, filePath);\n    _fs2.default.writeFileSync(target, sourceMap, 'utf-8');\n  }\n\n  /**\n   * @private\n   */\n  getCachePath() {\n    // NB: This is an evil hack so that createFromCompiler can stomp it\n    // at will\n    return this.cachePath;\n  }\n\n  /**\n   * @private\n   */\n  getSourceMapPath() {\n    return this.sourceMapPath;\n  }\n\n  /**\n   * Returns whether a file should not be compiled. Note that this doesn't\n   * necessarily mean it won't end up in the cache, only that its contents are\n   * saved verbatim instead of trying to find an appropriate compiler.\n   *\n   * @param  {Object} hashInfo  The hash information returned from getHashForPath\n   *\n   * @return {boolean}  True if a file should be ignored\n   */\n  static shouldPassthrough(hashInfo) {\n    return hashInfo.isMinified || hashInfo.isInNodeModules || hashInfo.hasSourceMap || hashInfo.isFileBinary;\n  }\n}\nexports.default = CompileCache;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/compile-cache.js?")},"./node_modules/electron-compile/lib/compiler-host.js":
/*!************************************************************!*\
  !*** ./node_modules/electron-compile/lib/compiler-host.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _mimeTypes = __webpack_require__(/*! @paulcbetts/mime-types */ \"./node_modules/@paulcbetts/mime-types/index.js\");\n\nvar _mimeTypes2 = _interopRequireDefault(_mimeTypes);\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\nvar _zlib2 = _interopRequireDefault(_zlib);\n\nvar _path = __webpack_require__(/*! path */ \"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _promise = __webpack_require__(/*! ./promise */ \"./node_modules/electron-compile/lib/promise.js\");\n\nvar _forAllFiles = __webpack_require__(/*! ./for-all-files */ \"./node_modules/electron-compile/lib/for-all-files.js\");\n\nvar _compileCache = __webpack_require__(/*! ./compile-cache */ \"./node_modules/electron-compile/lib/compile-cache.js\");\n\nvar _compileCache2 = _interopRequireDefault(_compileCache);\n\nvar _fileChangeCache = __webpack_require__(/*! ./file-change-cache */ \"./node_modules/electron-compile/lib/file-change-cache.js\");\n\nvar _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);\n\nvar _readOnlyCompiler = __webpack_require__(/*! ./read-only-compiler */ \"./node_modules/electron-compile/lib/read-only-compiler.js\");\n\nvar _readOnlyCompiler2 = _interopRequireDefault(_readOnlyCompiler);\n\nvar _browserSignal = __webpack_require__(/*! ./browser-signal */ \"./node_modules/electron-compile/lib/browser-signal.js\");\n\n__webpack_require__(/*! rxjs/add/operator/map */ \"./node_modules/electron-compile/node_modules/rxjs/add/operator/map.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst d = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('electron-compile:compiler-host');\n\n__webpack_require__(/*! ./rig-mime-types */ \"./node_modules/electron-compile/lib/rig-mime-types.js\").init();\n\n// This isn't even my\nconst finalForms = {\n  'text/javascript': true,\n  'application/javascript': true,\n  'text/html': true,\n  'text/css': true,\n  'image/svg+xml': true,\n  'application/json': true\n};\n\n/**\n * This class is the top-level class that encapsulates all of the logic of\n * compiling and caching application code. If you're looking for a \"Main class\",\n * this is it.\n *\n * This class can be created directly but it is usually created via the methods\n * in config-parser, which will among other things, set up the compiler options\n * given a project root.\n *\n * CompilerHost is also the top-level class that knows how to serialize all of the\n * information necessary to recreate itself, either as a development host (i.e.\n * will allow cache misses and actual compilation), or as a read-only version of\n * itself for production.\n */\nclass CompilerHost {\n  /**\n   * Creates an instance of CompilerHost. You probably want to use the methods\n   * in config-parser for development, or {@link createReadonlyFromConfiguration}\n   * for production instead.\n   *\n   * @param  {string} rootCacheDir  The root directory to use for the cache\n   *\n   * @param  {Object} compilers  an Object whose keys are input MIME types and\n   *                             whose values are instances of CompilerBase. Create\n   *                             this via the {@link createCompilers} method in\n   *                             config-parser.\n   *\n   * @param  {FileChangedCache} fileChangeCache  A file-change cache that is\n   *                                             optionally pre-loaded.\n   *\n   * @param  {boolean} readOnlyMode  If True, cache misses will fail and\n   *                                 compilation will not be attempted.\n   *\n   * @param  {CompilerBase} fallbackCompiler (optional)  When a file is compiled\n   *                                         which doesn't have a matching compiler,\n   *                                         this compiler will be used instead. If\n   *                                         null, will fail compilation. A good\n   *                                         alternate fallback is the compiler for\n   *                                         'text/plain', which is guaranteed to be\n   *                                         present.\n   *\n   * @param {string} sourceMapPath (optional) The directory to store sourcemap separately\n   *                               if compiler option enabled to emit.\n   *                               Default to cachePath if not specified.\n   */\n  constructor(rootCacheDir, compilers, fileChangeCache, readOnlyMode) {\n    let fallbackCompiler = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let sourceMapPath = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let mimeTypesToRegister = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n    let compilersByMimeType = Object.assign({}, compilers);\n    Object.assign(this, { rootCacheDir, compilersByMimeType, fileChangeCache, readOnlyMode, fallbackCompiler });\n    this.appRoot = this.fileChangeCache.appRoot;\n\n    this.cachesForCompilers = Object.keys(compilersByMimeType).reduce((acc, x) => {\n      let compiler = compilersByMimeType[x];\n      if (acc.has(compiler)) return acc;\n\n      acc.set(compiler, _compileCache2.default.createFromCompiler(rootCacheDir, compiler, fileChangeCache, readOnlyMode, sourceMapPath));\n      return acc;\n    }, new Map());\n\n    this.mimeTypesToRegister = mimeTypesToRegister || {};\n  }\n\n  /**\n   * Creates a production-mode CompilerHost from the previously saved\n   * configuration\n   *\n   * @param  {string} rootCacheDir  The root directory to use for the cache. This\n   *                                cache must have cache information saved via\n   *                                {@link saveConfiguration}\n   *\n   * @param  {string} appRoot  The top-level directory for your application (i.e.\n   *                           the one which has your package.json).\n   *\n   * @param  {CompilerBase} fallbackCompiler (optional)  When a file is compiled\n   *                                         which doesn't have a matching compiler,\n   *                                         this compiler will be used instead. If\n   *                                         null, will fail compilation. A good\n   *                                         alternate fallback is the compiler for\n   *                                         'text/plain', which is guaranteed to be\n   *                                         present.\n   *\n   * @return {Promise<CompilerHost>}  A read-only CompilerHost\n   */\n  static createReadonlyFromConfiguration(rootCacheDir, appRoot) {\n    let fallbackCompiler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return _asyncToGenerator(function* () {\n      let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');\n      let buf = yield _promise.pfs.readFile(target);\n      let info = JSON.parse((yield _promise.pzlib.gunzip(buf)));\n\n      let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, true);\n\n      let compilers = Object.keys(info.compilers).reduce(function (acc, x) {\n        let cur = info.compilers[x];\n        acc[x] = new _readOnlyCompiler2.default(cur.name, cur.compilerVersion, cur.compilerOptions, cur.inputMimeTypes);\n\n        return acc;\n      }, {});\n\n      return new CompilerHost(rootCacheDir, compilers, fileChangeCache, true, fallbackCompiler, null, info.mimeTypesToRegister);\n    })();\n  }\n\n  /**\n   * Creates a development-mode CompilerHost from the previously saved\n   * configuration.\n   *\n   * @param  {string} rootCacheDir  The root directory to use for the cache. This\n   *                                cache must have cache information saved via\n   *                                {@link saveConfiguration}\n   *\n   * @param  {string} appRoot  The top-level directory for your application (i.e.\n   *                           the one which has your package.json).\n   *\n   * @param  {Object} compilersByMimeType  an Object whose keys are input MIME\n   *                                       types and whose values are instances\n   *                                       of CompilerBase. Create this via the\n   *                                       {@link createCompilers} method in\n   *                                       config-parser.\n   *\n   * @param  {CompilerBase} fallbackCompiler (optional)  When a file is compiled\n   *                                         which doesn't have a matching compiler,\n   *                                         this compiler will be used instead. If\n   *                                         null, will fail compilation. A good\n   *                                         alternate fallback is the compiler for\n   *                                         'text/plain', which is guaranteed to be\n   *                                         present.\n   *\n   * @return {Promise<CompilerHost>}  A read-only CompilerHost\n   */\n  static createFromConfiguration(rootCacheDir, appRoot, compilersByMimeType) {\n    let fallbackCompiler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    return _asyncToGenerator(function* () {\n      let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');\n      let buf = yield _promise.pfs.readFile(target);\n      let info = JSON.parse((yield _promise.pzlib.gunzip(buf)));\n\n      let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, false);\n\n      Object.keys(info.compilers).forEach(function (x) {\n        let cur = info.compilers[x];\n        compilersByMimeType[x].compilerOptions = cur.compilerOptions;\n      });\n\n      return new CompilerHost(rootCacheDir, compilersByMimeType, fileChangeCache, false, fallbackCompiler, null, info.mimeTypesToRegister);\n    })();\n  }\n\n  /**\n   * Saves the current compiler configuration to a file that\n   * {@link createReadonlyFromConfiguration} can use to recreate the current\n   * compiler environment\n   *\n   * @return {Promise}  Completion\n   */\n  saveConfiguration() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let serializedCompilerOpts = Object.keys(_this.compilersByMimeType).reduce(function (acc, x) {\n        let compiler = _this.compilersByMimeType[x];\n        let Klass = Object.getPrototypeOf(compiler).constructor;\n\n        let val = {\n          name: Klass.name,\n          inputMimeTypes: Klass.getInputMimeTypes(),\n          compilerOptions: compiler.compilerOptions,\n          compilerVersion: compiler.getCompilerVersion()\n        };\n\n        acc[x] = val;\n        return acc;\n      }, {});\n\n      let info = {\n        fileChangeCache: _this.fileChangeCache.getSavedData(),\n        compilers: serializedCompilerOpts,\n        mimeTypesToRegister: _this.mimeTypesToRegister\n      };\n\n      let target = _path2.default.join(_this.rootCacheDir, 'compiler-info.json.gz');\n      let buf = yield _promise.pzlib.gzip(new Buffer(JSON.stringify(info)));\n      yield _promise.pfs.writeFile(target, buf);\n    })();\n  }\n\n  /**\n   * Compiles a file and returns the compiled result.\n   *\n   * @param  {string} filePath  The path to the file to compile\n   *\n   * @return {Promise<object>}  An Object with the compiled result\n   *\n   * @property {Object} hashInfo  The hash information returned from getHashForPath\n   * @property {string} code  The source code if the file was a text file\n   * @property {Buffer} binaryData  The file if it was a binary file\n   * @property {string} mimeType  The MIME type saved in the cache.\n   * @property {string[]} dependentFiles  The dependent files returned from\n   *                                      compiling the file, if any.\n   */\n  compile(filePath) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let ret = yield _this2.readOnlyMode ? _this2.compileReadOnly(filePath) : _this2.fullCompile(filePath);\n\n      if (ret.mimeType === 'application/javascript') {\n        _this2.mimeTypesToRegister[_mimeTypes2.default.lookup(filePath)] = true;\n      }\n\n      return ret;\n    })();\n  }\n\n  /**\n   * Handles compilation in read-only mode\n   *\n   * @private\n   */\n  compileReadOnly(filePath) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      // We guarantee that node_modules are always shipped directly\n      let type = _mimeTypes2.default.lookup(filePath);\n      if (_fileChangeCache2.default.isInNodeModules(filePath)) {\n        return {\n          mimeType: type || 'application/javascript',\n          code: yield _promise.pfs.readFile(filePath, 'utf8')\n        };\n      }\n\n      let hashInfo = yield _this3.fileChangeCache.getHashForPath(filePath);\n\n      // NB: Here, we're basically only using the compiler here to find\n      // the appropriate CompileCache\n      let compiler = CompilerHost.shouldPassthrough(hashInfo) ? _this3.getPassthroughCompiler() : _this3.compilersByMimeType[type || '__lolnothere'];\n\n      // NB: We don't put this into shouldPassthrough because Inline HTML\n      // compiler is technically of type finalForms (i.e. a browser can\n      // natively handle this content), yet its compiler is\n      // InlineHtmlCompiler. However, we still want to catch standard CSS files\n      // which will be processed by PassthroughCompiler.\n      if (finalForms[type] && !compiler) {\n        compiler = _this3.getPassthroughCompiler();\n      }\n\n      if (!compiler) {\n        compiler = _this3.fallbackCompiler;\n\n        var _ref = yield compiler.get(filePath);\n\n        let code = _ref.code,\n            binaryData = _ref.binaryData,\n            mimeType = _ref.mimeType;\n\n        return { code: code || binaryData, mimeType };\n      }\n\n      let cache = _this3.cachesForCompilers.get(compiler);\n\n      var _ref2 = yield cache.get(filePath);\n\n      let code = _ref2.code,\n          binaryData = _ref2.binaryData,\n          mimeType = _ref2.mimeType;\n\n\n      code = code || binaryData;\n      if (!code || !mimeType) {\n        throw new Error(`Asked to compile ${filePath} in production, is this file not precompiled?`);\n      }\n\n      return { code, mimeType };\n    })();\n  }\n\n  /**\n   * Handles compilation in read-write mode\n   *\n   * @private\n   */\n  fullCompile(filePath) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      d(`Compiling ${filePath}`);\n      let type = _mimeTypes2.default.lookup(filePath);\n\n      (0, _browserSignal.send)('electron-compile-compiled-file', { filePath, mimeType: type });\n\n      let hashInfo = yield _this4.fileChangeCache.getHashForPath(filePath);\n\n      if (hashInfo.isInNodeModules) {\n        let code = hashInfo.sourceCode || (yield _promise.pfs.readFile(filePath, 'utf8'));\n        code = yield CompilerHost.fixNodeModulesSourceMapping(code, filePath, _this4.fileChangeCache.appRoot);\n        return { code, mimeType: type };\n      }\n\n      let compiler = CompilerHost.shouldPassthrough(hashInfo) ? _this4.getPassthroughCompiler() : _this4.compilersByMimeType[type || '__lolnothere'];\n\n      if (!compiler) {\n        d(`Falling back to passthrough compiler for ${filePath}`);\n        compiler = _this4.fallbackCompiler;\n      }\n\n      if (!compiler) {\n        throw new Error(`Couldn't find a compiler for ${filePath}`);\n      }\n\n      let cache = _this4.cachesForCompilers.get(compiler);\n      return yield cache.getOrFetch(filePath, function (filePath, hashInfo) {\n        return _this4.compileUncached(filePath, hashInfo, compiler);\n      });\n    })();\n  }\n\n  /**\n   * Handles invoking compilers independent of caching\n   *\n   * @private\n   */\n  compileUncached(filePath, hashInfo, compiler) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let inputMimeType = _mimeTypes2.default.lookup(filePath);\n\n      if (hashInfo.isFileBinary) {\n        return {\n          binaryData: hashInfo.binaryData || (yield _promise.pfs.readFile(filePath)),\n          mimeType: inputMimeType,\n          dependentFiles: []\n        };\n      }\n\n      let ctx = {};\n      let code = hashInfo.sourceCode || (yield _promise.pfs.readFile(filePath, 'utf8'));\n\n      if (!(yield compiler.shouldCompileFile(code, ctx))) {\n        d(`Compiler returned false for shouldCompileFile: ${filePath}`);\n        return { code, mimeType: _mimeTypes2.default.lookup(filePath), dependentFiles: [] };\n      }\n\n      let dependentFiles = yield compiler.determineDependentFiles(code, filePath, ctx);\n\n      d(`Using compiler options: ${JSON.stringify(compiler.compilerOptions)}`);\n      let result = yield compiler.compile(code, filePath, ctx);\n\n      let shouldInlineHtmlify = inputMimeType !== 'text/html' && result.mimeType === 'text/html';\n\n      let isPassthrough = result.mimeType === 'text/plain' || !result.mimeType || CompilerHost.shouldPassthrough(hashInfo);\n\n      if (finalForms[result.mimeType] && !shouldInlineHtmlify || isPassthrough) {\n        // Got something we can use in-browser, let's return it\n        return Object.assign(result, { dependentFiles });\n      } else {\n        d(`Recursively compiling result of ${filePath} with non-final MIME type ${result.mimeType}, input was ${inputMimeType}`);\n\n        hashInfo = Object.assign({ sourceCode: result.code, mimeType: result.mimeType }, hashInfo);\n        compiler = _this5.compilersByMimeType[result.mimeType || '__lolnothere'];\n\n        if (!compiler) {\n          d(`Recursive compile failed - intermediate result: ${JSON.stringify(result)}`);\n\n          throw new Error(`Compiling ${filePath} resulted in a MIME type of ${result.mimeType}, which we don't know how to handle`);\n        }\n\n        return yield _this5.compileUncached(`${filePath}.${_mimeTypes2.default.extension(result.mimeType || 'txt')}`, hashInfo, compiler);\n      }\n    })();\n  }\n\n  /**\n   * Pre-caches an entire directory of files recursively. Usually used for\n   * building custom compiler tooling.\n   *\n   * @param  {string} rootDirectory  The top-level directory to compile\n   *\n   * @param  {Function} shouldCompile (optional)  A Function which allows the\n   *                                  caller to disable compiling certain files.\n   *                                  It takes a fully-qualified path to a file,\n   *                                  and should return a Boolean.\n   *\n   * @return {Promise}  Completion.\n   */\n  compileAll(rootDirectory) {\n    var _this6 = this;\n\n    let shouldCompile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _asyncToGenerator(function* () {\n      let should = shouldCompile || function () {\n        return true;\n      };\n\n      yield (0, _forAllFiles.forAllFiles)(rootDirectory, function (f) {\n        if (!should(f)) return;\n\n        d(`Compiling ${f}`);\n        return _this6.compile(f, _this6.compilersByMimeType);\n      });\n    })();\n  }\n\n  listenToCompileEvents() {\n    return (0, _browserSignal.listen)('electron-compile-compiled-file').map((_ref3) => {\n      var _ref4 = _slicedToArray(_ref3, 1);\n\n      let x = _ref4[0];\n      return x;\n    });\n  }\n\n  /*\n   * Sync Methods\n   */\n\n  compileSync(filePath) {\n    let ret = this.readOnlyMode ? this.compileReadOnlySync(filePath) : this.fullCompileSync(filePath);\n\n    if (ret.mimeType === 'application/javascript') {\n      this.mimeTypesToRegister[_mimeTypes2.default.lookup(filePath)] = true;\n    }\n\n    return ret;\n  }\n\n  static createReadonlyFromConfigurationSync(rootCacheDir, appRoot) {\n    let fallbackCompiler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');\n    let buf = _fs2.default.readFileSync(target);\n    let info = JSON.parse(_zlib2.default.gunzipSync(buf));\n\n    let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, true);\n\n    let compilers = Object.keys(info.compilers).reduce((acc, x) => {\n      let cur = info.compilers[x];\n      acc[x] = new _readOnlyCompiler2.default(cur.name, cur.compilerVersion, cur.compilerOptions, cur.inputMimeTypes);\n\n      return acc;\n    }, {});\n\n    return new CompilerHost(rootCacheDir, compilers, fileChangeCache, true, fallbackCompiler, null, info.mimeTypesToRegister);\n  }\n\n  static createFromConfigurationSync(rootCacheDir, appRoot, compilersByMimeType) {\n    let fallbackCompiler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    let target = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');\n    let buf = _fs2.default.readFileSync(target);\n    let info = JSON.parse(_zlib2.default.gunzipSync(buf));\n\n    let fileChangeCache = _fileChangeCache2.default.loadFromData(info.fileChangeCache, appRoot, false);\n\n    Object.keys(info.compilers).forEach(x => {\n      let cur = info.compilers[x];\n      compilersByMimeType[x].compilerOptions = cur.compilerOptions;\n    });\n\n    return new CompilerHost(rootCacheDir, compilersByMimeType, fileChangeCache, false, fallbackCompiler, null, info.mimeTypesToRegister);\n  }\n\n  saveConfigurationSync() {\n    let serializedCompilerOpts = Object.keys(this.compilersByMimeType).reduce((acc, x) => {\n      let compiler = this.compilersByMimeType[x];\n      let Klass = Object.getPrototypeOf(compiler).constructor;\n\n      let val = {\n        name: Klass.name,\n        inputMimeTypes: Klass.getInputMimeTypes(),\n        compilerOptions: compiler.compilerOptions,\n        compilerVersion: compiler.getCompilerVersion()\n      };\n\n      acc[x] = val;\n      return acc;\n    }, {});\n\n    let info = {\n      fileChangeCache: this.fileChangeCache.getSavedData(),\n      compilers: serializedCompilerOpts,\n      mimeTypesToRegister: this.mimeTypesToRegister\n    };\n\n    let target = _path2.default.join(this.rootCacheDir, 'compiler-info.json.gz');\n    let buf = _zlib2.default.gzipSync(new Buffer(JSON.stringify(info)));\n    _fs2.default.writeFileSync(target, buf);\n  }\n\n  compileReadOnlySync(filePath) {\n    // We guarantee that node_modules are always shipped directly\n    let type = _mimeTypes2.default.lookup(filePath);\n    if (_fileChangeCache2.default.isInNodeModules(filePath)) {\n      return {\n        mimeType: type || 'application/javascript',\n        code: _fs2.default.readFileSync(filePath, 'utf8')\n      };\n    }\n\n    let hashInfo = this.fileChangeCache.getHashForPathSync(filePath);\n\n    // We guarantee that node_modules are always shipped directly\n    if (hashInfo.isInNodeModules) {\n      return {\n        mimeType: type,\n        code: hashInfo.sourceCode || _fs2.default.readFileSync(filePath, 'utf8')\n      };\n    }\n\n    // NB: Here, we're basically only using the compiler here to find\n    // the appropriate CompileCache\n    let compiler = CompilerHost.shouldPassthrough(hashInfo) ? this.getPassthroughCompiler() : this.compilersByMimeType[type || '__lolnothere'];\n\n    // NB: We don't put this into shouldPassthrough because Inline HTML\n    // compiler is technically of type finalForms (i.e. a browser can\n    // natively handle this content), yet its compiler is\n    // InlineHtmlCompiler. However, we still want to catch standard CSS files\n    // which will be processed by PassthroughCompiler.\n    if (finalForms[type] && !compiler) {\n      compiler = this.getPassthroughCompiler();\n    }\n\n    if (!compiler) {\n      compiler = this.fallbackCompiler;\n\n      var _compiler$getSync = compiler.getSync(filePath);\n\n      let code = _compiler$getSync.code,\n          binaryData = _compiler$getSync.binaryData,\n          mimeType = _compiler$getSync.mimeType;\n\n      return { code: code || binaryData, mimeType };\n    }\n\n    let cache = this.cachesForCompilers.get(compiler);\n\n    var _cache$getSync = cache.getSync(filePath);\n\n    let code = _cache$getSync.code,\n        binaryData = _cache$getSync.binaryData,\n        mimeType = _cache$getSync.mimeType;\n\n\n    code = code || binaryData;\n    if (!code || !mimeType) {\n      throw new Error(`Asked to compile ${filePath} in production, is this file not precompiled?`);\n    }\n\n    return { code, mimeType };\n  }\n\n  fullCompileSync(filePath) {\n    d(`Compiling ${filePath}`);\n\n    let type = _mimeTypes2.default.lookup(filePath);\n\n    (0, _browserSignal.send)('electron-compile-compiled-file', { filePath, mimeType: type });\n\n    let hashInfo = this.fileChangeCache.getHashForPathSync(filePath);\n\n    if (hashInfo.isInNodeModules) {\n      let code = hashInfo.sourceCode || _fs2.default.readFileSync(filePath, 'utf8');\n      code = CompilerHost.fixNodeModulesSourceMappingSync(code, filePath, this.fileChangeCache.appRoot);\n      return { code, mimeType: type };\n    }\n\n    let compiler = CompilerHost.shouldPassthrough(hashInfo) ? this.getPassthroughCompiler() : this.compilersByMimeType[type || '__lolnothere'];\n\n    if (!compiler) {\n      d(`Falling back to passthrough compiler for ${filePath}`);\n      compiler = this.fallbackCompiler;\n    }\n\n    if (!compiler) {\n      throw new Error(`Couldn't find a compiler for ${filePath}`);\n    }\n\n    let cache = this.cachesForCompilers.get(compiler);\n    return cache.getOrFetchSync(filePath, (filePath, hashInfo) => this.compileUncachedSync(filePath, hashInfo, compiler));\n  }\n\n  compileUncachedSync(filePath, hashInfo, compiler) {\n    let inputMimeType = _mimeTypes2.default.lookup(filePath);\n\n    if (hashInfo.isFileBinary) {\n      return {\n        binaryData: hashInfo.binaryData || _fs2.default.readFileSync(filePath),\n        mimeType: inputMimeType,\n        dependentFiles: []\n      };\n    }\n\n    let ctx = {};\n    let code = hashInfo.sourceCode || _fs2.default.readFileSync(filePath, 'utf8');\n\n    if (!compiler.shouldCompileFileSync(code, ctx)) {\n      d(`Compiler returned false for shouldCompileFile: ${filePath}`);\n      return { code, mimeType: _mimeTypes2.default.lookup(filePath), dependentFiles: [] };\n    }\n\n    let dependentFiles = compiler.determineDependentFilesSync(code, filePath, ctx);\n\n    let result = compiler.compileSync(code, filePath, ctx);\n\n    let shouldInlineHtmlify = inputMimeType !== 'text/html' && result.mimeType === 'text/html';\n\n    let isPassthrough = result.mimeType === 'text/plain' || !result.mimeType || CompilerHost.shouldPassthrough(hashInfo);\n\n    if (finalForms[result.mimeType] && !shouldInlineHtmlify || isPassthrough) {\n      // Got something we can use in-browser, let's return it\n      return Object.assign(result, { dependentFiles });\n    } else {\n      d(`Recursively compiling result of ${filePath} with non-final MIME type ${result.mimeType}, input was ${inputMimeType}`);\n\n      hashInfo = Object.assign({ sourceCode: result.code, mimeType: result.mimeType }, hashInfo);\n      compiler = this.compilersByMimeType[result.mimeType || '__lolnothere'];\n\n      if (!compiler) {\n        d(`Recursive compile failed - intermediate result: ${JSON.stringify(result)}`);\n\n        throw new Error(`Compiling ${filePath} resulted in a MIME type of ${result.mimeType}, which we don't know how to handle`);\n      }\n\n      return this.compileUncachedSync(`${filePath}.${_mimeTypes2.default.extension(result.mimeType || 'txt')}`, hashInfo, compiler);\n    }\n  }\n\n  compileAllSync(rootDirectory) {\n    let shouldCompile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    let should = shouldCompile || function () {\n      return true;\n    };\n\n    (0, _forAllFiles.forAllFilesSync)(rootDirectory, f => {\n      if (!should(f)) return;\n      return this.compileSync(f, this.compilersByMimeType);\n    });\n  }\n\n  /*\n   * Other stuff\n   */\n\n  /**\n   * Returns the passthrough compiler\n   *\n   * @private\n   */\n  getPassthroughCompiler() {\n    return this.compilersByMimeType['text/plain'];\n  }\n\n  /**\n   * Determines whether we should even try to compile the content. Note that in\n   * some cases, content will still be in cache even if this returns true, and\n   * in other cases (isInNodeModules), we'll know explicitly to not even bother\n   * looking in the cache.\n   *\n   * @private\n   */\n  static shouldPassthrough(hashInfo) {\n    return hashInfo.isMinified || hashInfo.isInNodeModules || hashInfo.hasSourceMap || hashInfo.isFileBinary;\n  }\n\n  /**\n   * Look at the code of a node modules and see the sourceMapping path.\n   * If there is any, check the path and try to fix it with and\n   * root relative path.\n   * @private\n   */\n  static fixNodeModulesSourceMapping(sourceCode, sourcePath, appRoot) {\n    return _asyncToGenerator(function* () {\n      let regexSourceMapping = /\\/\\/#.*sourceMappingURL=(?!data:)([^\"'].*)/i;\n      let sourceMappingCheck = sourceCode.match(regexSourceMapping);\n\n      if (sourceMappingCheck && sourceMappingCheck[1] && sourceMappingCheck[1] !== '') {\n        let sourceMapPath = sourceMappingCheck[1];\n\n        try {\n          yield _promise.pfs.stat(sourceMapPath);\n        } catch (error) {\n          let normRoot = _path2.default.normalize(appRoot);\n          let absPathToModule = _path2.default.dirname(sourcePath.replace(normRoot, '').substring(1));\n          let newMapPath = _path2.default.join(absPathToModule, sourceMapPath);\n\n          return sourceCode.replace(regexSourceMapping, `//# sourceMappingURL=${newMapPath}`);\n        }\n      }\n\n      return sourceCode;\n    })();\n  }\n\n  /**\n   * Look at the code of a node modules and see the sourceMapping path.\n   * If there is any, check the path and try to fix it with and\n   * root relative path.\n   * @private\n   */\n  static fixNodeModulesSourceMappingSync(sourceCode, sourcePath, appRoot) {\n    let regexSourceMapping = /\\/\\/#.*sourceMappingURL=(?!data:)([^\"'].*)/i;\n    let sourceMappingCheck = sourceCode.match(regexSourceMapping);\n\n    if (sourceMappingCheck && sourceMappingCheck[1] && sourceMappingCheck[1] !== '') {\n      let sourceMapPath = sourceMappingCheck[1];\n\n      try {\n        _fs2.default.statSync(sourceMapPath);\n      } catch (error) {\n        let normRoot = _path2.default.normalize(appRoot);\n        let absPathToModule = _path2.default.dirname(sourcePath.replace(normRoot, '').substring(1));\n        let newMapPath = _path2.default.join(absPathToModule, sourceMapPath);\n\n        return sourceCode.replace(regexSourceMapping, `//# sourceMappingURL=${newMapPath}`);\n      }\n    }\n\n    return sourceCode;\n  }\n}\nexports.default = CompilerHost;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/compiler-host.js?")},"./node_modules/electron-compile/lib/config-parser.js":
/*!************************************************************!*\
  !*** ./node_modules/electron-compile/lib/config-parser.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCompilerHostFromProjectRoot = exports.createCompilerHostFromConfigFile = exports.createCompilerHostFromBabelRc = undefined;\n\n/**\n * Creates a compiler host from a .babelrc file. This method is usually called\n * from {@link createCompilerHostFromProjectRoot} instead of used directly.\n *\n * @param  {string} file  The path to a .babelrc file\n *\n * @param  {string} rootCacheDir (optional)  The directory to use as a cache.\n *\n * @return {Promise<CompilerHost>}  A set-up compiler host\n */\nlet createCompilerHostFromBabelRc = exports.createCompilerHostFromBabelRc = (() => {\n  var _ref = _asyncToGenerator(function* (file) {\n    let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    let info = JSON.parse((yield _promise.pfs.readFile(file, 'utf8')));\n\n    // package.json\n    if ('babel' in info) {\n      info = info.babel;\n    }\n\n    if ('env' in info) {\n      let ourEnv = process.env.BABEL_ENV || \"development\" || 'development';\n      info = info.env[ourEnv];\n    }\n\n    // Are we still package.json (i.e. is there no babel info whatsoever?)\n    if ('name' in info && 'version' in info) {\n      let appRoot = _path2.default.dirname(file);\n      return createCompilerHostFromConfiguration({\n        appRoot: appRoot,\n        options: getDefaultConfiguration(appRoot),\n        rootCacheDir,\n        sourceMapPath\n      });\n    }\n\n    return createCompilerHostFromConfiguration({\n      appRoot: _path2.default.dirname(file),\n      options: {\n        'application/javascript': info\n      },\n      rootCacheDir,\n      sourceMapPath\n    });\n  });\n\n  return function createCompilerHostFromBabelRc(_x5) {\n    return _ref.apply(this, arguments);\n  };\n})();\n\n/**\n * Creates a compiler host from a .compilerc file. This method is usually called\n * from {@link createCompilerHostFromProjectRoot} instead of used directly.\n *\n * @param  {string} file  The path to a .compilerc file\n *\n * @param  {string} rootCacheDir (optional)  The directory to use as a cache.\n *\n * @return {Promise<CompilerHost>}  A set-up compiler host\n */\n\n\nlet createCompilerHostFromConfigFile = exports.createCompilerHostFromConfigFile = (() => {\n  var _ref2 = _asyncToGenerator(function* (file) {\n    let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    let info = JSON.parse((yield _promise.pfs.readFile(file, 'utf8')));\n\n    if ('env' in info) {\n      let ourEnv = process.env.ELECTRON_COMPILE_ENV || \"development\" || 'development';\n      info = info.env[ourEnv];\n    }\n\n    return createCompilerHostFromConfiguration({\n      appRoot: _path2.default.dirname(file),\n      options: info,\n      rootCacheDir,\n      sourceMapPath\n    });\n  });\n\n  return function createCompilerHostFromConfigFile(_x8) {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\n/**\n * Creates a configured {@link CompilerHost} instance from the project root\n * directory. This method first searches for a .compilerc (or .compilerc.json), then falls back to the\n * default locations for Babel configuration info. If neither are found, defaults\n * to standard settings\n *\n * @param  {string} rootDir  The root application directory (i.e. the directory\n *                           that has the app's package.json)\n *\n * @param  {string} rootCacheDir (optional)  The directory to use as a cache.\n *\n * @param {string} sourceMapPath (optional) The directory to store sourcemap separately\n *                               if compiler option enabled to emit.\n *\n * @return {Promise<CompilerHost>}  A set-up compiler host\n */\n\n\nlet createCompilerHostFromProjectRoot = exports.createCompilerHostFromProjectRoot = (() => {\n  var _ref3 = _asyncToGenerator(function* (rootDir) {\n    let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    let compilerc = _path2.default.join(rootDir, '.compilerc');\n    if (statSyncNoException(compilerc)) {\n      d(`Found a .compilerc at ${compilerc}, using it`);\n      return yield createCompilerHostFromConfigFile(compilerc, rootCacheDir, sourceMapPath);\n    }\n    compilerc += '.json';\n    if (statSyncNoException(compilerc)) {\n      d(`Found a .compilerc at ${compilerc}, using it`);\n      return yield createCompilerHostFromConfigFile(compilerc, rootCacheDir, sourceMapPath);\n    }\n\n    let babelrc = _path2.default.join(rootDir, '.babelrc');\n    if (statSyncNoException(babelrc)) {\n      d(`Found a .babelrc at ${babelrc}, using it`);\n      return yield createCompilerHostFromBabelRc(babelrc, rootCacheDir, sourceMapPath);\n    }\n\n    d(`Using package.json or default parameters at ${rootDir}`);\n    return yield createCompilerHostFromBabelRc(_path2.default.join(rootDir, 'package.json'), rootCacheDir, sourceMapPath);\n  });\n\n  return function createCompilerHostFromProjectRoot(_x11) {\n    return _ref3.apply(this, arguments);\n  };\n})();\n\nexports.initializeGlobalHooks = initializeGlobalHooks;\nexports.init = init;\nexports.createCompilerHostFromConfiguration = createCompilerHostFromConfiguration;\nexports.createCompilerHostFromBabelRcSync = createCompilerHostFromBabelRcSync;\nexports.createCompilerHostFromConfigFileSync = createCompilerHostFromConfigFileSync;\nexports.createCompilerHostFromProjectRootSync = createCompilerHostFromProjectRootSync;\nexports.calculateDefaultCompileCacheDirectory = calculateDefaultCompileCacheDirectory;\nexports.getDefaultConfiguration = getDefaultConfiguration;\nexports.createCompilers = createCompilers;\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = __webpack_require__(/*! path */ \"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\nvar _zlib2 = _interopRequireDefault(_zlib);\n\nvar _mkdirp = __webpack_require__(/*! mkdirp */ \"./node_modules/mkdirp/index.js\");\n\nvar _mkdirp2 = _interopRequireDefault(_mkdirp);\n\nvar _promise = __webpack_require__(/*! ./promise */ \"./node_modules/electron-compile/lib/promise.js\");\n\nvar _fileChangeCache = __webpack_require__(/*! ./file-change-cache */ \"./node_modules/electron-compile/lib/file-change-cache.js\");\n\nvar _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);\n\nvar _compilerHost = __webpack_require__(/*! ./compiler-host */ \"./node_modules/electron-compile/lib/compiler-host.js\");\n\nvar _compilerHost2 = _interopRequireDefault(_compilerHost);\n\nvar _requireHook = __webpack_require__(/*! ./require-hook */ \"./node_modules/electron-compile/lib/require-hook.js\");\n\nvar _requireHook2 = _interopRequireDefault(_requireHook);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst d = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('electron-compile:config-parser');\n\n// NB: We intentionally delay-load this so that in production, you can create\n// cache-only versions of these compilers\nlet allCompilerClasses = null;\n\nfunction statSyncNoException(fsPath) {\n  if ('statSyncNoException' in _fs2.default) {\n    return _fs2.default.statSyncNoException(fsPath);\n  }\n\n  try {\n    return _fs2.default.statSync(fsPath);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Initialize the global hooks (protocol hook for file:, node.js hook)\n * independent of initializing the compiler. This method is usually called by\n * init instead of directly\n *\n * @param {CompilerHost} compilerHost  The compiler host to use.\n *\n */\nfunction initializeGlobalHooks(compilerHost) {\n  let isProduction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  let globalVar = global || window;\n  globalVar.globalCompilerHost = compilerHost;\n\n  (0, _requireHook2.default)(compilerHost, isProduction);\n\n  if ('type' in process && process.type === 'browser') {\n    var _require = __webpack_require__(/*! electron */ \"electron\");\n\n    const app = _require.app;\n\n    var _require2 = __webpack_require__(/*! ./protocol-hook */ \"./node_modules/electron-compile/lib/protocol-hook.js\");\n\n    const initializeProtocolHook = _require2.initializeProtocolHook;\n\n\n    let protoify = function () {\n      initializeProtocolHook(compilerHost);\n    };\n    if (app.isReady()) {\n      protoify();\n    } else {\n      app.on('ready', protoify);\n    }\n  }\n}\n\n/**\n * Initialize electron-compile and set it up, either for development or\n * production use. This is almost always the only method you need to use in order\n * to use electron-compile.\n *\n * @param  {string} appRoot  The top-level directory for your application (i.e.\n *                           the one which has your package.json).\n *\n * @param  {string} mainModule  The module to require in, relative to the module\n *                              calling init, that will start your app. Write this\n *                              as if you were writing a require call from here.\n *\n * @param  {bool} productionMode   If explicitly True/False, will set read-only\n *                                 mode to be disabled/enabled. If not, we'll\n *                                 guess based on the presence of a production\n *                                 cache.\n *\n * @param  {string} cacheDir  If not passed in, read-only will look in\n *                            `appRoot/.cache` and dev mode will compile to a\n *                            temporary directory. If it is passed in, both modes\n *                            will cache to/from `appRoot/{cacheDir}`\n *\n * @param {string} sourceMapPath (optional) The directory to store sourcemap separately\n *                               if compiler option enabled to emit.\n *                               Default to cachePath if not specified, will be ignored for read-only mode.\n */\nfunction init(appRoot, mainModule) {\n  let productionMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let cacheDir = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  let sourceMapPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n  let compilerHost = null;\n  let rootCacheDir = _path2.default.join(appRoot, cacheDir || '.cache');\n\n  if (productionMode === null) {\n    productionMode = !!statSyncNoException(rootCacheDir);\n  }\n\n  if (productionMode) {\n    compilerHost = _compilerHost2.default.createReadonlyFromConfigurationSync(rootCacheDir, appRoot);\n  } else {\n    // if cacheDir was passed in, pass it along. Otherwise, default to a tempdir.\n    const cachePath = cacheDir ? rootCacheDir : null;\n    const mapPath = sourceMapPath ? _path2.default.join(appRoot, sourceMapPath) : cachePath;\n    compilerHost = createCompilerHostFromProjectRootSync(appRoot, cachePath, mapPath);\n  }\n\n  initializeGlobalHooks(compilerHost, productionMode);\n  (void 0)(mainModule);\n}\n\n/**\n * Creates a {@link CompilerHost} with the given information. This method is\n * usually called by {@link createCompilerHostFromProjectRoot}.\n *\n * @private\n */\nfunction createCompilerHostFromConfiguration(info) {\n  let compilers = createCompilers();\n  let rootCacheDir = info.rootCacheDir || calculateDefaultCompileCacheDirectory();\n  const sourceMapPath = info.sourceMapPath || info.rootCacheDir;\n\n  if (info.sourceMapPath) {\n    createSourceMapDirectory(sourceMapPath);\n  }\n\n  d(`Creating CompilerHost: ${JSON.stringify(info)}, rootCacheDir = ${rootCacheDir}, sourceMapPath = ${sourceMapPath}`);\n  let fileChangeCache = new _fileChangeCache2.default(info.appRoot);\n\n  let compilerInfo = _path2.default.join(rootCacheDir, 'compiler-info.json.gz');\n  let json = {};\n  if (_fs2.default.existsSync(compilerInfo)) {\n    let buf = _fs2.default.readFileSync(compilerInfo);\n    json = JSON.parse(_zlib2.default.gunzipSync(buf));\n    fileChangeCache = _fileChangeCache2.default.loadFromData(json.fileChangeCache, info.appRoot, false);\n  }\n\n  Object.keys(info.options || {}).forEach(x => {\n    let opts = info.options[x];\n    if (!(x in compilers)) {\n      throw new Error(`Found compiler settings for missing compiler: ${x}`);\n    }\n\n    // NB: Let's hope this isn't a valid compiler option...\n    if (opts.passthrough) {\n      compilers[x] = compilers['text/plain'];\n      delete opts.passthrough;\n    }\n\n    d(`Setting options for ${x}: ${JSON.stringify(opts)}`);\n    compilers[x].compilerOptions = opts;\n  });\n\n  let ret = new _compilerHost2.default(rootCacheDir, compilers, fileChangeCache, false, compilers['text/plain'], null, json.mimeTypesToRegister);\n\n  // NB: It's super important that we guarantee that the configuration is saved\n  // out, because we'll need to re-read it in the renderer process\n  d(`Created compiler host with options: ${JSON.stringify(info)}`);\n  ret.saveConfigurationSync();\n  return ret;\n}function createCompilerHostFromBabelRcSync(file) {\n  let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  let info = JSON.parse(_fs2.default.readFileSync(file, 'utf8'));\n\n  // package.json\n  if ('babel' in info) {\n    info = info.babel;\n  }\n\n  if ('env' in info) {\n    let ourEnv = process.env.BABEL_ENV || \"development\" || 'development';\n    info = info.env[ourEnv];\n  }\n\n  // Are we still package.json (i.e. is there no babel info whatsoever?)\n  if ('name' in info && 'version' in info) {\n    let appRoot = _path2.default.dirname(file);\n    return createCompilerHostFromConfiguration({\n      appRoot: appRoot,\n      options: getDefaultConfiguration(appRoot),\n      rootCacheDir,\n      sourceMapPath\n    });\n  }\n\n  return createCompilerHostFromConfiguration({\n    appRoot: _path2.default.dirname(file),\n    options: {\n      'application/javascript': info\n    },\n    rootCacheDir,\n    sourceMapPath\n  });\n}\n\nfunction createCompilerHostFromConfigFileSync(file) {\n  let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  let info = JSON.parse(_fs2.default.readFileSync(file, 'utf8'));\n\n  if ('env' in info) {\n    let ourEnv = process.env.ELECTRON_COMPILE_ENV || \"development\" || 'development';\n    info = info.env[ourEnv];\n  }\n\n  return createCompilerHostFromConfiguration({\n    appRoot: _path2.default.dirname(file),\n    options: info,\n    rootCacheDir,\n    sourceMapPath\n  });\n}\n\nfunction createCompilerHostFromProjectRootSync(rootDir) {\n  let rootCacheDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let sourceMapPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  let compilerc = _path2.default.join(rootDir, '.compilerc');\n  if (statSyncNoException(compilerc)) {\n    d(`Found a .compilerc at ${compilerc}, using it`);\n    return createCompilerHostFromConfigFileSync(compilerc, rootCacheDir, sourceMapPath);\n  }\n\n  let babelrc = _path2.default.join(rootDir, '.babelrc');\n  if (statSyncNoException(babelrc)) {\n    d(`Found a .babelrc at ${babelrc}, using it`);\n    return createCompilerHostFromBabelRcSync(babelrc, rootCacheDir, sourceMapPath);\n  }\n\n  d(`Using package.json or default parameters at ${rootDir}`);\n  return createCompilerHostFromBabelRcSync(_path2.default.join(rootDir, 'package.json'), rootCacheDir, sourceMapPath);\n}\n\n/**\n * Returns what electron-compile would use as a default rootCacheDir. Usually only\n * used for debugging purposes\n *\n * @return {string}  A path that may or may not exist where electron-compile would\n *                   set up a development mode cache.\n */\nfunction calculateDefaultCompileCacheDirectory() {\n  let tmpDir = process.env.TEMP || process.env.TMPDIR || '/tmp';\n  let hash = __webpack_require__(/*! crypto */ \"crypto\").createHash('md5').update(process.execPath).digest('hex');\n\n  let cacheDir = _path2.default.join(tmpDir, `compileCache_${hash}`);\n  _mkdirp2.default.sync(cacheDir);\n\n  d(`Using default cache directory: ${cacheDir}`);\n  return cacheDir;\n}\n\nfunction createSourceMapDirectory(sourceMapPath) {\n  _mkdirp2.default.sync(sourceMapPath);\n  d(`Using separate sourcemap path at ${sourceMapPath}`);\n}\n\nfunction getElectronVersion(rootDir) {\n  if (process.versions.electron) {\n    return process.versions.electron;\n  }\n\n  let ourPkgJson = __webpack_require__(\"./node_modules/electron-compile/lib sync recursive\")(_path2.default.join(rootDir, 'package.json'));\n\n  let version = ['electron-prebuilt-compile', 'electron'].map(mod => {\n    if (ourPkgJson.devDependencies && ourPkgJson.devDependencies[mod]) {\n      // NB: lol this code\n      let verRange = ourPkgJson.devDependencies[mod];\n      let m = verRange.match(/(\\d+\\.\\d+\\.\\d+)/);\n      if (m && m[1]) return m[1];\n    }\n\n    try {\n      return process.mainModule.require(`${mod}/package.json`).version;\n    } catch (e) {\n      // NB: This usually doesn't work, but sometimes maybe?\n    }\n\n    try {\n      let p = _path2.default.join(rootDir, mod, 'package.json');\n      return __webpack_require__(\"./node_modules/electron-compile/lib sync recursive\")(p).version;\n    } catch (e) {\n      return null;\n    }\n  }).find(x => !!x);\n\n  if (!version) {\n    throw new Error(\"Can't automatically discover the version of Electron, you probably need a .compilerc file\");\n  }\n\n  return version;\n}\n\n/**\n * Returns the default .configrc if no configuration information can be found.\n *\n * @return {Object}  A list of default config settings for electron-compiler.\n */\nfunction getDefaultConfiguration(rootDir) {\n  return {\n    'application/javascript': {\n      \"presets\": [[\"env\", {\n        \"targets\": {\n          \"electron\": getElectronVersion(rootDir)\n        }\n      }], \"react\"],\n      \"sourceMaps\": \"inline\"\n    }\n  };\n}\n\n/**\n * Allows you to create new instances of all compilers that are supported by\n * electron-compile and use them directly. Currently supports Babel, CoffeeScript,\n * TypeScript, Less, and Jade.\n *\n * @return {Object}  An Object whose Keys are MIME types, and whose values\n * are instances of @{link CompilerBase}.\n */\nfunction createCompilers() {\n  if (!allCompilerClasses) {\n    // First we want to see if electron-compilers itself has been installed with\n    // devDependencies. If that's not the case, check to see if\n    // electron-compilers is installed as a peer dependency (probably as a\n    // devDependency of the root project).\n    const locations = ['electron-compilers', '../../electron-compilers'];\n\n    for (let location of locations) {\n      try {\n        allCompilerClasses = __webpack_require__(\"./node_modules/electron-compile/lib sync recursive\")(location);\n      } catch (e) {\n        // Yolo\n      }\n    }\n\n    if (!allCompilerClasses) {\n      throw new Error(\"Electron compilers not found but were requested to be loaded\");\n    }\n  }\n\n  // NB: Note that this code is carefully set up so that InlineHtmlCompiler\n  // (i.e. classes with `createFromCompilers`) initially get an empty object,\n  // but will have a reference to the final result of what we return, which\n  // resolves the circular dependency we'd otherwise have here.\n  let ret = {};\n  let instantiatedClasses = allCompilerClasses.map(Klass => {\n    if ('createFromCompilers' in Klass) {\n      return Klass.createFromCompilers(ret);\n    } else {\n      return new Klass();\n    }\n  });\n\n  instantiatedClasses.reduce((acc, x) => {\n    let Klass = Object.getPrototypeOf(x).constructor;\n\n    for (let type of Klass.getInputMimeTypes()) {\n      acc[type] = x;\n    }\n    return acc;\n  }, ret);\n\n  return ret;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/config-parser.js?")},"./node_modules/electron-compile/lib/custom-operators.js":
/*!***************************************************************!*\
  !*** ./node_modules/electron-compile/lib/custom-operators.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _Observable = __webpack_require__(/*! rxjs/Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n\nvar _async = __webpack_require__(/*! rxjs/scheduler/async */ "./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js");\n\n__webpack_require__(/*! rxjs/add/observable/range */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/range.js");\n\n__webpack_require__(/*! rxjs/add/observable/throw */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/throw.js");\n\n__webpack_require__(/*! rxjs/add/observable/timer */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/timer.js");\n\n__webpack_require__(/*! rxjs/add/operator/mergeMap */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/mergeMap.js");\n\n__webpack_require__(/*! rxjs/add/operator/map */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/map.js");\n\n__webpack_require__(/*! rxjs/add/operator/retryWhen */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/retryWhen.js");\n\n__webpack_require__(/*! rxjs/add/operator/switch */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/switch.js");\n\n__webpack_require__(/*! rxjs/add/operator/zip */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/zip.js");\n\nfunction retryWithDelayOrError(errors, maxRetries) {\n  return _Observable.Observable.range(1, maxRetries + 1).zip(errors, (i, e) => {\n    return { attempts: i, error: e };\n  }).mergeMap((_ref) => {\n    let attempts = _ref.attempts,\n        error = _ref.error;\n\n    return attempts <= maxRetries ? _Observable.Observable.timer(attempts * 1000) : _Observable.Observable.throw(error);\n  });\n}\n\nconst newCoolOperators = {\n  guaranteedThrottle: function (time) {\n    let scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _async.async;\n\n    return this.map(x => _Observable.Observable.timer(time, scheduler).map(() => x)).switch();\n  },\n\n  retryAtIntervals: function () {\n    let maxRetries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n\n    return this.retryWhen(errors => retryWithDelayOrError(errors, maxRetries));\n  }\n};\n\nfor (const key of Object.keys(newCoolOperators)) {\n  _Observable.Observable.prototype[key] = newCoolOperators[key];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jdXN0b20tb3BlcmF0b3JzLmpzIl0sIm5hbWVzIjpbInJldHJ5V2l0aERlbGF5T3JFcnJvciIsImVycm9ycyIsIm1heFJldHJpZXMiLCJPYnNlcnZhYmxlIiwicmFuZ2UiLCJ6aXAiLCJpIiwiZSIsImF0dGVtcHRzIiwiZXJyb3IiLCJtZXJnZU1hcCIsInRpbWVyIiwidGhyb3ciLCJuZXdDb29sT3BlcmF0b3JzIiwiZ3VhcmFudGVlZFRocm90dGxlIiwidGltZSIsInNjaGVkdWxlciIsImFzeW5jIiwibWFwIiwieCIsInN3aXRjaCIsInJldHJ5QXRJbnRlcnZhbHMiLCJyZXRyeVdoZW4iLCJrZXkiLCJPYmplY3QiLCJrZXlzIiwicHJvdG90eXBlIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLHFCQUFULENBQStCQyxNQUEvQixFQUF1Q0MsVUFBdkMsRUFBbUQ7QUFDakQsU0FBT0MsdUJBQVdDLEtBQVgsQ0FBaUIsQ0FBakIsRUFBb0JGLGFBQWEsQ0FBakMsRUFDSkcsR0FESSxDQUNBSixNQURBLEVBQ1EsQ0FBQ0ssQ0FBRCxFQUFJQyxDQUFKLEtBQVU7QUFDckIsV0FBTyxFQUFFQyxVQUFVRixDQUFaLEVBQWVHLE9BQU9GLENBQXRCLEVBQVA7QUFDRCxHQUhJLEVBSUpHLFFBSkksQ0FJSyxVQUF1QjtBQUFBLFFBQXJCRixRQUFxQixRQUFyQkEsUUFBcUI7QUFBQSxRQUFYQyxLQUFXLFFBQVhBLEtBQVc7O0FBQy9CLFdBQU9ELFlBQVlOLFVBQVosR0FDTEMsdUJBQVdRLEtBQVgsQ0FBaUJILFdBQVcsSUFBNUIsQ0FESyxHQUVMTCx1QkFBV1MsS0FBWCxDQUFpQkgsS0FBakIsQ0FGRjtBQUdELEdBUkksQ0FBUDtBQVNEOztBQUVELE1BQU1JLG1CQUFtQjtBQUN2QkMsc0JBQW9CLFVBQVNDLElBQVQsRUFBa0M7QUFBQSxRQUFuQkMsU0FBbUIsdUVBQVBDLFlBQU87O0FBQ3BELFdBQU8sS0FDSkMsR0FESSxDQUNDQyxDQUFELElBQU9oQix1QkFBV1EsS0FBWCxDQUFpQkksSUFBakIsRUFBdUJDLFNBQXZCLEVBQWtDRSxHQUFsQyxDQUFzQyxNQUFNQyxDQUE1QyxDQURQLEVBRUpDLE1BRkksRUFBUDtBQUdELEdBTHNCOztBQU92QkMsb0JBQWtCLFlBQXlCO0FBQUEsUUFBaEJuQixVQUFnQix1RUFBSCxDQUFHOztBQUN6QyxXQUFPLEtBQUtvQixTQUFMLENBQWdCckIsTUFBRCxJQUFZRCxzQkFBc0JDLE1BQXRCLEVBQThCQyxVQUE5QixDQUEzQixDQUFQO0FBQ0Q7QUFUc0IsQ0FBekI7O0FBYUEsS0FBSyxNQUFNcUIsR0FBWCxJQUFrQkMsT0FBT0MsSUFBUCxDQUFZWixnQkFBWixDQUFsQixFQUFpRDtBQUMvQ1YseUJBQVd1QixTQUFYLENBQXFCSCxHQUFyQixJQUE0QlYsaUJBQWlCVSxHQUFqQixDQUE1QjtBQUNEIiwiZmlsZSI6ImN1c3RvbS1vcGVyYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5pbXBvcnQge2FzeW5jfSBmcm9tICdyeGpzL3NjaGVkdWxlci9hc3luYyc7XG5cbmltcG9ydCAncnhqcy9hZGQvb2JzZXJ2YWJsZS9yYW5nZSc7XG5pbXBvcnQgJ3J4anMvYWRkL29ic2VydmFibGUvdGhyb3cnO1xuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL3RpbWVyJztcblxuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9tZXJnZU1hcCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL21hcCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3JldHJ5V2hlbic7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3N3aXRjaCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3ppcCc7XG5cbmZ1bmN0aW9uIHJldHJ5V2l0aERlbGF5T3JFcnJvcihlcnJvcnMsIG1heFJldHJpZXMpIHtcbiAgcmV0dXJuIE9ic2VydmFibGUucmFuZ2UoMSwgbWF4UmV0cmllcyArIDEpXG4gICAgLnppcChlcnJvcnMsIChpLCBlKSA9PiB7XG4gICAgICByZXR1cm4geyBhdHRlbXB0czogaSwgZXJyb3I6IGUgfTtcbiAgICB9KVxuICAgIC5tZXJnZU1hcCgoe2F0dGVtcHRzLCBlcnJvcn0pID0+IHtcbiAgICAgIHJldHVybiBhdHRlbXB0cyA8PSBtYXhSZXRyaWVzID9cbiAgICAgICAgT2JzZXJ2YWJsZS50aW1lcihhdHRlbXB0cyAqIDEwMDApIDpcbiAgICAgICAgT2JzZXJ2YWJsZS50aHJvdyhlcnJvcik7XG4gICAgfSk7XG59XG5cbmNvbnN0IG5ld0Nvb2xPcGVyYXRvcnMgPSB7XG4gIGd1YXJhbnRlZWRUaHJvdHRsZTogZnVuY3Rpb24odGltZSwgc2NoZWR1bGVyID0gYXN5bmMpIHtcbiAgICByZXR1cm4gdGhpc1xuICAgICAgLm1hcCgoeCkgPT4gT2JzZXJ2YWJsZS50aW1lcih0aW1lLCBzY2hlZHVsZXIpLm1hcCgoKSA9PiB4KSlcbiAgICAgIC5zd2l0Y2goKTtcbiAgfSxcblxuICByZXRyeUF0SW50ZXJ2YWxzOiBmdW5jdGlvbihtYXhSZXRyaWVzID0gMykge1xuICAgIHJldHVybiB0aGlzLnJldHJ5V2hlbigoZXJyb3JzKSA9PiByZXRyeVdpdGhEZWxheU9yRXJyb3IoZXJyb3JzLCBtYXhSZXRyaWVzKSk7XG4gIH0sXG59O1xuXG5cbmZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG5ld0Nvb2xPcGVyYXRvcnMpKSB7XG4gIE9ic2VydmFibGUucHJvdG90eXBlW2tleV0gPSBuZXdDb29sT3BlcmF0b3JzW2tleV07XG59XG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/custom-operators.js?')},"./node_modules/electron-compile/lib/digest-for-object.js":
/*!****************************************************************!*\
  !*** ./node_modules/electron-compile/lib/digest-for-object.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDigestForObject;\n\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction updateDigestForJsonValue(shasum, value) {\n  // Implmentation is similar to that of pretty-printing a JSON object, except:\n  // * Strings are not escaped.\n  // * No effort is made to avoid trailing commas.\n  // These shortcuts should not affect the correctness of this function.\n  const type = typeof value;\n\n  if (type === 'string') {\n    shasum.update('\"', 'utf8');\n    shasum.update(value, 'utf8');\n    shasum.update('\"', 'utf8');\n    return;\n  }\n\n  if (type === 'boolean' || type === 'number') {\n    shasum.update(value.toString(), 'utf8');\n    return;\n  }\n\n  if (!value) {\n    shasum.update('null', 'utf8');\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    shasum.update('[', 'utf8');\n    for (let i = 0; i < value.length; i++) {\n      updateDigestForJsonValue(shasum, value[i]);\n      shasum.update(',', 'utf8');\n    }\n    shasum.update(']', 'utf8');\n    return;\n  }\n\n  // value must be an object: be sure to sort the keys.\n  let keys = Object.keys(value);\n  keys.sort();\n\n  shasum.update('{', 'utf8');\n\n  for (let i = 0; i < keys.length; i++) {\n    updateDigestForJsonValue(shasum, keys[i]);\n    shasum.update(': ', 'utf8');\n    updateDigestForJsonValue(shasum, value[keys[i]]);\n    shasum.update(',', 'utf8');\n  }\n\n  shasum.update('}', 'utf8');\n}\n\n/**\n * Creates a hash from a JS object\n * \n * @private  \n */\nfunction createDigestForObject(obj) {\n  let sha1 = _crypto2.default.createHash('sha1');\n  updateDigestForJsonValue(sha1, obj);\n\n  return sha1.digest('hex');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kaWdlc3QtZm9yLW9iamVjdC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVEaWdlc3RGb3JPYmplY3QiLCJ1cGRhdGVEaWdlc3RGb3JKc29uVmFsdWUiLCJzaGFzdW0iLCJ2YWx1ZSIsInR5cGUiLCJ1cGRhdGUiLCJ0b1N0cmluZyIsIkFycmF5IiwiaXNBcnJheSIsImkiLCJsZW5ndGgiLCJrZXlzIiwiT2JqZWN0Iiwic29ydCIsIm9iaiIsInNoYTEiLCJjcnlwdG8iLCJjcmVhdGVIYXNoIiwiZGlnZXN0Il0sIm1hcHBpbmdzIjoiOzs7OztrQkEwRHdCQSxxQjs7QUExRHhCOzs7Ozs7QUFFQSxTQUFTQyx3QkFBVCxDQUFrQ0MsTUFBbEMsRUFBMENDLEtBQTFDLEVBQWlEO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTUMsT0FBTyxPQUFPRCxLQUFwQjs7QUFFQSxNQUFJQyxTQUFTLFFBQWIsRUFBdUI7QUFDckJGLFdBQU9HLE1BQVAsQ0FBYyxHQUFkLEVBQW1CLE1BQW5CO0FBQ0FILFdBQU9HLE1BQVAsQ0FBY0YsS0FBZCxFQUFxQixNQUFyQjtBQUNBRCxXQUFPRyxNQUFQLENBQWMsR0FBZCxFQUFtQixNQUFuQjtBQUNBO0FBQ0Q7O0FBRUQsTUFBSUQsU0FBUyxTQUFULElBQXNCQSxTQUFTLFFBQW5DLEVBQTZDO0FBQzNDRixXQUFPRyxNQUFQLENBQWNGLE1BQU1HLFFBQU4sRUFBZCxFQUFnQyxNQUFoQztBQUNBO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDSCxLQUFMLEVBQVk7QUFDVkQsV0FBT0csTUFBUCxDQUFjLE1BQWQsRUFBc0IsTUFBdEI7QUFDQTtBQUNEOztBQUVELE1BQUlFLE1BQU1DLE9BQU4sQ0FBY0wsS0FBZCxDQUFKLEVBQTBCO0FBQ3hCRCxXQUFPRyxNQUFQLENBQWMsR0FBZCxFQUFtQixNQUFuQjtBQUNBLFNBQUssSUFBSUksSUFBRSxDQUFYLEVBQWNBLElBQUlOLE1BQU1PLE1BQXhCLEVBQWdDRCxHQUFoQyxFQUFxQztBQUNuQ1IsK0JBQXlCQyxNQUF6QixFQUFpQ0MsTUFBTU0sQ0FBTixDQUFqQztBQUNBUCxhQUFPRyxNQUFQLENBQWMsR0FBZCxFQUFtQixNQUFuQjtBQUNEO0FBQ0RILFdBQU9HLE1BQVAsQ0FBYyxHQUFkLEVBQW1CLE1BQW5CO0FBQ0E7QUFDRDs7QUFFRDtBQUNBLE1BQUlNLE9BQU9DLE9BQU9ELElBQVAsQ0FBWVIsS0FBWixDQUFYO0FBQ0FRLE9BQUtFLElBQUw7O0FBRUFYLFNBQU9HLE1BQVAsQ0FBYyxHQUFkLEVBQW1CLE1BQW5COztBQUVBLE9BQUssSUFBSUksSUFBRSxDQUFYLEVBQWNBLElBQUlFLEtBQUtELE1BQXZCLEVBQStCRCxHQUEvQixFQUFvQztBQUNsQ1IsNkJBQXlCQyxNQUF6QixFQUFpQ1MsS0FBS0YsQ0FBTCxDQUFqQztBQUNBUCxXQUFPRyxNQUFQLENBQWMsSUFBZCxFQUFvQixNQUFwQjtBQUNBSiw2QkFBeUJDLE1BQXpCLEVBQWlDQyxNQUFNUSxLQUFLRixDQUFMLENBQU4sQ0FBakM7QUFDQVAsV0FBT0csTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBbkI7QUFDRDs7QUFFREgsU0FBT0csTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBbkI7QUFDRDs7QUFHRDs7Ozs7QUFLZSxTQUFTTCxxQkFBVCxDQUErQmMsR0FBL0IsRUFBb0M7QUFDakQsTUFBSUMsT0FBT0MsaUJBQU9DLFVBQVAsQ0FBa0IsTUFBbEIsQ0FBWDtBQUNBaEIsMkJBQXlCYyxJQUF6QixFQUErQkQsR0FBL0I7O0FBRUEsU0FBT0MsS0FBS0csTUFBTCxDQUFZLEtBQVosQ0FBUDtBQUNEIiwiZmlsZSI6ImRpZ2VzdC1mb3Itb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuXG5mdW5jdGlvbiB1cGRhdGVEaWdlc3RGb3JKc29uVmFsdWUoc2hhc3VtLCB2YWx1ZSkge1xuICAvLyBJbXBsbWVudGF0aW9uIGlzIHNpbWlsYXIgdG8gdGhhdCBvZiBwcmV0dHktcHJpbnRpbmcgYSBKU09OIG9iamVjdCwgZXhjZXB0OlxuICAvLyAqIFN0cmluZ3MgYXJlIG5vdCBlc2NhcGVkLlxuICAvLyAqIE5vIGVmZm9ydCBpcyBtYWRlIHRvIGF2b2lkIHRyYWlsaW5nIGNvbW1hcy5cbiAgLy8gVGhlc2Ugc2hvcnRjdXRzIHNob3VsZCBub3QgYWZmZWN0IHRoZSBjb3JyZWN0bmVzcyBvZiB0aGlzIGZ1bmN0aW9uLlxuICBjb25zdCB0eXBlID0gdHlwZW9mKHZhbHVlKTtcblxuICBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICBzaGFzdW0udXBkYXRlKCdcIicsICd1dGY4Jyk7XG4gICAgc2hhc3VtLnVwZGF0ZSh2YWx1ZSwgJ3V0ZjgnKTtcbiAgICBzaGFzdW0udXBkYXRlKCdcIicsICd1dGY4Jyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHR5cGUgPT09ICdib29sZWFuJyB8fCB0eXBlID09PSAnbnVtYmVyJykge1xuICAgIHNoYXN1bS51cGRhdGUodmFsdWUudG9TdHJpbmcoKSwgJ3V0ZjgnKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIXZhbHVlKSB7XG4gICAgc2hhc3VtLnVwZGF0ZSgnbnVsbCcsICd1dGY4Jyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgc2hhc3VtLnVwZGF0ZSgnWycsICd1dGY4Jyk7XG4gICAgZm9yIChsZXQgaT0wOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgIHVwZGF0ZURpZ2VzdEZvckpzb25WYWx1ZShzaGFzdW0sIHZhbHVlW2ldKTtcbiAgICAgIHNoYXN1bS51cGRhdGUoJywnLCAndXRmOCcpO1xuICAgIH1cbiAgICBzaGFzdW0udXBkYXRlKCddJywgJ3V0ZjgnKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyB2YWx1ZSBtdXN0IGJlIGFuIG9iamVjdDogYmUgc3VyZSB0byBzb3J0IHRoZSBrZXlzLlxuICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcbiAga2V5cy5zb3J0KCk7XG5cbiAgc2hhc3VtLnVwZGF0ZSgneycsICd1dGY4Jyk7XG5cbiAgZm9yIChsZXQgaT0wOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHVwZGF0ZURpZ2VzdEZvckpzb25WYWx1ZShzaGFzdW0sIGtleXNbaV0pO1xuICAgIHNoYXN1bS51cGRhdGUoJzogJywgJ3V0ZjgnKTtcbiAgICB1cGRhdGVEaWdlc3RGb3JKc29uVmFsdWUoc2hhc3VtLCB2YWx1ZVtrZXlzW2ldXSk7XG4gICAgc2hhc3VtLnVwZGF0ZSgnLCcsICd1dGY4Jyk7XG4gIH1cblxuICBzaGFzdW0udXBkYXRlKCd9JywgJ3V0ZjgnKTtcbn1cblxuXG4vKipcbiAqIENyZWF0ZXMgYSBoYXNoIGZyb20gYSBKUyBvYmplY3RcbiAqIFxuICogQHByaXZhdGUgIFxuICovIFxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlRGlnZXN0Rm9yT2JqZWN0KG9iaikge1xuICBsZXQgc2hhMSA9IGNyeXB0by5jcmVhdGVIYXNoKCdzaGExJyk7XG4gIHVwZGF0ZURpZ2VzdEZvckpzb25WYWx1ZShzaGExLCBvYmopO1xuICBcbiAgcmV0dXJuIHNoYTEuZGlnZXN0KCdoZXgnKTtcbn1cbiJdfQ==\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/digest-for-object.js?")},"./node_modules/electron-compile/lib/file-change-cache.js":
/*!****************************************************************!*\
  !*** ./node_modules/electron-compile/lib/file-change-cache.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\nvar _zlib2 = _interopRequireDefault(_zlib);\n\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _promise = __webpack_require__(/*! ./promise */ \"./node_modules/electron-compile/lib/promise.js\");\n\nvar _sanitizePaths = __webpack_require__(/*! ./sanitize-paths */ \"./node_modules/electron-compile/lib/sanitize-paths.js\");\n\nvar _sanitizePaths2 = _interopRequireDefault(_sanitizePaths);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst d = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('electron-compile:file-change-cache');\n\n/**\n * This class caches information about files and determines whether they have\n * changed contents or not. Most importantly, this class caches the hash of seen\n * files so that at development time, we don't have to recalculate them constantly.\n *\n * This class is also the core of how electron-compile runs quickly in production\n * mode - after precompilation, the cache is serialized along with the rest of the\n * data in {@link CompilerHost}, so that when we load the app in production mode,\n * we don't end up calculating hashes of file content at all, only using the contents\n * of this cache.\n */\nclass FileChangedCache {\n  constructor(appRoot) {\n    let failOnCacheMiss = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    this.appRoot = (0, _sanitizePaths2.default)(appRoot);\n\n    this.failOnCacheMiss = failOnCacheMiss;\n    this.changeCache = {};\n  }\n\n  static removePrefix(needle, haystack) {\n    let idx = haystack.toLowerCase().indexOf(needle.toLowerCase());\n    if (idx < 0) return haystack;\n\n    return haystack.substring(idx + needle.length);\n  }\n\n  /**\n   * Allows you to create a FileChangedCache from serialized data saved from\n   * {@link getSavedData}.\n   *\n   * @param  {Object} data  Saved data from getSavedData.\n   *\n   * @param  {string} appRoot  The top-level directory for your application (i.e.\n   *                           the one which has your package.json).\n   *\n   * @param  {boolean} failOnCacheMiss (optional)  If True, cache misses will throw.\n   *\n   * @return {FileChangedCache}\n   */\n  static loadFromData(data, appRoot) {\n    let failOnCacheMiss = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    let ret = new FileChangedCache(appRoot, failOnCacheMiss);\n    ret.changeCache = data.changeCache;\n    ret.originalAppRoot = data.appRoot;\n\n    return ret;\n  }\n\n  /**\n   * Allows you to create a FileChangedCache from serialized data saved from\n   * {@link save}.\n   *\n   * @param  {string} file  Saved data from save.\n   *\n   * @param  {string} appRoot  The top-level directory for your application (i.e.\n   *                           the one which has your package.json).\n   *\n   * @param  {boolean} failOnCacheMiss (optional)  If True, cache misses will throw.\n   *\n   * @return {Promise<FileChangedCache>}\n   */\n  static loadFromFile(file, appRoot) {\n    let failOnCacheMiss = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return _asyncToGenerator(function* () {\n      d(`Loading canned FileChangedCache from ${file}`);\n\n      let buf = yield _promise.pfs.readFile(file);\n      return FileChangedCache.loadFromData(JSON.parse((yield _promise.pzlib.gunzip(buf))), appRoot, failOnCacheMiss);\n    })();\n  }\n\n  /**\n   * Returns information about a given file, including its hash. This method is\n   * the main method for this cache.\n   *\n   * @param  {string} absoluteFilePath  The path to a file to retrieve info on.\n   *\n   * @return {Promise<Object>}\n   *\n   * @property {string} hash  The SHA1 hash of the file\n   * @property {boolean} isMinified  True if the file is minified\n   * @property {boolean} isInNodeModules  True if the file is in a library directory\n   * @property {boolean} hasSourceMap  True if the file has a source map\n   * @property {boolean} isFileBinary  True if the file is not a text file\n   * @property {Buffer} binaryData (optional)  The buffer that was read if the file\n   *                                           was binary and there was a cache miss.\n   * @property {string} code (optional)  The string that was read if the file\n   *                                     was text and there was a cache miss\n   */\n  getHashForPath(absoluteFilePath) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _getCacheEntryForPath = _this.getCacheEntryForPath(absoluteFilePath);\n\n      let cacheEntry = _getCacheEntryForPath.cacheEntry,\n          cacheKey = _getCacheEntryForPath.cacheKey;\n\n\n      if (_this.failOnCacheMiss) {\n        return cacheEntry.info;\n      }\n\n      var _ref = yield _this.getInfoForCacheEntry(absoluteFilePath);\n\n      let ctime = _ref.ctime,\n          size = _ref.size;\n\n\n      if (cacheEntry) {\n        let fileHasChanged = yield _this.hasFileChanged(absoluteFilePath, cacheEntry, { ctime, size });\n\n        if (!fileHasChanged) {\n          return cacheEntry.info;\n        }\n\n        d(`Invalidating cache entry: ${cacheEntry.ctime} === ${ctime} && ${cacheEntry.size} === ${size}`);\n        delete _this.changeCache.cacheEntry;\n      }\n\n      var _ref2 = yield _this.calculateHashForFile(absoluteFilePath);\n\n      let digest = _ref2.digest,\n          sourceCode = _ref2.sourceCode,\n          binaryData = _ref2.binaryData;\n\n\n      let info = {\n        hash: digest,\n        isMinified: FileChangedCache.contentsAreMinified(sourceCode || ''),\n        isInNodeModules: FileChangedCache.isInNodeModules(absoluteFilePath),\n        hasSourceMap: FileChangedCache.hasSourceMap(sourceCode || ''),\n        isFileBinary: !!binaryData\n      };\n\n      _this.changeCache[cacheKey] = { ctime, size, info };\n      d(`Cache entry for ${cacheKey}: ${JSON.stringify(_this.changeCache[cacheKey])}`);\n\n      if (binaryData) {\n        return Object.assign({ binaryData }, info);\n      } else {\n        return Object.assign({ sourceCode }, info);\n      }\n    })();\n  }\n\n  getInfoForCacheEntry(absoluteFilePath) {\n    return _asyncToGenerator(function* () {\n      let stat = yield _promise.pfs.stat(absoluteFilePath);\n      if (!stat || !stat.isFile()) throw new Error(`Can't stat ${absoluteFilePath}`);\n\n      return {\n        stat,\n        ctime: stat.ctime.getTime(),\n        size: stat.size\n      };\n    })();\n  }\n\n  /**\n   * Gets the cached data for a file path, if it exists.\n   *\n   * @param  {string} absoluteFilePath  The path to a file to retrieve info on.\n   *\n   * @return {Object}\n   */\n  getCacheEntryForPath(absoluteFilePath) {\n    let cacheKey = (0, _sanitizePaths2.default)(absoluteFilePath);\n    if (this.appRoot) {\n      cacheKey = cacheKey.replace(this.appRoot, '');\n    }\n\n    // NB: We do this because x-require will include an absolute path from the\n    // original built app and we need to still grok it\n    if (this.originalAppRoot) {\n      cacheKey = cacheKey.replace(this.originalAppRoot, '');\n    }\n\n    let cacheEntry = this.changeCache[cacheKey];\n\n    if (this.failOnCacheMiss) {\n      if (!cacheEntry) {\n        d(`Tried to read file cache entry for ${absoluteFilePath}`);\n        d(`cacheKey: ${cacheKey}, appRoot: ${this.appRoot}, originalAppRoot: ${this.originalAppRoot}`);\n        throw new Error(`Asked for ${absoluteFilePath} but it was not precompiled!`);\n      }\n    }\n\n    return { cacheEntry, cacheKey };\n  }\n\n  /**\n   * Checks the file cache to see if a file has changed.\n   *\n   * @param  {string} absoluteFilePath  The path to a file to retrieve info on.\n   * @param  {Object} cacheEntry  Cache data from {@link getCacheEntryForPath}\n   *\n   * @return {boolean}\n   */\n  hasFileChanged(absoluteFilePath) {\n    var _this2 = this;\n\n    let cacheEntry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let fileHashInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return _asyncToGenerator(function* () {\n      cacheEntry = cacheEntry || _this2.getCacheEntryForPath(absoluteFilePath).cacheEntry;\n      fileHashInfo = fileHashInfo || (yield _this2.getInfoForCacheEntry(absoluteFilePath));\n\n      if (cacheEntry) {\n        return !(cacheEntry.ctime >= fileHashInfo.ctime && cacheEntry.size === fileHashInfo.size);\n      }\n\n      return false;\n    })();\n  }\n\n  /**\n   * Returns data that can passed to {@link loadFromData} to rehydrate this cache.\n   *\n   * @return {Object}\n   */\n  getSavedData() {\n    return { changeCache: this.changeCache, appRoot: this.appRoot };\n  }\n\n  /**\n   * Serializes this object's data to a file.\n   *\n   * @param {string} filePath  The path to save data to.\n   *\n   * @return {Promise} Completion.\n   */\n  save(filePath) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let toSave = _this3.getSavedData();\n\n      let buf = yield _promise.pzlib.gzip(new Buffer(JSON.stringify(toSave)));\n      yield _promise.pfs.writeFile(filePath, buf);\n    })();\n  }\n\n  calculateHashForFile(absoluteFilePath) {\n    return _asyncToGenerator(function* () {\n      let buf = yield _promise.pfs.readFile(absoluteFilePath);\n      let encoding = FileChangedCache.detectFileEncoding(buf);\n\n      if (!encoding) {\n        let digest = _crypto2.default.createHash('sha1').update(buf).digest('hex');\n        return { sourceCode: null, digest, binaryData: buf };\n      }\n\n      let sourceCode = yield _promise.pfs.readFile(absoluteFilePath, encoding);\n      let digest = _crypto2.default.createHash('sha1').update(sourceCode, 'utf8').digest('hex');\n\n      return { sourceCode, digest, binaryData: null };\n    })();\n  }\n\n  getHashForPathSync(absoluteFilePath) {\n    let cacheKey = (0, _sanitizePaths2.default)(absoluteFilePath);\n\n    if (this.appRoot) {\n      cacheKey = FileChangedCache.removePrefix(this.appRoot, cacheKey);\n    }\n\n    // NB: We do this because x-require will include an absolute path from the\n    // original built app and we need to still grok it\n    if (this.originalAppRoot) {\n      cacheKey = FileChangedCache.removePrefix(this.originalAppRoot, cacheKey);\n    }\n\n    let cacheEntry = this.changeCache[cacheKey];\n\n    if (this.failOnCacheMiss) {\n      if (!cacheEntry) {\n        d(`Tried to read file cache entry for ${absoluteFilePath}`);\n        d(`cacheKey: ${cacheKey}, appRoot: ${this.appRoot}, originalAppRoot: ${this.originalAppRoot}`);\n        throw new Error(`Asked for ${absoluteFilePath} but it was not precompiled!`);\n      }\n\n      return cacheEntry.info;\n    }\n\n    let stat = _fs2.default.statSync(absoluteFilePath);\n    let ctime = stat.ctime.getTime();\n    let size = stat.size;\n    if (!stat || !stat.isFile()) throw new Error(`Can't stat ${absoluteFilePath}`);\n\n    if (cacheEntry) {\n      if (cacheEntry.ctime >= ctime && cacheEntry.size === size) {\n        return cacheEntry.info;\n      }\n\n      d(`Invalidating cache entry: ${cacheEntry.ctime} === ${ctime} && ${cacheEntry.size} === ${size}`);\n      delete this.changeCache.cacheEntry;\n    }\n\n    var _calculateHashForFile = this.calculateHashForFileSync(absoluteFilePath);\n\n    let digest = _calculateHashForFile.digest,\n        sourceCode = _calculateHashForFile.sourceCode,\n        binaryData = _calculateHashForFile.binaryData;\n\n\n    let info = {\n      hash: digest,\n      isMinified: FileChangedCache.contentsAreMinified(sourceCode || ''),\n      isInNodeModules: FileChangedCache.isInNodeModules(absoluteFilePath),\n      hasSourceMap: FileChangedCache.hasSourceMap(sourceCode || ''),\n      isFileBinary: !!binaryData\n    };\n\n    this.changeCache[cacheKey] = { ctime, size, info };\n    d(`Cache entry for ${cacheKey}: ${JSON.stringify(this.changeCache[cacheKey])}`);\n\n    if (binaryData) {\n      return Object.assign({ binaryData }, info);\n    } else {\n      return Object.assign({ sourceCode }, info);\n    }\n  }\n\n  saveSync(filePath) {\n    let toSave = this.getSavedData();\n\n    let buf = _zlib2.default.gzipSync(new Buffer(JSON.stringify(toSave)));\n    _fs2.default.writeFileSync(filePath, buf);\n  }\n\n  calculateHashForFileSync(absoluteFilePath) {\n    let buf = _fs2.default.readFileSync(absoluteFilePath);\n    let encoding = FileChangedCache.detectFileEncoding(buf);\n\n    if (!encoding) {\n      let digest = _crypto2.default.createHash('sha1').update(buf).digest('hex');\n      return { sourceCode: null, digest, binaryData: buf };\n    }\n\n    let sourceCode = _fs2.default.readFileSync(absoluteFilePath, encoding);\n    let digest = _crypto2.default.createHash('sha1').update(sourceCode, 'utf8').digest('hex');\n\n    return { sourceCode, digest, binaryData: null };\n  }\n\n  /**\n   * Determines via some statistics whether a file is likely to be minified.\n   *\n   * @private\n   */\n  static contentsAreMinified(source) {\n    let length = source.length;\n    if (length > 1024) length = 1024;\n\n    let newlineCount = 0;\n\n    // Roll through the characters and determine the average line length\n    for (let i = 0; i < source.length; i++) {\n      if (source[i] === '\\n') newlineCount++;\n    }\n\n    // No Newlines? Any file other than a super small one is minified\n    if (newlineCount === 0) {\n      return length > 80;\n    }\n\n    let avgLineLength = length / newlineCount;\n    return avgLineLength > 80;\n  }\n\n  /**\n   * Determines whether a path is in node_modules or the Electron init code\n   *\n   * @private\n   */\n  static isInNodeModules(filePath) {\n    return !!(filePath.match(/(node_modules|bower_components)[\\\\\\/]/i) || filePath.match(/(atom|electron)\\.asar/));\n  }\n\n  /**\n   * Returns whether a file has an inline source map\n   *\n   * @private\n   */\n  static hasSourceMap(sourceCode) {\n    const trimmed = sourceCode.trim();\n    return trimmed.lastIndexOf('//# sourceMap') > trimmed.lastIndexOf('\\n');\n  }\n\n  /**\n   * Determines the encoding of a file from the two most common encodings by trying\n   * to decode it then looking for encoding errors\n   *\n   * @private\n   */\n  static detectFileEncoding(buffer) {\n    if (buffer.length < 1) return false;\n    let buf = buffer.length < 4096 ? buffer : buffer.slice(0, 4096);\n\n    const encodings = ['utf8', 'utf16le'];\n\n    let encoding;\n    if (buffer.length <= 128) {\n      encoding = encodings.find(x => Buffer.compare(new Buffer(buffer.toString(), x), buffer) === 0);\n    } else {\n      encoding = encodings.find(x => !FileChangedCache.containsControlCharacters(buf.toString(x)));\n    }\n\n    return encoding;\n  }\n\n  /**\n   * Determines whether a string is likely to be poorly encoded by looking for\n   * control characters above a certain threshold\n   *\n   * @private\n   */\n  static containsControlCharacters(str) {\n    let controlCount = 0;\n    let spaceCount = 0;\n    let threshold = 2;\n    if (str.length > 64) threshold = 4;\n    if (str.length > 512) threshold = 8;\n\n    for (let i = 0; i < str.length; i++) {\n      let c = str.charCodeAt(i);\n      if (c === 65536 || c < 8) controlCount++;\n      if (c > 14 && c < 32) controlCount++;\n      if (c === 32) spaceCount++;\n\n      if (controlCount > threshold) return true;\n    }\n\n    if (spaceCount < threshold) return true;\n\n    if (controlCount === 0) return false;\n    return controlCount / str.length < 0.02;\n  }\n}\nexports.default = FileChangedCache;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/file-change-cache.js?")},"./node_modules/electron-compile/lib/for-all-files.js":
/*!************************************************************!*\
  !*** ./node_modules/electron-compile/lib/for-all-files.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.forAllFiles = forAllFiles;\nexports.forAllFilesSync = forAllFilesSync;\n\nvar _fs = __webpack_require__(/*! fs */ "fs");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = __webpack_require__(/*! path */ "path");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _promise = __webpack_require__(/*! ./promise */ "./node_modules/electron-compile/lib/promise.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }\n\n/**\n * Invokes a method on all files in a directory recursively.\n * \n * @private\n */\nfunction forAllFiles(rootDirectory, func) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  let rec = (() => {\n    var _ref = _asyncToGenerator(function* (dir) {\n      let entries = yield _promise.pfs.readdir(dir);\n\n      for (let name of entries) {\n        let fullName = _path2.default.join(dir, name);\n        let stats = yield _promise.pfs.stat(fullName);\n\n        if (stats.isDirectory()) {\n          yield rec(fullName);\n        }\n\n        if (stats.isFile()) {\n          yield func(fullName, ...args);\n        }\n      }\n    });\n\n    return function rec(_x) {\n      return _ref.apply(this, arguments);\n    };\n  })();\n\n  return rec(rootDirectory);\n}\n\nfunction forAllFilesSync(rootDirectory, func) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  let rec = dir => {\n    _fs2.default.readdirSync(dir).forEach(name => {\n      let fullName = _path2.default.join(dir, name);\n      let stats = _fs2.default.statSync(fullName);\n\n      if (stats.isDirectory()) {\n        rec(fullName);\n        return;\n      }\n\n      if (stats.isFile()) {\n        func(fullName, ...args);\n        return;\n      }\n    });\n  };\n\n  rec(rootDirectory);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9mb3ItYWxsLWZpbGVzLmpzIl0sIm5hbWVzIjpbImZvckFsbEZpbGVzIiwiZm9yQWxsRmlsZXNTeW5jIiwicm9vdERpcmVjdG9yeSIsImZ1bmMiLCJhcmdzIiwicmVjIiwiZGlyIiwiZW50cmllcyIsInBmcyIsInJlYWRkaXIiLCJuYW1lIiwiZnVsbE5hbWUiLCJwYXRoIiwiam9pbiIsInN0YXRzIiwic3RhdCIsImlzRGlyZWN0b3J5IiwiaXNGaWxlIiwiZnMiLCJyZWFkZGlyU3luYyIsImZvckVhY2giLCJzdGF0U3luYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFVZ0JBLFcsR0FBQUEsVztRQXFCQUMsZSxHQUFBQSxlOztBQS9CaEI7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFHQTs7Ozs7QUFLTyxTQUFTRCxXQUFULENBQXFCRSxhQUFyQixFQUFvQ0MsSUFBcEMsRUFBbUQ7QUFBQSxvQ0FBTkMsSUFBTTtBQUFOQSxRQUFNO0FBQUE7O0FBQ3hELE1BQUlDO0FBQUEsaUNBQU0sV0FBT0MsR0FBUCxFQUFlO0FBQ3ZCLFVBQUlDLFVBQVUsTUFBTUMsYUFBSUMsT0FBSixDQUFZSCxHQUFaLENBQXBCOztBQUVBLFdBQUssSUFBSUksSUFBVCxJQUFpQkgsT0FBakIsRUFBMEI7QUFDeEIsWUFBSUksV0FBV0MsZUFBS0MsSUFBTCxDQUFVUCxHQUFWLEVBQWVJLElBQWYsQ0FBZjtBQUNBLFlBQUlJLFFBQVEsTUFBTU4sYUFBSU8sSUFBSixDQUFTSixRQUFULENBQWxCOztBQUVBLFlBQUlHLE1BQU1FLFdBQU4sRUFBSixFQUF5QjtBQUN2QixnQkFBTVgsSUFBSU0sUUFBSixDQUFOO0FBQ0Q7O0FBRUQsWUFBSUcsTUFBTUcsTUFBTixFQUFKLEVBQW9CO0FBQ2xCLGdCQUFNZCxLQUFLUSxRQUFMLEVBQWUsR0FBR1AsSUFBbEIsQ0FBTjtBQUNEO0FBQ0Y7QUFDRixLQWZHOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQUo7O0FBaUJBLFNBQU9DLElBQUlILGFBQUosQ0FBUDtBQUNEOztBQUVNLFNBQVNELGVBQVQsQ0FBeUJDLGFBQXpCLEVBQXdDQyxJQUF4QyxFQUF1RDtBQUFBLHFDQUFOQyxJQUFNO0FBQU5BLFFBQU07QUFBQTs7QUFDNUQsTUFBSUMsTUFBT0MsR0FBRCxJQUFTO0FBQ2pCWSxpQkFBR0MsV0FBSCxDQUFlYixHQUFmLEVBQW9CYyxPQUFwQixDQUE2QlYsSUFBRCxJQUFVO0FBQ3BDLFVBQUlDLFdBQVdDLGVBQUtDLElBQUwsQ0FBVVAsR0FBVixFQUFlSSxJQUFmLENBQWY7QUFDQSxVQUFJSSxRQUFRSSxhQUFHRyxRQUFILENBQVlWLFFBQVosQ0FBWjs7QUFFQSxVQUFJRyxNQUFNRSxXQUFOLEVBQUosRUFBeUI7QUFDdkJYLFlBQUlNLFFBQUo7QUFDQTtBQUNEOztBQUVELFVBQUlHLE1BQU1HLE1BQU4sRUFBSixFQUFvQjtBQUNsQmQsYUFBS1EsUUFBTCxFQUFlLEdBQUdQLElBQWxCO0FBQ0E7QUFDRDtBQUNGLEtBYkQ7QUFjRCxHQWZEOztBQWlCQUMsTUFBSUgsYUFBSjtBQUNEIiwiZmlsZSI6ImZvci1hbGwtZmlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQge3Bmc30gZnJvbSAnLi9wcm9taXNlJztcblxuXG4vKipcbiAqIEludm9rZXMgYSBtZXRob2Qgb24gYWxsIGZpbGVzIGluIGEgZGlyZWN0b3J5IHJlY3Vyc2l2ZWx5LlxuICogXG4gKiBAcHJpdmF0ZVxuICovIFxuZXhwb3J0IGZ1bmN0aW9uIGZvckFsbEZpbGVzKHJvb3REaXJlY3RvcnksIGZ1bmMsIC4uLmFyZ3MpIHtcbiAgbGV0IHJlYyA9IGFzeW5jIChkaXIpID0+IHtcbiAgICBsZXQgZW50cmllcyA9IGF3YWl0IHBmcy5yZWFkZGlyKGRpcik7XG4gICAgXG4gICAgZm9yIChsZXQgbmFtZSBvZiBlbnRyaWVzKSB7XG4gICAgICBsZXQgZnVsbE5hbWUgPSBwYXRoLmpvaW4oZGlyLCBuYW1lKTtcbiAgICAgIGxldCBzdGF0cyA9IGF3YWl0IHBmcy5zdGF0KGZ1bGxOYW1lKTtcblxuICAgICAgaWYgKHN0YXRzLmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgICAgYXdhaXQgcmVjKGZ1bGxOYW1lKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRzLmlzRmlsZSgpKSB7XG4gICAgICAgIGF3YWl0IGZ1bmMoZnVsbE5hbWUsIC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gcmVjKHJvb3REaXJlY3RvcnkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9yQWxsRmlsZXNTeW5jKHJvb3REaXJlY3RvcnksIGZ1bmMsIC4uLmFyZ3MpIHtcbiAgbGV0IHJlYyA9IChkaXIpID0+IHtcbiAgICBmcy5yZWFkZGlyU3luYyhkaXIpLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgIGxldCBmdWxsTmFtZSA9IHBhdGguam9pbihkaXIsIG5hbWUpO1xuICAgICAgbGV0IHN0YXRzID0gZnMuc3RhdFN5bmMoZnVsbE5hbWUpO1xuICAgICAgXG4gICAgICBpZiAoc3RhdHMuaXNEaXJlY3RvcnkoKSkge1xuICAgICAgICByZWMoZnVsbE5hbWUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChzdGF0cy5pc0ZpbGUoKSkge1xuICAgICAgICBmdW5jKGZ1bGxOYW1lLCAuLi5hcmdzKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICBcbiAgcmVjKHJvb3REaXJlY3RvcnkpO1xufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/for-all-files.js?')},"./node_modules/electron-compile/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/electron-compile/lib/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _compileCache = __webpack_require__(/*! ./compile-cache */ "./node_modules/electron-compile/lib/compile-cache.js");\n\nvar _compileCache2 = _interopRequireDefault(_compileCache);\n\nvar _compilerHost = __webpack_require__(/*! ./compiler-host */ "./node_modules/electron-compile/lib/compiler-host.js");\n\nvar _compilerHost2 = _interopRequireDefault(_compilerHost);\n\nvar _configParser = __webpack_require__(/*! ./config-parser */ "./node_modules/electron-compile/lib/config-parser.js");\n\nvar configParser = _interopRequireWildcard(_configParser);\n\nvar _fileChangeCache = __webpack_require__(/*! ./file-change-cache */ "./node_modules/electron-compile/lib/file-change-cache.js");\n\nvar _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);\n\nvar _protocolHook = __webpack_require__(/*! ./protocol-hook */ "./node_modules/electron-compile/lib/protocol-hook.js");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NB: Patch a bug in Electron that affects electron-prebuilt-compile that\n// we can\'t fix any other way. Yes it _does_ feelbadman.jpg\nconst fs = __webpack_require__(/*! fs */ "fs");\nfs.statSyncNoException = fs.statSyncNoException || function () {\n  try {\n    return fs.statSync(...arguments);\n  } catch (e) {\n    return null;\n  }\n};\n\nlet enableLiveReload = null;\nlet watchPath = null;\n\nmodule.exports = Object.assign({\n  // NB: delay-load live-reload so we don\'t load RxJS in production\n  enableLiveReload: function () {\n    enableLiveReload = enableLiveReload || __webpack_require__(/*! ./live-reload */ "./node_modules/electron-compile/lib/live-reload.js").enableLiveReload;\n    return enableLiveReload(...arguments);\n  },\n  watchPath: function () {\n    watchPath = watchPath || __webpack_require__(/*! ./pathwatcher-rx */ "./node_modules/electron-compile/lib/pathwatcher-rx.js").watchPath;\n    return watchPath(...arguments);\n  }\n}, configParser, { CompilerHost: _compilerHost2.default, FileChangedCache: _fileChangeCache2.default, CompileCache: _compileCache2.default, addBypassChecker: _protocolHook.addBypassChecker });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJjb25maWdQYXJzZXIiLCJmcyIsInJlcXVpcmUiLCJzdGF0U3luY05vRXhjZXB0aW9uIiwic3RhdFN5bmMiLCJlIiwiZW5hYmxlTGl2ZVJlbG9hZCIsIndhdGNoUGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiLCJPYmplY3QiLCJhc3NpZ24iLCJDb21waWxlckhvc3QiLCJGaWxlQ2hhbmdlZENhY2hlIiwiQ29tcGlsZUNhY2hlIiwiYWRkQnlwYXNzQ2hlY2tlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0lBQVlBLFk7O0FBQ1o7Ozs7QUFDQTs7Ozs7O0FBRUE7QUFDQTtBQUNBLE1BQU1DLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0FELEdBQUdFLG1CQUFILEdBQXlCRixHQUFHRSxtQkFBSCxJQUEyQixZQUFhO0FBQy9ELE1BQUk7QUFDRixXQUFPRixHQUFHRyxRQUFILENBQVksWUFBWixDQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9DLENBQVAsRUFBVTtBQUNWLFdBQU8sSUFBUDtBQUNEO0FBQ0YsQ0FORDs7QUFRQSxJQUFJQyxtQkFBbUIsSUFBdkI7QUFDQSxJQUFJQyxZQUFZLElBQWhCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCQyxPQUFPQyxNQUFQLENBQWM7QUFDN0I7QUFDQUwsb0JBQWtCLFlBQWtCO0FBQ2xDQSx1QkFBbUJBLG9CQUFvQkosUUFBUSxlQUFSLEVBQXlCSSxnQkFBaEU7QUFDQSxXQUFPQSxpQkFBaUIsWUFBakIsQ0FBUDtBQUNELEdBTDRCO0FBTTdCQyxhQUFXLFlBQWtCO0FBQzNCQSxnQkFBWUEsYUFBYUwsUUFBUSxrQkFBUixFQUE0QkssU0FBckQ7QUFDQSxXQUFPQSxVQUFVLFlBQVYsQ0FBUDtBQUNEO0FBVDRCLENBQWQsRUFXZlAsWUFYZSxFQVlmLEVBQUVZLG9DQUFGLEVBQWdCQywyQ0FBaEIsRUFBa0NDLG9DQUFsQyxFQUFnREMsZ0RBQWhELEVBWmUsQ0FBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcGlsZUNhY2hlIGZyb20gJy4vY29tcGlsZS1jYWNoZSc7XG5pbXBvcnQgQ29tcGlsZXJIb3N0IGZyb20gJy4vY29tcGlsZXItaG9zdCc7XG5pbXBvcnQgKiBhcyBjb25maWdQYXJzZXIgZnJvbSAnLi9jb25maWctcGFyc2VyJztcbmltcG9ydCBGaWxlQ2hhbmdlZENhY2hlIGZyb20gJy4vZmlsZS1jaGFuZ2UtY2FjaGUnO1xuaW1wb3J0IHthZGRCeXBhc3NDaGVja2VyfSBmcm9tICcuL3Byb3RvY29sLWhvb2snO1xuXG4vLyBOQjogUGF0Y2ggYSBidWcgaW4gRWxlY3Ryb24gdGhhdCBhZmZlY3RzIGVsZWN0cm9uLXByZWJ1aWx0LWNvbXBpbGUgdGhhdFxuLy8gd2UgY2FuJ3QgZml4IGFueSBvdGhlciB3YXkuIFllcyBpdCBfZG9lc18gZmVlbGJhZG1hbi5qcGdcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmZzLnN0YXRTeW5jTm9FeGNlcHRpb24gPSBmcy5zdGF0U3luY05vRXhjZXB0aW9uIHx8ICgoLi4uYXJncykgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBmcy5zdGF0U3luYyguLi5hcmdzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59KTtcblxubGV0IGVuYWJsZUxpdmVSZWxvYWQgPSBudWxsO1xubGV0IHdhdGNoUGF0aCA9IG51bGw7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbih7XG4gIC8vIE5COiBkZWxheS1sb2FkIGxpdmUtcmVsb2FkIHNvIHdlIGRvbid0IGxvYWQgUnhKUyBpbiBwcm9kdWN0aW9uXG4gIGVuYWJsZUxpdmVSZWxvYWQ6IGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICBlbmFibGVMaXZlUmVsb2FkID0gZW5hYmxlTGl2ZVJlbG9hZCB8fCByZXF1aXJlKCcuL2xpdmUtcmVsb2FkJykuZW5hYmxlTGl2ZVJlbG9hZDtcbiAgICByZXR1cm4gZW5hYmxlTGl2ZVJlbG9hZCguLi5hcmdzKTtcbiAgfSxcbiAgd2F0Y2hQYXRoOiBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgd2F0Y2hQYXRoID0gd2F0Y2hQYXRoIHx8IHJlcXVpcmUoJy4vcGF0aHdhdGNoZXItcngnKS53YXRjaFBhdGg7XG4gICAgcmV0dXJuIHdhdGNoUGF0aCguLi5hcmdzKTtcbiAgfSxcbn0sXG4gIGNvbmZpZ1BhcnNlcixcbiAgeyBDb21waWxlckhvc3QsIEZpbGVDaGFuZ2VkQ2FjaGUsIENvbXBpbGVDYWNoZSwgYWRkQnlwYXNzQ2hlY2tlciB9XG4pO1xuIl19\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/index.js?')},"./node_modules/electron-compile/lib/live-reload.js":
/*!**********************************************************!*\
  !*** ./node_modules/electron-compile/lib/live-reload.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.enableLiveReload = enableLiveReload;\n\nvar _fileChangeCache = __webpack_require__(/*! ./file-change-cache */ "./node_modules/electron-compile/lib/file-change-cache.js");\n\nvar _fileChangeCache2 = _interopRequireDefault(_fileChangeCache);\n\nvar _pathwatcherRx = __webpack_require__(/*! ./pathwatcher-rx */ "./node_modules/electron-compile/lib/pathwatcher-rx.js");\n\nvar _Observable = __webpack_require__(/*! rxjs/Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n\n__webpack_require__(/*! ./custom-operators */ "./node_modules/electron-compile/lib/custom-operators.js");\n\n__webpack_require__(/*! rxjs/add/observable/defer */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/defer.js");\n\n__webpack_require__(/*! rxjs/add/observable/empty */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/empty.js");\n\n__webpack_require__(/*! rxjs/add/observable/fromPromise */ "./node_modules/electron-compile/node_modules/rxjs/add/observable/fromPromise.js");\n\n__webpack_require__(/*! rxjs/add/operator/catch */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/catch.js");\n\n__webpack_require__(/*! rxjs/add/operator/filter */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/filter.js");\n\n__webpack_require__(/*! rxjs/add/operator/mergeMap */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/mergeMap.js");\n\n__webpack_require__(/*! rxjs/add/operator/switchMap */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/switchMap.js");\n\n__webpack_require__(/*! rxjs/add/operator/timeout */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/timeout.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction enableLiveReload() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let strategy = options.strategy;\n\n\n  if (process.type !== \'browser\' || !global.globalCompilerHost) throw new Error("Call this from the browser process, right after initializing electron-compile");\n\n  switch (strategy) {\n    case \'react-hmr\':\n      enableReactHMR();\n      break;\n    case \'naive\':\n    default:\n      enableLiveReloadNaive();\n  }\n}\n\nlet BrowserWindow;\nif (process.type === \'browser\') {\n  BrowserWindow = __webpack_require__(/*! electron */ "electron").BrowserWindow;\n}\n\nfunction reloadAllWindows() {\n  let ret = BrowserWindow.getAllWindows().map(wnd => {\n    if (!wnd.isVisible()) return Promise.resolve(true);\n\n    return new Promise(res => {\n      wnd.webContents.reloadIgnoringCache();\n      wnd.once(\'ready-to-show\', () => res(true));\n    });\n  });\n\n  return Promise.all(ret);\n}\n\nfunction enableLiveReloadNaive() {\n  let filesWeCareAbout = global.globalCompilerHost.listenToCompileEvents().filter(x => !_fileChangeCache2.default.isInNodeModules(x.filePath));\n\n  let weShouldReload = filesWeCareAbout.mergeMap(x => (0, _pathwatcherRx.watchPath)(x.filePath).map(() => x)).guaranteedThrottle(1 * 1000);\n\n  return weShouldReload.switchMap(() => _Observable.Observable.defer(() => _Observable.Observable.fromPromise(reloadAllWindows()).timeout(5 * 1000).catch(() => _Observable.Observable.empty()))).subscribe(() => console.log("Reloaded all windows!"));\n}\n\nfunction triggerHMRInRenderers() {\n  BrowserWindow.getAllWindows().forEach(window => {\n    window.webContents.send(\'__electron-compile__HMR\');\n  });\n\n  return Promise.resolve(true);\n}\n\nfunction enableReactHMR() {\n  global.__electron_compile_hmr_enabled__ = true;\n\n  let filesWeCareAbout = global.globalCompilerHost.listenToCompileEvents().filter(x => !_fileChangeCache2.default.isInNodeModules(x.filePath));\n\n  let weShouldReload = filesWeCareAbout.mergeMap(x => (0, _pathwatcherRx.watchPath)(x.filePath).map(() => x)).guaranteedThrottle(1 * 1000);\n\n  return weShouldReload.switchMap(() => _Observable.Observable.defer(() => _Observable.Observable.fromPromise(triggerHMRInRenderers()).catch(() => _Observable.Observable.empty()))).subscribe(() => console.log("HMR sent to all windows!"));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9saXZlLXJlbG9hZC5qcyJdLCJuYW1lcyI6WyJlbmFibGVMaXZlUmVsb2FkIiwib3B0aW9ucyIsInN0cmF0ZWd5IiwicHJvY2VzcyIsInR5cGUiLCJnbG9iYWwiLCJnbG9iYWxDb21waWxlckhvc3QiLCJFcnJvciIsImVuYWJsZVJlYWN0SE1SIiwiZW5hYmxlTGl2ZVJlbG9hZE5haXZlIiwiQnJvd3NlcldpbmRvdyIsInJlcXVpcmUiLCJyZWxvYWRBbGxXaW5kb3dzIiwicmV0IiwiZ2V0QWxsV2luZG93cyIsIm1hcCIsInduZCIsImlzVmlzaWJsZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVzIiwid2ViQ29udGVudHMiLCJyZWxvYWRJZ25vcmluZ0NhY2hlIiwib25jZSIsImFsbCIsImZpbGVzV2VDYXJlQWJvdXQiLCJsaXN0ZW5Ub0NvbXBpbGVFdmVudHMiLCJmaWx0ZXIiLCJ4IiwiRmlsZUNoYW5nZWRDYWNoZSIsImlzSW5Ob2RlTW9kdWxlcyIsImZpbGVQYXRoIiwid2VTaG91bGRSZWxvYWQiLCJtZXJnZU1hcCIsImd1YXJhbnRlZWRUaHJvdHRsZSIsInN3aXRjaE1hcCIsIk9ic2VydmFibGUiLCJkZWZlciIsImZyb21Qcm9taXNlIiwidGltZW91dCIsImNhdGNoIiwiZW1wdHkiLCJzdWJzY3JpYmUiLCJjb25zb2xlIiwibG9nIiwidHJpZ2dlckhNUkluUmVuZGVyZXJzIiwiZm9yRWFjaCIsIndpbmRvdyIsInNlbmQiLCJfX2VsZWN0cm9uX2NvbXBpbGVfaG1yX2VuYWJsZWRfXyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFnQmdCQSxnQixHQUFBQSxnQjs7QUFoQmhCOzs7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFTyxTQUFTQSxnQkFBVCxHQUFzQztBQUFBLE1BQVpDLE9BQVksdUVBQUosRUFBSTtBQUFBLE1BQ3JDQyxRQURxQyxHQUN4QkQsT0FEd0IsQ0FDckNDLFFBRHFDOzs7QUFHM0MsTUFBSUMsUUFBUUMsSUFBUixLQUFpQixTQUFqQixJQUE4QixDQUFDQyxPQUFPQyxrQkFBMUMsRUFBOEQsTUFBTSxJQUFJQyxLQUFKLENBQVUsK0VBQVYsQ0FBTjs7QUFFOUQsVUFBT0wsUUFBUDtBQUNBLFNBQUssV0FBTDtBQUNFTTtBQUNBO0FBQ0YsU0FBSyxPQUFMO0FBQ0E7QUFDRUM7QUFORjtBQVFEOztBQUVELElBQUlDLGFBQUo7QUFDQSxJQUFJUCxRQUFRQyxJQUFSLEtBQWlCLFNBQXJCLEVBQWdDO0FBQzlCTSxrQkFBZ0JDLFFBQVEsVUFBUixFQUFvQkQsYUFBcEM7QUFDRDs7QUFFRCxTQUFTRSxnQkFBVCxHQUE0QjtBQUMxQixNQUFJQyxNQUFNSCxjQUFjSSxhQUFkLEdBQThCQyxHQUE5QixDQUFrQ0MsT0FBTztBQUNqRCxRQUFJLENBQUNBLElBQUlDLFNBQUosRUFBTCxFQUFzQixPQUFPQyxRQUFRQyxPQUFSLENBQWdCLElBQWhCLENBQVA7O0FBRXRCLFdBQU8sSUFBSUQsT0FBSixDQUFhRSxHQUFELElBQVM7QUFDMUJKLFVBQUlLLFdBQUosQ0FBZ0JDLG1CQUFoQjtBQUNBTixVQUFJTyxJQUFKLENBQVMsZUFBVCxFQUEwQixNQUFNSCxJQUFJLElBQUosQ0FBaEM7QUFDRCxLQUhNLENBQVA7QUFJRCxHQVBTLENBQVY7O0FBU0EsU0FBT0YsUUFBUU0sR0FBUixDQUFZWCxHQUFaLENBQVA7QUFDRDs7QUFFRCxTQUFTSixxQkFBVCxHQUFpQztBQUMvQixNQUFJZ0IsbUJBQW1CcEIsT0FBT0Msa0JBQVAsQ0FBMEJvQixxQkFBMUIsR0FDcEJDLE1BRG9CLENBQ2JDLEtBQUssQ0FBQ0MsMEJBQWlCQyxlQUFqQixDQUFpQ0YsRUFBRUcsUUFBbkMsQ0FETyxDQUF2Qjs7QUFHQSxNQUFJQyxpQkFBaUJQLGlCQUNsQlEsUUFEa0IsQ0FDVEwsS0FBSyw4QkFBVUEsRUFBRUcsUUFBWixFQUFzQmhCLEdBQXRCLENBQTBCLE1BQU1hLENBQWhDLENBREksRUFFbEJNLGtCQUZrQixDQUVDLElBQUUsSUFGSCxDQUFyQjs7QUFJQSxTQUFPRixlQUNKRyxTQURJLENBQ00sTUFBTUMsdUJBQVdDLEtBQVgsQ0FBaUIsTUFBTUQsdUJBQVdFLFdBQVgsQ0FBdUIxQixrQkFBdkIsRUFBMkMyQixPQUEzQyxDQUFtRCxJQUFFLElBQXJELEVBQTJEQyxLQUEzRCxDQUFpRSxNQUFNSix1QkFBV0ssS0FBWCxFQUF2RSxDQUF2QixDQURaLEVBRUpDLFNBRkksQ0FFTSxNQUFNQyxRQUFRQyxHQUFSLENBQVksdUJBQVosQ0FGWixDQUFQO0FBR0Q7O0FBRUQsU0FBU0MscUJBQVQsR0FBaUM7QUFDL0JuQyxnQkFBY0ksYUFBZCxHQUE4QmdDLE9BQTlCLENBQXVDQyxNQUFELElBQVk7QUFDaERBLFdBQU8xQixXQUFQLENBQW1CMkIsSUFBbkIsQ0FBd0IseUJBQXhCO0FBQ0QsR0FGRDs7QUFJQSxTQUFPOUIsUUFBUUMsT0FBUixDQUFnQixJQUFoQixDQUFQO0FBQ0Q7O0FBRUQsU0FBU1gsY0FBVCxHQUEwQjtBQUN4QkgsU0FBTzRDLGdDQUFQLEdBQTBDLElBQTFDOztBQUVBLE1BQUl4QixtQkFBbUJwQixPQUFPQyxrQkFBUCxDQUEwQm9CLHFCQUExQixHQUNwQkMsTUFEb0IsQ0FDYkMsS0FBSyxDQUFDQywwQkFBaUJDLGVBQWpCLENBQWlDRixFQUFFRyxRQUFuQyxDQURPLENBQXZCOztBQUdBLE1BQUlDLGlCQUFpQlAsaUJBQ2xCUSxRQURrQixDQUNUTCxLQUFLLDhCQUFVQSxFQUFFRyxRQUFaLEVBQXNCaEIsR0FBdEIsQ0FBMEIsTUFBTWEsQ0FBaEMsQ0FESSxFQUVsQk0sa0JBRmtCLENBRUMsSUFBRSxJQUZILENBQXJCOztBQUlBLFNBQU9GLGVBQ0pHLFNBREksQ0FDTSxNQUFNQyx1QkFBV0MsS0FBWCxDQUFpQixNQUFNRCx1QkFBV0UsV0FBWCxDQUF1Qk8sdUJBQXZCLEVBQWdETCxLQUFoRCxDQUFzRCxNQUFNSix1QkFBV0ssS0FBWCxFQUE1RCxDQUF2QixDQURaLEVBRUpDLFNBRkksQ0FFTSxNQUFNQyxRQUFRQyxHQUFSLENBQVksMEJBQVosQ0FGWixDQUFQO0FBR0QiLCJmaWxlIjoibGl2ZS1yZWxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmlsZUNoYW5nZWRDYWNoZSBmcm9tICcuL2ZpbGUtY2hhbmdlLWNhY2hlJztcbmltcG9ydCB7d2F0Y2hQYXRofSBmcm9tICcuL3BhdGh3YXRjaGVyLXJ4JztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuaW1wb3J0ICcuL2N1c3RvbS1vcGVyYXRvcnMnO1xuXG5pbXBvcnQgJ3J4anMvYWRkL29ic2VydmFibGUvZGVmZXInO1xuaW1wb3J0ICdyeGpzL2FkZC9vYnNlcnZhYmxlL2VtcHR5JztcbmltcG9ydCAncnhqcy9hZGQvb2JzZXJ2YWJsZS9mcm9tUHJvbWlzZSc7XG5cbmltcG9ydCAncnhqcy9hZGQvb3BlcmF0b3IvY2F0Y2gnO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9maWx0ZXInO1xuaW1wb3J0ICdyeGpzL2FkZC9vcGVyYXRvci9tZXJnZU1hcCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3N3aXRjaE1hcCc7XG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3RpbWVvdXQnO1xuXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlTGl2ZVJlbG9hZChvcHRpb25zPXt9KSB7XG4gIGxldCB7IHN0cmF0ZWd5IH0gPSBvcHRpb25zO1xuXG4gIGlmIChwcm9jZXNzLnR5cGUgIT09ICdicm93c2VyJyB8fCAhZ2xvYmFsLmdsb2JhbENvbXBpbGVySG9zdCkgdGhyb3cgbmV3IEVycm9yKFwiQ2FsbCB0aGlzIGZyb20gdGhlIGJyb3dzZXIgcHJvY2VzcywgcmlnaHQgYWZ0ZXIgaW5pdGlhbGl6aW5nIGVsZWN0cm9uLWNvbXBpbGVcIik7XG5cbiAgc3dpdGNoKHN0cmF0ZWd5KSB7XG4gIGNhc2UgJ3JlYWN0LWhtcic6XG4gICAgZW5hYmxlUmVhY3RITVIoKTtcbiAgICBicmVhaztcbiAgY2FzZSAnbmFpdmUnOlxuICBkZWZhdWx0OlxuICAgIGVuYWJsZUxpdmVSZWxvYWROYWl2ZSgpO1xuICB9XG59XG5cbmxldCBCcm93c2VyV2luZG93O1xuaWYgKHByb2Nlc3MudHlwZSA9PT0gJ2Jyb3dzZXInKSB7XG4gIEJyb3dzZXJXaW5kb3cgPSByZXF1aXJlKCdlbGVjdHJvbicpLkJyb3dzZXJXaW5kb3c7XG59XG5cbmZ1bmN0aW9uIHJlbG9hZEFsbFdpbmRvd3MoKSB7XG4gIGxldCByZXQgPSBCcm93c2VyV2luZG93LmdldEFsbFdpbmRvd3MoKS5tYXAod25kID0+IHtcbiAgICBpZiAoIXduZC5pc1Zpc2libGUoKSkgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0cnVlKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzKSA9PiB7XG4gICAgICB3bmQud2ViQ29udGVudHMucmVsb2FkSWdub3JpbmdDYWNoZSgpO1xuICAgICAgd25kLm9uY2UoJ3JlYWR5LXRvLXNob3cnLCAoKSA9PiByZXModHJ1ZSkpO1xuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gUHJvbWlzZS5hbGwocmV0KTtcbn1cblxuZnVuY3Rpb24gZW5hYmxlTGl2ZVJlbG9hZE5haXZlKCkge1xuICBsZXQgZmlsZXNXZUNhcmVBYm91dCA9IGdsb2JhbC5nbG9iYWxDb21waWxlckhvc3QubGlzdGVuVG9Db21waWxlRXZlbnRzKClcbiAgICAuZmlsdGVyKHggPT4gIUZpbGVDaGFuZ2VkQ2FjaGUuaXNJbk5vZGVNb2R1bGVzKHguZmlsZVBhdGgpKTtcblxuICBsZXQgd2VTaG91bGRSZWxvYWQgPSBmaWxlc1dlQ2FyZUFib3V0XG4gICAgLm1lcmdlTWFwKHggPT4gd2F0Y2hQYXRoKHguZmlsZVBhdGgpLm1hcCgoKSA9PiB4KSlcbiAgICAuZ3VhcmFudGVlZFRocm90dGxlKDEqMTAwMCk7XG5cbiAgcmV0dXJuIHdlU2hvdWxkUmVsb2FkXG4gICAgLnN3aXRjaE1hcCgoKSA9PiBPYnNlcnZhYmxlLmRlZmVyKCgpID0+IE9ic2VydmFibGUuZnJvbVByb21pc2UocmVsb2FkQWxsV2luZG93cygpKS50aW1lb3V0KDUqMTAwMCkuY2F0Y2goKCkgPT4gT2JzZXJ2YWJsZS5lbXB0eSgpKSkpXG4gICAgLnN1YnNjcmliZSgoKSA9PiBjb25zb2xlLmxvZyhcIlJlbG9hZGVkIGFsbCB3aW5kb3dzIVwiKSk7XG59XG5cbmZ1bmN0aW9uIHRyaWdnZXJITVJJblJlbmRlcmVycygpIHtcbiAgQnJvd3NlcldpbmRvdy5nZXRBbGxXaW5kb3dzKCkuZm9yRWFjaCgod2luZG93KSA9PiB7XG4gICAgd2luZG93LndlYkNvbnRlbnRzLnNlbmQoJ19fZWxlY3Ryb24tY29tcGlsZV9fSE1SJyk7XG4gIH0pO1xuXG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUodHJ1ZSk7XG59XG5cbmZ1bmN0aW9uIGVuYWJsZVJlYWN0SE1SKCkge1xuICBnbG9iYWwuX19lbGVjdHJvbl9jb21waWxlX2htcl9lbmFibGVkX18gPSB0cnVlO1xuXG4gIGxldCBmaWxlc1dlQ2FyZUFib3V0ID0gZ2xvYmFsLmdsb2JhbENvbXBpbGVySG9zdC5saXN0ZW5Ub0NvbXBpbGVFdmVudHMoKVxuICAgIC5maWx0ZXIoeCA9PiAhRmlsZUNoYW5nZWRDYWNoZS5pc0luTm9kZU1vZHVsZXMoeC5maWxlUGF0aCkpO1xuXG4gIGxldCB3ZVNob3VsZFJlbG9hZCA9IGZpbGVzV2VDYXJlQWJvdXRcbiAgICAubWVyZ2VNYXAoeCA9PiB3YXRjaFBhdGgoeC5maWxlUGF0aCkubWFwKCgpID0+IHgpKVxuICAgIC5ndWFyYW50ZWVkVGhyb3R0bGUoMSoxMDAwKTtcblxuICByZXR1cm4gd2VTaG91bGRSZWxvYWRcbiAgICAuc3dpdGNoTWFwKCgpID0+IE9ic2VydmFibGUuZGVmZXIoKCkgPT4gT2JzZXJ2YWJsZS5mcm9tUHJvbWlzZSh0cmlnZ2VySE1SSW5SZW5kZXJlcnMoKSkuY2F0Y2goKCkgPT4gT2JzZXJ2YWJsZS5lbXB0eSgpKSkpXG4gICAgLnN1YnNjcmliZSgoKSA9PiBjb25zb2xlLmxvZyhcIkhNUiBzZW50IHRvIGFsbCB3aW5kb3dzIVwiKSk7XG59XG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/live-reload.js?')},"./node_modules/electron-compile/lib/pathwatcher-rx.js":
/*!*************************************************************!*\
  !*** ./node_modules/electron-compile/lib/pathwatcher-rx.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.watchPathDirect = watchPathDirect;\nexports.watchPath = watchPath;\n\nvar _fs = __webpack_require__(/*! fs */ "fs");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _Observable = __webpack_require__(/*! rxjs/Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n\nvar _Subscription = __webpack_require__(/*! rxjs/Subscription */ "./node_modules/electron-compile/node_modules/rxjs/Subscription.js");\n\nvar _lruCache = __webpack_require__(/*! lru-cache */ "./node_modules/lru-cache/index.js");\n\nvar _lruCache2 = _interopRequireDefault(_lruCache);\n\n__webpack_require__(/*! rxjs/add/operator/publish */ "./node_modules/electron-compile/node_modules/rxjs/add/operator/publish.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction watchPathDirect(directory) {\n  return _Observable.Observable.create(subj => {\n    let dead = false;\n\n    const watcher = _fs2.default.watch(directory, {}, (eventType, fileName) => {\n      if (dead) return;\n      subj.next({ eventType, fileName });\n    });\n\n    watcher.on(\'error\', e => {\n      dead = true;\n      subj.error(e);\n    });\n\n    return new _Subscription.Subscription(() => {\n      if (!dead) {\n        watcher.close();\n      }\n    });\n  });\n}\n\nconst pathCache = new _lruCache2.default({ length: 256 });\nfunction watchPath(directory) {\n  let ret = pathCache.get(directory);\n  if (ret) return ret;\n\n  ret = watchPathDirect(directory).publish().refCount();\n  pathCache.set(directory, ret);\n  return ret;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXRod2F0Y2hlci1yeC5qcyJdLCJuYW1lcyI6WyJ3YXRjaFBhdGhEaXJlY3QiLCJ3YXRjaFBhdGgiLCJkaXJlY3RvcnkiLCJPYnNlcnZhYmxlIiwiY3JlYXRlIiwic3ViaiIsImRlYWQiLCJ3YXRjaGVyIiwiZnMiLCJ3YXRjaCIsImV2ZW50VHlwZSIsImZpbGVOYW1lIiwibmV4dCIsIm9uIiwiZSIsImVycm9yIiwiU3Vic2NyaXB0aW9uIiwiY2xvc2UiLCJwYXRoQ2FjaGUiLCJMUlUiLCJsZW5ndGgiLCJyZXQiLCJnZXQiLCJwdWJsaXNoIiwicmVmQ291bnQiLCJzZXQiXSwibWFwcGluZ3MiOiI7Ozs7O1FBT2dCQSxlLEdBQUFBLGU7UUFtQkFDLFMsR0FBQUEsUzs7QUExQmhCOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTs7OztBQUVPLFNBQVNELGVBQVQsQ0FBeUJFLFNBQXpCLEVBQW9DO0FBQ3pDLFNBQU9DLHVCQUFXQyxNQUFYLENBQW1CQyxJQUFELElBQVU7QUFDakMsUUFBSUMsT0FBTyxLQUFYOztBQUVBLFVBQU1DLFVBQVVDLGFBQUdDLEtBQUgsQ0FBU1AsU0FBVCxFQUFvQixFQUFwQixFQUF3QixDQUFDUSxTQUFELEVBQVlDLFFBQVosS0FBeUI7QUFDL0QsVUFBSUwsSUFBSixFQUFVO0FBQ1ZELFdBQUtPLElBQUwsQ0FBVSxFQUFDRixTQUFELEVBQVlDLFFBQVosRUFBVjtBQUNELEtBSGUsQ0FBaEI7O0FBS0FKLFlBQVFNLEVBQVIsQ0FBVyxPQUFYLEVBQXFCQyxDQUFELElBQU87QUFDekJSLGFBQU8sSUFBUDtBQUNBRCxXQUFLVSxLQUFMLENBQVdELENBQVg7QUFDRCxLQUhEOztBQUtBLFdBQU8sSUFBSUUsMEJBQUosQ0FBaUIsTUFBTTtBQUFFLFVBQUksQ0FBQ1YsSUFBTCxFQUFXO0FBQUVDLGdCQUFRVSxLQUFSO0FBQWtCO0FBQUUsS0FBMUQsQ0FBUDtBQUNELEdBZE0sQ0FBUDtBQWVEOztBQUVELE1BQU1DLFlBQVksSUFBSUMsa0JBQUosQ0FBUSxFQUFFQyxRQUFRLEdBQVYsRUFBUixDQUFsQjtBQUNPLFNBQVNuQixTQUFULENBQW1CQyxTQUFuQixFQUE4QjtBQUNuQyxNQUFJbUIsTUFBTUgsVUFBVUksR0FBVixDQUFjcEIsU0FBZCxDQUFWO0FBQ0EsTUFBSW1CLEdBQUosRUFBUyxPQUFPQSxHQUFQOztBQUVUQSxRQUFNckIsZ0JBQWdCRSxTQUFoQixFQUEyQnFCLE9BQTNCLEdBQXFDQyxRQUFyQyxFQUFOO0FBQ0FOLFlBQVVPLEdBQVYsQ0FBY3ZCLFNBQWQsRUFBeUJtQixHQUF6QjtBQUNBLFNBQU9BLEdBQVA7QUFDRCIsImZpbGUiOiJwYXRod2F0Y2hlci1yeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5pbXBvcnQge1N1YnNjcmlwdGlvbn0gZnJvbSAncnhqcy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IExSVSBmcm9tICdscnUtY2FjaGUnO1xuXG5pbXBvcnQgJ3J4anMvYWRkL29wZXJhdG9yL3B1Ymxpc2gnO1xuXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hQYXRoRGlyZWN0KGRpcmVjdG9yeSkge1xuICByZXR1cm4gT2JzZXJ2YWJsZS5jcmVhdGUoKHN1YmopID0+IHtcbiAgICBsZXQgZGVhZCA9IGZhbHNlO1xuXG4gICAgY29uc3Qgd2F0Y2hlciA9IGZzLndhdGNoKGRpcmVjdG9yeSwge30sIChldmVudFR5cGUsIGZpbGVOYW1lKSA9PiB7XG4gICAgICBpZiAoZGVhZCkgcmV0dXJuO1xuICAgICAgc3Viai5uZXh0KHtldmVudFR5cGUsIGZpbGVOYW1lfSk7XG4gICAgfSk7XG5cbiAgICB3YXRjaGVyLm9uKCdlcnJvcicsIChlKSA9PiB7XG4gICAgICBkZWFkID0gdHJ1ZTtcbiAgICAgIHN1YmouZXJyb3IoZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbmV3IFN1YnNjcmlwdGlvbigoKSA9PiB7IGlmICghZGVhZCkgeyB3YXRjaGVyLmNsb3NlKCk7IH0gfSk7XG4gIH0pO1xufVxuXG5jb25zdCBwYXRoQ2FjaGUgPSBuZXcgTFJVKHsgbGVuZ3RoOiAyNTYgfSk7XG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hQYXRoKGRpcmVjdG9yeSkge1xuICBsZXQgcmV0ID0gcGF0aENhY2hlLmdldChkaXJlY3RvcnkpO1xuICBpZiAocmV0KSByZXR1cm4gcmV0O1xuXG4gIHJldCA9IHdhdGNoUGF0aERpcmVjdChkaXJlY3RvcnkpLnB1Ymxpc2goKS5yZWZDb3VudCgpO1xuICBwYXRoQ2FjaGUuc2V0KGRpcmVjdG9yeSwgcmV0KTtcbiAgcmV0dXJuIHJldDtcbn1cbiJdfQ==\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/pathwatcher-rx.js?')},"./node_modules/electron-compile/lib/promise.js":
/*!******************************************************!*\
  !*** ./node_modules/electron-compile/lib/promise.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.pzlib = exports.pfs = undefined;\n\nvar _pify = __webpack_require__(/*! pify */ "./node_modules/pify/index.js");\n\nvar _pify2 = _interopRequireDefault(_pify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// NB: We do this so that every module doesn\'t have to run pify\n// on fs and zlib\n\n\n/**\n * @private\n */\nconst pfs = exports.pfs = (0, _pify2.default)(__webpack_require__(/*! fs */ "fs"));\n\n/**\n * @private\n */\nconst pzlib = exports.pzlib = (0, _pify2.default)(__webpack_require__(/*! zlib */ "zlib"));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcm9taXNlLmpzIl0sIm5hbWVzIjpbInBmcyIsInJlcXVpcmUiLCJwemxpYiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQTtBQUNBOzs7QUFHQTs7O0FBR08sTUFBTUEsb0JBQU0sb0JBQUtDLFFBQVEsSUFBUixDQUFMLENBQVo7O0FBRVA7OztBQUdPLE1BQU1DLHdCQUFRLG9CQUFLRCxRQUFRLE1BQVIsQ0FBTCxDQUFkIiwiZmlsZSI6InByb21pc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGlmeSBmcm9tICdwaWZ5JztcblxuLy8gTkI6IFdlIGRvIHRoaXMgc28gdGhhdCBldmVyeSBtb2R1bGUgZG9lc24ndCBoYXZlIHRvIHJ1biBwaWZ5XG4vLyBvbiBmcyBhbmQgemxpYlxuXG5cbi8qKlxuICogQHByaXZhdGVcbiAqLyBcbmV4cG9ydCBjb25zdCBwZnMgPSBwaWZ5KHJlcXVpcmUoJ2ZzJykpO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi8gXG5leHBvcnQgY29uc3QgcHpsaWIgPSBwaWZ5KHJlcXVpcmUoJ3psaWInKSk7XG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/promise.js?')},"./node_modules/electron-compile/lib/protocol-hook.js":
/*!************************************************************!*\
  !*** ./node_modules/electron-compile/lib/protocol-hook.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rigHtmlDocumentToInitializeElectronCompile = rigHtmlDocumentToInitializeElectronCompile;\nexports.addBypassChecker = addBypassChecker;\nexports.initializeProtocolHook = initializeProtocolHook;\n\nvar _url = __webpack_require__(/*! url */ \"url\");\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _mimeTypes = __webpack_require__(/*! @paulcbetts/mime-types */ \"./node_modules/@paulcbetts/mime-types/index.js\");\n\nvar _mimeTypes2 = _interopRequireDefault(_mimeTypes);\n\nvar _lruCache = __webpack_require__(/*! lru-cache */ \"./node_modules/lru-cache/index.js\");\n\nvar _lruCache2 = _interopRequireDefault(_lruCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst magicWords = \"__magic__file__to__help__electron__compile.js\";\n\n// NB: These are duped in initialize-renderer so we can save startup time, make\n// sure to run both!\nconst magicGlobalForRootCacheDir = '__electron_compile_root_cache_dir';\nconst magicGlobalForAppRootDir = '__electron_compile_app_root_dir';\n\nconst d = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('electron-compile:protocol-hook');\n\nlet protocol = null;\n\nconst mapStatCache = new _lruCache2.default({ length: 512 });\nfunction doesMapFileExist(filePath) {\n  let ret = mapStatCache.get(filePath);\n  if (ret !== undefined) return Promise.resolve(ret);\n\n  return new Promise(res => {\n    _fs2.default.lstat(filePath, (err, s) => {\n      let failed = err || !s;\n\n      mapStatCache.set(filePath, !failed);\n      res(!failed);\n    });\n  });\n}\n\n/**\n * Adds our script header to the top of all HTML files\n *\n * @private\n */\nfunction rigHtmlDocumentToInitializeElectronCompile(doc) {\n  let lines = doc.split(\"\\n\");\n  let replacement = `<head><script src=\"${magicWords}\"><\/script>`;\n  let replacedHead = false;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (!lines[i].match(/<head>/i)) continue;\n\n    lines[i] = lines[i].replace(/<head>/i, replacement);\n    replacedHead = true;\n    break;\n  }\n\n  if (!replacedHead) {\n    replacement = `<html$1><head><script src=\"${magicWords}\"><\/script></head>`;\n    for (let i = 0; i < lines.length; i++) {\n      if (!lines[i].match(/<html/i)) continue;\n\n      lines[i] = lines[i].replace(/<html([^>]+)>/i, replacement);\n      break;\n    }\n  }\n\n  return lines.join(\"\\n\");\n}\n\nfunction requestFileJob(filePath, finish) {\n  _fs2.default.readFile(filePath, (err, buf) => {\n    if (err) {\n      if (err.errno === 34) {\n        finish(-6); // net::ERR_FILE_NOT_FOUND\n        return;\n      } else {\n        finish(-2); // net::FAILED\n        return;\n      }\n    }\n\n    finish({\n      data: buf,\n      mimeType: _mimeTypes2.default.lookup(filePath) || 'text/plain'\n    });\n  });\n}\n\nconst bypassCheckers = [];\n\n/**\n * Adds a function that will be called on electron-compile's protocol hook\n * used to intercept file requests.  Use this to bypass electron-compile\n * entirely for certain URI's.\n * \n * @param {Function} bypassChecker Function that will be called with the file path to determine whether to bypass or not\n */\nfunction addBypassChecker(bypassChecker) {\n  bypassCheckers.push(bypassChecker);\n}\n\n/**\n * Initializes the protocol hook on file: that allows us to intercept files\n * loaded by Chromium and rewrite them. This method along with\n * {@link registerRequireExtension} are the top-level methods that electron-compile\n * actually uses to intercept code that Electron loads.\n *\n * @param  {CompilerHost} compilerHost  The compiler host to use for compilation.\n */\nfunction initializeProtocolHook(compilerHost) {\n  protocol = protocol || __webpack_require__(/*! electron */ \"electron\").protocol;\n\n  global[magicGlobalForRootCacheDir] = compilerHost.rootCacheDir;\n  global[magicGlobalForAppRootDir] = compilerHost.appRoot;\n\n  const electronCompileSetupCode = `if (window.require) require('electron-compile/lib/initialize-renderer').initializeRendererProcess(${compilerHost.readOnlyMode});`;\n\n  protocol.interceptBufferProtocol('file', (() => {\n    var _ref = _asyncToGenerator(function* (request, finish) {\n      let uri = _url2.default.parse(request.url);\n\n      d(`Intercepting url ${request.url}`);\n      if (request.url.indexOf(magicWords) > -1) {\n        finish({\n          mimeType: 'application/javascript',\n          data: new Buffer(electronCompileSetupCode, 'utf8')\n        });\n\n        return;\n      }\n\n      // This is a protocol-relative URL that has gone pear-shaped in Electron,\n      // let's rewrite it\n      if (uri.host && uri.host.length > 1) {\n        //let newUri = request.url.replace(/^file:/, \"https:\");\n        // TODO: Jump off this bridge later\n        d(`TODO: Found bogus protocol-relative URL, can't fix it up!!`);\n        finish(-2);\n        return;\n      }\n\n      let filePath = decodeURIComponent(uri.pathname);\n\n      // NB: pathname has a leading '/' on Win32 for some reason\n      if (process.platform === 'win32') {\n        filePath = filePath.slice(1);\n      }\n\n      // NB: Special-case files coming from atom.asar or node_modules\n      if (filePath.match(/[\\/\\\\](atom|electron).asar/) || filePath.match(/[\\/\\\\](node_modules|bower_components)/)) {\n        // NBs on NBs: If we're loading an HTML file from node_modules, we still have\n        // to do the HTML document rigging\n        if (filePath.match(/\\.html?$/i)) {\n          let riggedContents = null;\n          _fs2.default.readFile(filePath, 'utf8', function (err, contents) {\n            if (err) {\n              if (err.errno === 34) {\n                finish(-6); // net::ERR_FILE_NOT_FOUND\n                return;\n              } else {\n                finish(-2); // net::FAILED\n                return;\n              }\n            }\n\n            riggedContents = rigHtmlDocumentToInitializeElectronCompile(contents);\n            finish({ data: new Buffer(riggedContents), mimeType: 'text/html' });\n            return;\n          });\n\n          return;\n        }\n\n        requestFileJob(filePath, finish);\n        return;\n      }\n\n      // NB: Chromium will somehow decide that external source map references\n      // aren't relative to the file that was loaded for node.js modules, but\n      // relative to the HTML file. Since we can't really figure out what the\n      // real path is, we just need to squelch it.\n      if (filePath.match(/\\.map$/i) && !(yield doesMapFileExist(filePath))) {\n        finish({ data: new Buffer(\"\", 'utf8'), mimeType: 'text/plain' });\n        return;\n      }\n\n      for (const bypassChecker of bypassCheckers) {\n        if (bypassChecker(filePath)) {\n          d('bypassing compilers for:', filePath);\n          requestFileJob(filePath, finish);\n          return;\n        }\n      }\n\n      try {\n        let result = yield compilerHost.compile(filePath);\n\n        if (result.mimeType === 'text/html') {\n          result.code = rigHtmlDocumentToInitializeElectronCompile(result.code);\n        }\n\n        if (result.binaryData || result.code instanceof Buffer) {\n          finish({ data: result.binaryData || result.code, mimeType: result.mimeType });\n          return;\n        } else {\n          finish({ data: new Buffer(result.code), mimeType: result.mimeType });\n          return;\n        }\n      } catch (e) {\n        let err = `Failed to compile ${filePath}: ${e.message}\\n${e.stack}`;\n        d(err);\n\n        if (e.errno === 34 /*ENOENT*/) {\n            finish(-6); // net::ERR_FILE_NOT_FOUND\n            return;\n          }\n\n        finish({ mimeType: 'text/plain', data: new Buffer(err) });\n        return;\n      }\n    });\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  })());\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/protocol-hook.js?")},"./node_modules/electron-compile/lib/read-only-compiler.js":
/*!*****************************************************************!*\
  !*** ./node_modules/electron-compile/lib/read-only-compiler.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }\n\n/**\n * ReadOnlyCompiler is a compiler which allows the host to inject all of the compiler\n * metadata information so that {@link CompileCache} et al are able to recreate the\n * hash without having two separate code paths.\n */\nclass ReadOnlyCompiler {\n  /**\n   * Creates a ReadOnlyCompiler instance\n   *\n   * @private\n   */\n  constructor(name, compilerVersion, compilerOptions, inputMimeTypes) {\n    Object.assign(this, { name, compilerVersion, compilerOptions, inputMimeTypes });\n  }\n\n  shouldCompileFile() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  determineDependentFiles() {\n    return _asyncToGenerator(function* () {\n      return [];\n    })();\n  }\n\n  compile() {\n    return _asyncToGenerator(function* () {\n      throw new Error("Read-only compilers can\'t compile");\n    })();\n  }\n\n  shouldCompileFileSync() {\n    return true;\n  }\n  determineDependentFilesSync() {\n    return [];\n  }\n\n  compileSync() {\n    throw new Error("Read-only compilers can\'t compile");\n  }\n\n  getCompilerVersion() {\n    return this.compilerVersion;\n  }\n}\nexports.default = ReadOnlyCompiler;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZWFkLW9ubHktY29tcGlsZXIuanMiXSwibmFtZXMiOlsiUmVhZE9ubHlDb21waWxlciIsImNvbnN0cnVjdG9yIiwibmFtZSIsImNvbXBpbGVyVmVyc2lvbiIsImNvbXBpbGVyT3B0aW9ucyIsImlucHV0TWltZVR5cGVzIiwiT2JqZWN0IiwiYXNzaWduIiwic2hvdWxkQ29tcGlsZUZpbGUiLCJkZXRlcm1pbmVEZXBlbmRlbnRGaWxlcyIsImNvbXBpbGUiLCJFcnJvciIsInNob3VsZENvbXBpbGVGaWxlU3luYyIsImRldGVybWluZURlcGVuZGVudEZpbGVzU3luYyIsImNvbXBpbGVTeW5jIiwiZ2V0Q29tcGlsZXJWZXJzaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztBQUtlLE1BQU1BLGdCQUFOLENBQXVCO0FBQ3BDOzs7OztBQUtBQyxjQUFZQyxJQUFaLEVBQWtCQyxlQUFsQixFQUFtQ0MsZUFBbkMsRUFBb0RDLGNBQXBELEVBQW9FO0FBQ2xFQyxXQUFPQyxNQUFQLENBQWMsSUFBZCxFQUFvQixFQUFFTCxJQUFGLEVBQVFDLGVBQVIsRUFBeUJDLGVBQXpCLEVBQTBDQyxjQUExQyxFQUFwQjtBQUNEOztBQUVLRyxtQkFBTixHQUEwQjtBQUFBO0FBQUUsYUFBTyxJQUFQO0FBQUY7QUFBZ0I7QUFDcENDLHlCQUFOLEdBQWdDO0FBQUE7QUFBRSxhQUFPLEVBQVA7QUFBRjtBQUFjOztBQUV4Q0MsU0FBTixHQUFnQjtBQUFBO0FBQ2QsWUFBTSxJQUFJQyxLQUFKLENBQVUsbUNBQVYsQ0FBTjtBQURjO0FBRWY7O0FBRURDLDBCQUF3QjtBQUFFLFdBQU8sSUFBUDtBQUFjO0FBQ3hDQyxnQ0FBOEI7QUFBRSxXQUFPLEVBQVA7QUFBWTs7QUFFNUNDLGdCQUFjO0FBQ1osVUFBTSxJQUFJSCxLQUFKLENBQVUsbUNBQVYsQ0FBTjtBQUNEOztBQUVESSx1QkFBcUI7QUFDbkIsV0FBTyxLQUFLWixlQUFaO0FBQ0Q7QUExQm1DO2tCQUFqQkgsZ0IiLCJmaWxlIjoicmVhZC1vbmx5LWNvbXBpbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWFkT25seUNvbXBpbGVyIGlzIGEgY29tcGlsZXIgd2hpY2ggYWxsb3dzIHRoZSBob3N0IHRvIGluamVjdCBhbGwgb2YgdGhlIGNvbXBpbGVyXG4gKiBtZXRhZGF0YSBpbmZvcm1hdGlvbiBzbyB0aGF0IHtAbGluayBDb21waWxlQ2FjaGV9IGV0IGFsIGFyZSBhYmxlIHRvIHJlY3JlYXRlIHRoZVxuICogaGFzaCB3aXRob3V0IGhhdmluZyB0d28gc2VwYXJhdGUgY29kZSBwYXRocy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhZE9ubHlDb21waWxlciB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgUmVhZE9ubHlDb21waWxlciBpbnN0YW5jZVxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSwgY29tcGlsZXJWZXJzaW9uLCBjb21waWxlck9wdGlvbnMsIGlucHV0TWltZVR5cGVzKSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCB7IG5hbWUsIGNvbXBpbGVyVmVyc2lvbiwgY29tcGlsZXJPcHRpb25zLCBpbnB1dE1pbWVUeXBlcyB9KTtcbiAgfVxuXG4gIGFzeW5jIHNob3VsZENvbXBpbGVGaWxlKCkgeyByZXR1cm4gdHJ1ZTsgfVxuICBhc3luYyBkZXRlcm1pbmVEZXBlbmRlbnRGaWxlcygpIHsgcmV0dXJuIFtdOyB9XG5cbiAgYXN5bmMgY29tcGlsZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWFkLW9ubHkgY29tcGlsZXJzIGNhbid0IGNvbXBpbGVcIik7XG4gIH1cblxuICBzaG91bGRDb21waWxlRmlsZVN5bmMoKSB7IHJldHVybiB0cnVlOyB9XG4gIGRldGVybWluZURlcGVuZGVudEZpbGVzU3luYygpIHsgcmV0dXJuIFtdOyB9XG5cbiAgY29tcGlsZVN5bmMoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUmVhZC1vbmx5IGNvbXBpbGVycyBjYW4ndCBjb21waWxlXCIpO1xuICB9XG5cbiAgZ2V0Q29tcGlsZXJWZXJzaW9uKCkge1xuICAgIHJldHVybiB0aGlzLmNvbXBpbGVyVmVyc2lvbjtcbiAgfVxufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/read-only-compiler.js?')},"./node_modules/electron-compile/lib/require-hook.js":
/*!***********************************************************!*\
  !*** ./node_modules/electron-compile/lib/require-hook.js ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = registerRequireExtension;\n\nvar _mimeTypes = __webpack_require__(/*! @paulcbetts/mime-types */ "./node_modules/@paulcbetts/mime-types/index.js");\n\nvar _mimeTypes2 = _interopRequireDefault(_mimeTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet HMR = false;\n\nconst d = __webpack_require__(/*! debug */ "./node_modules/debug/src/index.js")(\'electron-compile:require-hook\');\nlet electron = null;\n\nif (process.type === \'renderer\') {\n  window.__hot = [];\n  electron = __webpack_require__(/*! electron */ "electron");\n  HMR = electron.remote.getGlobal(\'__electron_compile_hmr_enabled__\');\n\n  if (HMR) {\n    electron.ipcRenderer.on(\'__electron-compile__HMR\', () => {\n      d("Got HMR signal!");\n\n      // Reset the module cache\n      let cache = __webpack_require__(/*! module */ "module")._cache;\n      let toEject = Object.keys(cache).filter(x => x && !x.match(/[\\\\\\/](node_modules|.*\\.asar)[\\\\\\/]/i));\n      toEject.forEach(x => {\n        d(`Removing node module entry for ${x}`);\n        delete cache[x];\n      });\n\n      window.__hot.forEach(fn => fn());\n    });\n  }\n}\n\n/**\n * Initializes the node.js hook that allows us to intercept files loaded by\n * node.js and rewrite them. This method along with {@link initializeProtocolHook}\n * are the top-level methods that electron-compile actually uses to intercept\n * code that Electron loads.\n *\n * @param  {CompilerHost} compilerHost  The compiler host to use for compilation.\n */\nfunction registerRequireExtension(compilerHost, isProduction) {\n  if (HMR) {\n    try {\n      __webpack_require__(/*! module */ "module").prototype.hot = {\n        accept: cb => window.__hot.push(cb)\n      };\n\n      (void 0)(\'react-hot-loader/patch\');\n    } catch (e) {\n      console.error(`Couldn\'t require react-hot-loader/patch, you need to add react-hot-loader@3 as a dependency! ${e.message}`);\n    }\n  }\n\n  let mimeTypeList = isProduction ? Object.keys(compilerHost.mimeTypesToRegister) : Object.keys(compilerHost.compilersByMimeType);\n\n  mimeTypeList.forEach(mimeType => {\n    let ext = _mimeTypes2.default.extension(mimeType);\n\n    (void 0)[`.${ext}`] = (module, filename) => {\n      var _compilerHost$compile = compilerHost.compileSync(filename);\n\n      let code = _compilerHost$compile.code;\n\n\n      if (code === null) {\n        console.error(`null code returned for "${filename}".  Please raise an issue on \'electron-compile\' with the contents of this file.`);\n      }\n\n      module._compile(code, filename);\n    };\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXF1aXJlLWhvb2suanMiXSwibmFtZXMiOlsicmVnaXN0ZXJSZXF1aXJlRXh0ZW5zaW9uIiwiSE1SIiwiZCIsInJlcXVpcmUiLCJlbGVjdHJvbiIsInByb2Nlc3MiLCJ0eXBlIiwid2luZG93IiwiX19ob3QiLCJyZW1vdGUiLCJnZXRHbG9iYWwiLCJpcGNSZW5kZXJlciIsIm9uIiwiY2FjaGUiLCJfY2FjaGUiLCJ0b0VqZWN0IiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsIngiLCJtYXRjaCIsImZvckVhY2giLCJmbiIsImNvbXBpbGVySG9zdCIsImlzUHJvZHVjdGlvbiIsInByb3RvdHlwZSIsImhvdCIsImFjY2VwdCIsImNiIiwicHVzaCIsIm1haW4iLCJlIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZSIsIm1pbWVUeXBlTGlzdCIsIm1pbWVUeXBlc1RvUmVnaXN0ZXIiLCJjb21waWxlcnNCeU1pbWVUeXBlIiwibWltZVR5cGUiLCJleHQiLCJtaW1lVHlwZXMiLCJleHRlbnNpb24iLCJleHRlbnNpb25zIiwibW9kdWxlIiwiZmlsZW5hbWUiLCJjb21waWxlU3luYyIsImNvZGUiLCJfY29tcGlsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBcUN3QkEsd0I7O0FBckN4Qjs7Ozs7O0FBRUEsSUFBSUMsTUFBTSxLQUFWOztBQUVBLE1BQU1DLElBQUlDLFFBQVEsT0FBUixFQUFpQiwrQkFBakIsQ0FBVjtBQUNBLElBQUlDLFdBQVcsSUFBZjs7QUFFQSxJQUFJQyxRQUFRQyxJQUFSLEtBQWlCLFVBQXJCLEVBQWlDO0FBQy9CQyxTQUFPQyxLQUFQLEdBQWUsRUFBZjtBQUNBSixhQUFXRCxRQUFRLFVBQVIsQ0FBWDtBQUNBRixRQUFNRyxTQUFTSyxNQUFULENBQWdCQyxTQUFoQixDQUEwQixrQ0FBMUIsQ0FBTjs7QUFFQSxNQUFJVCxHQUFKLEVBQVM7QUFDUEcsYUFBU08sV0FBVCxDQUFxQkMsRUFBckIsQ0FBd0IseUJBQXhCLEVBQW1ELE1BQU07QUFDdkRWLFFBQUUsaUJBQUY7O0FBRUE7QUFDQSxVQUFJVyxRQUFRVixRQUFRLFFBQVIsRUFBa0JXLE1BQTlCO0FBQ0EsVUFBSUMsVUFBVUMsT0FBT0MsSUFBUCxDQUFZSixLQUFaLEVBQW1CSyxNQUFuQixDQUEwQkMsS0FBS0EsS0FBSyxDQUFDQSxFQUFFQyxLQUFGLENBQVEsc0NBQVIsQ0FBckMsQ0FBZDtBQUNBTCxjQUFRTSxPQUFSLENBQWdCRixLQUFLO0FBQ25CakIsVUFBRyxrQ0FBaUNpQixDQUFFLEVBQXRDO0FBQ0EsZUFBT04sTUFBTU0sQ0FBTixDQUFQO0FBQ0QsT0FIRDs7QUFLQVosYUFBT0MsS0FBUCxDQUFhYSxPQUFiLENBQXFCQyxNQUFNQSxJQUEzQjtBQUNELEtBWkQ7QUFhRDtBQUNGOztBQUVEOzs7Ozs7OztBQVFlLFNBQVN0Qix3QkFBVCxDQUFrQ3VCLFlBQWxDLEVBQWdEQyxZQUFoRCxFQUE4RDtBQUMzRSxNQUFJdkIsR0FBSixFQUFTO0FBQ1AsUUFBSTtBQUNGRSxjQUFRLFFBQVIsRUFBa0JzQixTQUFsQixDQUE0QkMsR0FBNUIsR0FBa0M7QUFDaENDLGdCQUFTQyxFQUFELElBQVFyQixPQUFPQyxLQUFQLENBQWFxQixJQUFiLENBQWtCRCxFQUFsQjtBQURnQixPQUFsQzs7QUFJQXpCLGNBQVEyQixJQUFSLENBQWEzQixPQUFiLENBQXFCLHdCQUFyQjtBQUNELEtBTkQsQ0FNRSxPQUFPNEIsQ0FBUCxFQUFVO0FBQ1ZDLGNBQVFDLEtBQVIsQ0FBZSxnR0FBK0ZGLEVBQUVHLE9BQVEsRUFBeEg7QUFDRDtBQUNGOztBQUVELE1BQUlDLGVBQWVYLGVBQ2pCUixPQUFPQyxJQUFQLENBQVlNLGFBQWFhLG1CQUF6QixDQURpQixHQUVqQnBCLE9BQU9DLElBQVAsQ0FBWU0sYUFBYWMsbUJBQXpCLENBRkY7O0FBSUFGLGVBQWFkLE9BQWIsQ0FBc0JpQixRQUFELElBQWM7QUFDakMsUUFBSUMsTUFBTUMsb0JBQVVDLFNBQVYsQ0FBb0JILFFBQXBCLENBQVY7O0FBRUFuQyxZQUFRdUMsVUFBUixDQUFvQixJQUFHSCxHQUFJLEVBQTNCLElBQWdDLENBQUNJLE1BQUQsRUFBU0MsUUFBVCxLQUFzQjtBQUFBLGtDQUN2Q3JCLGFBQWFzQixXQUFiLENBQXlCRCxRQUF6QixDQUR1Qzs7QUFBQSxVQUMvQ0UsSUFEK0MseUJBQy9DQSxJQUQrQzs7O0FBR3BELFVBQUlBLFNBQVMsSUFBYixFQUFtQjtBQUNqQmQsZ0JBQVFDLEtBQVIsQ0FBZSwyQkFBMEJXLFFBQVMsaUZBQWxEO0FBQ0Q7O0FBRURELGFBQU9JLFFBQVAsQ0FBZ0JELElBQWhCLEVBQXNCRixRQUF0QjtBQUNELEtBUkQ7QUFTRCxHQVpEO0FBYUQiLCJmaWxlIjoicmVxdWlyZS1ob29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1pbWVUeXBlcyBmcm9tICdAcGF1bGNiZXR0cy9taW1lLXR5cGVzJztcblxubGV0IEhNUiA9IGZhbHNlO1xuXG5jb25zdCBkID0gcmVxdWlyZSgnZGVidWcnKSgnZWxlY3Ryb24tY29tcGlsZTpyZXF1aXJlLWhvb2snKTtcbmxldCBlbGVjdHJvbiA9IG51bGw7XG5cbmlmIChwcm9jZXNzLnR5cGUgPT09ICdyZW5kZXJlcicpIHtcbiAgd2luZG93Ll9faG90ID0gW107XG4gIGVsZWN0cm9uID0gcmVxdWlyZSgnZWxlY3Ryb24nKTtcbiAgSE1SID0gZWxlY3Ryb24ucmVtb3RlLmdldEdsb2JhbCgnX19lbGVjdHJvbl9jb21waWxlX2htcl9lbmFibGVkX18nKTtcblxuICBpZiAoSE1SKSB7XG4gICAgZWxlY3Ryb24uaXBjUmVuZGVyZXIub24oJ19fZWxlY3Ryb24tY29tcGlsZV9fSE1SJywgKCkgPT4ge1xuICAgICAgZChcIkdvdCBITVIgc2lnbmFsIVwiKTtcblxuICAgICAgLy8gUmVzZXQgdGhlIG1vZHVsZSBjYWNoZVxuICAgICAgbGV0IGNhY2hlID0gcmVxdWlyZSgnbW9kdWxlJykuX2NhY2hlO1xuICAgICAgbGV0IHRvRWplY3QgPSBPYmplY3Qua2V5cyhjYWNoZSkuZmlsdGVyKHggPT4geCAmJiAheC5tYXRjaCgvW1xcXFxcXC9dKG5vZGVfbW9kdWxlc3wuKlxcLmFzYXIpW1xcXFxcXC9dL2kpKTtcbiAgICAgIHRvRWplY3QuZm9yRWFjaCh4ID0+IHtcbiAgICAgICAgZChgUmVtb3Zpbmcgbm9kZSBtb2R1bGUgZW50cnkgZm9yICR7eH1gKTtcbiAgICAgICAgZGVsZXRlIGNhY2hlW3hdO1xuICAgICAgfSk7XG5cbiAgICAgIHdpbmRvdy5fX2hvdC5mb3JFYWNoKGZuID0+IGZuKCkpO1xuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZXMgdGhlIG5vZGUuanMgaG9vayB0aGF0IGFsbG93cyB1cyB0byBpbnRlcmNlcHQgZmlsZXMgbG9hZGVkIGJ5XG4gKiBub2RlLmpzIGFuZCByZXdyaXRlIHRoZW0uIFRoaXMgbWV0aG9kIGFsb25nIHdpdGgge0BsaW5rIGluaXRpYWxpemVQcm90b2NvbEhvb2t9XG4gKiBhcmUgdGhlIHRvcC1sZXZlbCBtZXRob2RzIHRoYXQgZWxlY3Ryb24tY29tcGlsZSBhY3R1YWxseSB1c2VzIHRvIGludGVyY2VwdFxuICogY29kZSB0aGF0IEVsZWN0cm9uIGxvYWRzLlxuICpcbiAqIEBwYXJhbSAge0NvbXBpbGVySG9zdH0gY29tcGlsZXJIb3N0ICBUaGUgY29tcGlsZXIgaG9zdCB0byB1c2UgZm9yIGNvbXBpbGF0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWdpc3RlclJlcXVpcmVFeHRlbnNpb24oY29tcGlsZXJIb3N0LCBpc1Byb2R1Y3Rpb24pIHtcbiAgaWYgKEhNUikge1xuICAgIHRyeSB7XG4gICAgICByZXF1aXJlKCdtb2R1bGUnKS5wcm90b3R5cGUuaG90ID0ge1xuICAgICAgICBhY2NlcHQ6IChjYikgPT4gd2luZG93Ll9faG90LnB1c2goY2IpXG4gICAgICB9O1xuXG4gICAgICByZXF1aXJlLm1haW4ucmVxdWlyZSgncmVhY3QtaG90LWxvYWRlci9wYXRjaCcpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYENvdWxkbid0IHJlcXVpcmUgcmVhY3QtaG90LWxvYWRlci9wYXRjaCwgeW91IG5lZWQgdG8gYWRkIHJlYWN0LWhvdC1sb2FkZXJAMyBhcyBhIGRlcGVuZGVuY3khICR7ZS5tZXNzYWdlfWApO1xuICAgIH1cbiAgfVxuXG4gIGxldCBtaW1lVHlwZUxpc3QgPSBpc1Byb2R1Y3Rpb24gP1xuICAgIE9iamVjdC5rZXlzKGNvbXBpbGVySG9zdC5taW1lVHlwZXNUb1JlZ2lzdGVyKSA6XG4gICAgT2JqZWN0LmtleXMoY29tcGlsZXJIb3N0LmNvbXBpbGVyc0J5TWltZVR5cGUpO1xuXG4gIG1pbWVUeXBlTGlzdC5mb3JFYWNoKChtaW1lVHlwZSkgPT4ge1xuICAgIGxldCBleHQgPSBtaW1lVHlwZXMuZXh0ZW5zaW9uKG1pbWVUeXBlKTtcblxuICAgIHJlcXVpcmUuZXh0ZW5zaW9uc1tgLiR7ZXh0fWBdID0gKG1vZHVsZSwgZmlsZW5hbWUpID0+IHtcbiAgICAgIGxldCB7Y29kZX0gPSBjb21waWxlckhvc3QuY29tcGlsZVN5bmMoZmlsZW5hbWUpO1xuXG4gICAgICBpZiAoY29kZSA9PT0gbnVsbCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBudWxsIGNvZGUgcmV0dXJuZWQgZm9yIFwiJHtmaWxlbmFtZX1cIi4gIFBsZWFzZSByYWlzZSBhbiBpc3N1ZSBvbiAnZWxlY3Ryb24tY29tcGlsZScgd2l0aCB0aGUgY29udGVudHMgb2YgdGhpcyBmaWxlLmApO1xuICAgICAgfVxuXG4gICAgICBtb2R1bGUuX2NvbXBpbGUoY29kZSwgZmlsZW5hbWUpO1xuICAgIH07XG4gIH0pO1xufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/require-hook.js?')},"./node_modules/electron-compile/lib/rig-mime-types.js":
/*!*************************************************************!*\
  !*** ./node_modules/electron-compile/lib/rig-mime-types.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\n\nvar _mimeTypes = __webpack_require__(/*! @paulcbetts/mime-types */ \"./node_modules/@paulcbetts/mime-types/index.js\");\n\nvar _mimeTypes2 = _interopRequireDefault(_mimeTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst typesToRig = {\n  'text/typescript': 'ts',\n  'text/tsx': 'tsx',\n  'text/jade': 'jade',\n  'text/cson': 'cson',\n  'text/stylus': 'styl',\n  'text/sass': 'sass',\n  'text/scss': 'scss',\n  'text/vue': 'vue',\n  'text/graphql': 'graphql'\n};\n\n/**\n * Adds MIME types for types not in the mime-types package\n *\n * @private\n */\nfunction init() {\n  Object.keys(typesToRig).forEach(type => {\n    let ext = typesToRig[type];\n\n    _mimeTypes2.default.types[ext] = type;\n    _mimeTypes2.default.extensions[type] = [ext];\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yaWctbWltZS10eXBlcy5qcyJdLCJuYW1lcyI6WyJpbml0IiwidHlwZXNUb1JpZyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwidHlwZSIsImV4dCIsIm1pbWVUeXBlcyIsInR5cGVzIiwiZXh0ZW5zaW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFtQmdCQSxJLEdBQUFBLEk7O0FBbkJoQjs7Ozs7O0FBRUEsTUFBTUMsYUFBYTtBQUNqQixxQkFBbUIsSUFERjtBQUVqQixjQUFZLEtBRks7QUFHakIsZUFBYSxNQUhJO0FBSWpCLGVBQWEsTUFKSTtBQUtqQixpQkFBZSxNQUxFO0FBTWpCLGVBQWEsTUFOSTtBQU9qQixlQUFhLE1BUEk7QUFRakIsY0FBWSxLQVJLO0FBU2pCLGtCQUFnQjtBQVRDLENBQW5COztBQVlBOzs7OztBQUtPLFNBQVNELElBQVQsR0FBZ0I7QUFDckJFLFNBQU9DLElBQVAsQ0FBWUYsVUFBWixFQUF3QkcsT0FBeEIsQ0FBaUNDLElBQUQsSUFBVTtBQUN4QyxRQUFJQyxNQUFNTCxXQUFXSSxJQUFYLENBQVY7O0FBRUFFLHdCQUFVQyxLQUFWLENBQWdCRixHQUFoQixJQUF1QkQsSUFBdkI7QUFDQUUsd0JBQVVFLFVBQVYsQ0FBcUJKLElBQXJCLElBQTZCLENBQUNDLEdBQUQsQ0FBN0I7QUFDRCxHQUxEO0FBTUQiLCJmaWxlIjoicmlnLW1pbWUtdHlwZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWltZVR5cGVzIGZyb20gJ0BwYXVsY2JldHRzL21pbWUtdHlwZXMnO1xuXG5jb25zdCB0eXBlc1RvUmlnID0ge1xuICAndGV4dC90eXBlc2NyaXB0JzogJ3RzJyxcbiAgJ3RleHQvdHN4JzogJ3RzeCcsXG4gICd0ZXh0L2phZGUnOiAnamFkZScsXG4gICd0ZXh0L2Nzb24nOiAnY3NvbicsXG4gICd0ZXh0L3N0eWx1cyc6ICdzdHlsJyxcbiAgJ3RleHQvc2Fzcyc6ICdzYXNzJyxcbiAgJ3RleHQvc2Nzcyc6ICdzY3NzJyxcbiAgJ3RleHQvdnVlJzogJ3Z1ZScsXG4gICd0ZXh0L2dyYXBocWwnOiAnZ3JhcGhxbCcsXG59O1xuXG4vKipcbiAqIEFkZHMgTUlNRSB0eXBlcyBmb3IgdHlwZXMgbm90IGluIHRoZSBtaW1lLXR5cGVzIHBhY2thZ2VcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgT2JqZWN0LmtleXModHlwZXNUb1JpZykuZm9yRWFjaCgodHlwZSkgPT4ge1xuICAgIGxldCBleHQgPSB0eXBlc1RvUmlnW3R5cGVdO1xuXG4gICAgbWltZVR5cGVzLnR5cGVzW2V4dF0gPSB0eXBlO1xuICAgIG1pbWVUeXBlcy5leHRlbnNpb25zW3R5cGVdID0gW2V4dF07XG4gIH0pO1xufVxuIl19\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/rig-mime-types.js?")},"./node_modules/electron-compile/lib/sanitize-paths.js":
/*!*************************************************************!*\
  !*** ./node_modules/electron-compile/lib/sanitize-paths.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sanitizeFilePath;\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _lruCache = __webpack_require__(/*! lru-cache */ \"./node_modules/lru-cache/index.js\");\n\nvar _lruCache2 = _interopRequireDefault(_lruCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst d = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('electron-compile:sanitize-paths');\nconst realpathCache = (0, _lruCache2.default)({ max: 1024 });\n\nfunction cachedRealpath(p) {\n  let ret = realpathCache.get(p);\n  if (ret) return ret;\n\n  ret = _fs2.default.realpathSync(p);\n  d(`Cache miss for cachedRealpath: '${p}' => '${ret}'`);\n\n  realpathCache.set(p, ret);\n  return ret;\n}\n\n/**\n * Electron will sometimes hand us paths that don't match the platform if they\n * were derived from a URL (i.e. 'C:/Users/Paul/...'), whereas the cache will have\n * saved paths with backslashes.\n *\n * @private\n */\nfunction sanitizeFilePath(file) {\n  if (!file) return file;\n\n  // NB: Some people add symlinks into system directories. node.js will internally\n  // call realpath on paths that it finds, which will break our cache resolution.\n  // We need to catch this scenario and fix it up. The tricky part is, some parts\n  // of Electron will give us the pre-resolved paths, and others will give us the\n  // post-resolved one. We need to handle both.\n\n  let realFile = null;\n  let parts = file.split(/[\\\\\\/]app.asar[\\\\\\/]/);\n  if (!parts[1]) {\n    // Not using an ASAR archive\n    realFile = cachedRealpath(file);\n  } else {\n    // We do all this silliness to work around\n    // https://github.com/atom/electron/issues/4610\n    realFile = `${cachedRealpath(parts[0])}/app.asar/${parts[1]}`;\n  }\n\n  return realFile.replace(/[\\\\\\/]/g, '/');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zYW5pdGl6ZS1wYXRocy5qcyJdLCJuYW1lcyI6WyJzYW5pdGl6ZUZpbGVQYXRoIiwiZCIsInJlcXVpcmUiLCJyZWFscGF0aENhY2hlIiwibWF4IiwiY2FjaGVkUmVhbHBhdGgiLCJwIiwicmV0IiwiZ2V0IiwiZnMiLCJyZWFscGF0aFN5bmMiLCJzZXQiLCJmaWxlIiwicmVhbEZpbGUiLCJwYXJ0cyIsInNwbGl0IiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBd0J3QkEsZ0I7O0FBeEJ4Qjs7OztBQUNBOzs7Ozs7QUFFQSxNQUFNQyxJQUFJQyxRQUFRLE9BQVIsRUFBaUIsaUNBQWpCLENBQVY7QUFDQSxNQUFNQyxnQkFBZ0Isd0JBQVMsRUFBRUMsS0FBSyxJQUFQLEVBQVQsQ0FBdEI7O0FBRUEsU0FBU0MsY0FBVCxDQUF3QkMsQ0FBeEIsRUFBMkI7QUFDekIsTUFBSUMsTUFBTUosY0FBY0ssR0FBZCxDQUFrQkYsQ0FBbEIsQ0FBVjtBQUNBLE1BQUlDLEdBQUosRUFBUyxPQUFPQSxHQUFQOztBQUVUQSxRQUFNRSxhQUFHQyxZQUFILENBQWdCSixDQUFoQixDQUFOO0FBQ0FMLElBQUcsbUNBQWtDSyxDQUFFLFNBQVFDLEdBQUksR0FBbkQ7O0FBRUFKLGdCQUFjUSxHQUFkLENBQWtCTCxDQUFsQixFQUFxQkMsR0FBckI7QUFDQSxTQUFPQSxHQUFQO0FBQ0Q7O0FBRUQ7Ozs7Ozs7QUFPZSxTQUFTUCxnQkFBVCxDQUEwQlksSUFBMUIsRUFBZ0M7QUFDN0MsTUFBSSxDQUFDQSxJQUFMLEVBQVcsT0FBT0EsSUFBUDs7QUFFWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQUlDLFdBQVcsSUFBZjtBQUNBLE1BQUlDLFFBQVFGLEtBQUtHLEtBQUwsQ0FBVyxzQkFBWCxDQUFaO0FBQ0EsTUFBSSxDQUFDRCxNQUFNLENBQU4sQ0FBTCxFQUFlO0FBQ2I7QUFDQUQsZUFBV1IsZUFBZU8sSUFBZixDQUFYO0FBQ0QsR0FIRCxNQUdPO0FBQ0w7QUFDQTtBQUNBQyxlQUFZLEdBQUVSLGVBQWVTLE1BQU0sQ0FBTixDQUFmLENBQXlCLGFBQVlBLE1BQU0sQ0FBTixDQUFTLEVBQTVEO0FBQ0Q7O0FBRUQsU0FBT0QsU0FBU0csT0FBVCxDQUFpQixTQUFqQixFQUE0QixHQUE1QixDQUFQO0FBQ0QiLCJmaWxlIjoic2FuaXRpemUtcGF0aHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IExSVUNhY2hlIGZyb20gJ2xydS1jYWNoZSc7XG5cbmNvbnN0IGQgPSByZXF1aXJlKCdkZWJ1ZycpKCdlbGVjdHJvbi1jb21waWxlOnNhbml0aXplLXBhdGhzJyk7XG5jb25zdCByZWFscGF0aENhY2hlID0gTFJVQ2FjaGUoeyBtYXg6IDEwMjQgfSk7XG5cbmZ1bmN0aW9uIGNhY2hlZFJlYWxwYXRoKHApIHtcbiAgbGV0IHJldCA9IHJlYWxwYXRoQ2FjaGUuZ2V0KHApO1xuICBpZiAocmV0KSByZXR1cm4gcmV0O1xuXG4gIHJldCA9IGZzLnJlYWxwYXRoU3luYyhwKTtcbiAgZChgQ2FjaGUgbWlzcyBmb3IgY2FjaGVkUmVhbHBhdGg6ICcke3B9JyA9PiAnJHtyZXR9J2ApO1xuXG4gIHJlYWxwYXRoQ2FjaGUuc2V0KHAsIHJldCk7XG4gIHJldHVybiByZXQ7XG59XG5cbi8qKlxuICogRWxlY3Ryb24gd2lsbCBzb21ldGltZXMgaGFuZCB1cyBwYXRocyB0aGF0IGRvbid0IG1hdGNoIHRoZSBwbGF0Zm9ybSBpZiB0aGV5XG4gKiB3ZXJlIGRlcml2ZWQgZnJvbSBhIFVSTCAoaS5lLiAnQzovVXNlcnMvUGF1bC8uLi4nKSwgd2hlcmVhcyB0aGUgY2FjaGUgd2lsbCBoYXZlXG4gKiBzYXZlZCBwYXRocyB3aXRoIGJhY2tzbGFzaGVzLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNhbml0aXplRmlsZVBhdGgoZmlsZSkge1xuICBpZiAoIWZpbGUpIHJldHVybiBmaWxlO1xuXG4gIC8vIE5COiBTb21lIHBlb3BsZSBhZGQgc3ltbGlua3MgaW50byBzeXN0ZW0gZGlyZWN0b3JpZXMuIG5vZGUuanMgd2lsbCBpbnRlcm5hbGx5XG4gIC8vIGNhbGwgcmVhbHBhdGggb24gcGF0aHMgdGhhdCBpdCBmaW5kcywgd2hpY2ggd2lsbCBicmVhayBvdXIgY2FjaGUgcmVzb2x1dGlvbi5cbiAgLy8gV2UgbmVlZCB0byBjYXRjaCB0aGlzIHNjZW5hcmlvIGFuZCBmaXggaXQgdXAuIFRoZSB0cmlja3kgcGFydCBpcywgc29tZSBwYXJ0c1xuICAvLyBvZiBFbGVjdHJvbiB3aWxsIGdpdmUgdXMgdGhlIHByZS1yZXNvbHZlZCBwYXRocywgYW5kIG90aGVycyB3aWxsIGdpdmUgdXMgdGhlXG4gIC8vIHBvc3QtcmVzb2x2ZWQgb25lLiBXZSBuZWVkIHRvIGhhbmRsZSBib3RoLlxuXG4gIGxldCByZWFsRmlsZSA9IG51bGw7XG4gIGxldCBwYXJ0cyA9IGZpbGUuc3BsaXQoL1tcXFxcXFwvXWFwcC5hc2FyW1xcXFxcXC9dLyk7XG4gIGlmICghcGFydHNbMV0pIHtcbiAgICAvLyBOb3QgdXNpbmcgYW4gQVNBUiBhcmNoaXZlXG4gICAgcmVhbEZpbGUgPSBjYWNoZWRSZWFscGF0aChmaWxlKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBXZSBkbyBhbGwgdGhpcyBzaWxsaW5lc3MgdG8gd29yayBhcm91bmRcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYXRvbS9lbGVjdHJvbi9pc3N1ZXMvNDYxMFxuICAgIHJlYWxGaWxlID0gYCR7Y2FjaGVkUmVhbHBhdGgocGFydHNbMF0pfS9hcHAuYXNhci8ke3BhcnRzWzFdfWA7XG4gIH1cblxuICByZXR1cm4gcmVhbEZpbGUucmVwbGFjZSgvW1xcXFxcXC9dL2csICcvJyk7XG59XG4iXX0=\n\n//# sourceURL=webpack:///./node_modules/electron-compile/lib/sanitize-paths.js?")},"./node_modules/electron-compile/node_modules/rxjs/InnerSubscriber.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/InnerSubscriber.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ./Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/InnerSubscriber.js?')},"./node_modules/electron-compile/node_modules/rxjs/Observable.js":
/*!***********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/Observable.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar root_1 = __webpack_require__(/*! ./util/root */ "./node_modules/electron-compile/node_modules/rxjs/util/root.js");\nvar toSubscriber_1 = __webpack_require__(/*! ./util/toSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/util/toSubscriber.js");\nvar observable_1 = __webpack_require__(/*! ./symbol/observable */ "./node_modules/electron-compile/node_modules/rxjs/symbol/observable.js");\nvar pipe_1 = __webpack_require__(/*! ./util/pipe */ "./node_modules/electron-compile/node_modules/rxjs/util/pipe.js");\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable\'s operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class="informal">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable\'s internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don\'t need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn\'t\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log(\'Adding: \' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log(\'Sum equals: \' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // "Adding: 1"\n     * // "Adding: 2"\n     * // "Adding: 3"\n     * // "Sum equals: 6"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log(\'Adding: \' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log(\'Sum equals: \' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // "Adding: 1"\n     * // "Adding: 2"\n     * // "Adding: 3"\n     * // "Sum equals: 6"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log(\'completed!\') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log(\'unsubscribed!\');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // "unsubscribed!" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error(\'no Promise impl found\');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we\'re getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable\'s `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from \'rxjs/operators\';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error(\'no Promise impl found\');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/Observable.js?')},"./node_modules/electron-compile/node_modules/rxjs/Observer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/Observer.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/Observer.js?")},"./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ./Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js?')},"./node_modules/electron-compile/node_modules/rxjs/Scheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/Scheduler.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/Scheduler.js?")},"./node_modules/electron-compile/node_modules/rxjs/Subject.js":
/*!********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/Subject.js ***!
  \********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ./Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar Subscriber_1 = __webpack_require__(/*! ./Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ "./node_modules/electron-compile/node_modules/rxjs/Subscription.js");\nvar ObjectUnsubscribedError_1 = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/electron-compile/node_modules/rxjs/util/ObjectUnsubscribedError.js");\nvar SubjectSubscription_1 = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/electron-compile/node_modules/rxjs/SubjectSubscription.js");\nvar rxSubscriber_1 = __webpack_require__(/*! ./symbol/rxSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/symbol/rxSubscriber.js");\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated internal use only */ Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated internal use only */ AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/Subject.js?')},"./node_modules/electron-compile/node_modules/rxjs/SubjectSubscription.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/SubjectSubscription.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ "./node_modules/electron-compile/node_modules/rxjs/Subscription.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/SubjectSubscription.js?')},"./node_modules/electron-compile/node_modules/rxjs/Subscriber.js":
/*!***********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/Subscriber.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = __webpack_require__(/*! ./util/isFunction */ "./node_modules/electron-compile/node_modules/rxjs/util/isFunction.js");\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ "./node_modules/electron-compile/node_modules/rxjs/Subscription.js");\nvar Observer_1 = __webpack_require__(/*! ./Observer */ "./node_modules/electron-compile/node_modules/rxjs/Observer.js");\nvar rxSubscriber_1 = __webpack_require__(/*! ./symbol/rxSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/symbol/rxSubscriber.js");\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === \'object\') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || (\'syncErrorThrowable\' in obj && obj[rxSubscriber_1.rxSubscriber]);\n}\n//# sourceMappingURL=Subscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/Subscriber.js?')},"./node_modules/electron-compile/node_modules/rxjs/Subscription.js":
/*!*************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/Subscription.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar isArray_1 = __webpack_require__(/*! ./util/isArray */ \"./node_modules/electron-compile/node_modules/rxjs/util/isArray.js\");\nvar isObject_1 = __webpack_require__(/*! ./util/isObject */ \"./node_modules/electron-compile/node_modules/rxjs/util/isObject.js\");\nvar isFunction_1 = __webpack_require__(/*! ./util/isFunction */ \"./node_modules/electron-compile/node_modules/rxjs/util/isFunction.js\");\nvar tryCatch_1 = __webpack_require__(/*! ./util/tryCatch */ \"./node_modules/electron-compile/node_modules/rxjs/util/tryCatch.js\");\nvar errorObject_1 = __webpack_require__(/*! ./util/errorObject */ \"./node_modules/electron-compile/node_modules/rxjs/util/errorObject.js\");\nvar UnsubscriptionError_1 = __webpack_require__(/*! ./util/UnsubscriptionError */ \"./node_modules/electron-compile/node_modules/rxjs/util/UnsubscriptionError.js\");\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/Subscription.js?")},"./node_modules/electron-compile/node_modules/rxjs/add/observable/defer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/observable/defer.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar defer_1 = __webpack_require__(/*! ../../observable/defer */ "./node_modules/electron-compile/node_modules/rxjs/observable/defer.js");\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/observable/defer.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/observable/empty.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/observable/empty.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar empty_1 = __webpack_require__(/*! ../../observable/empty */ "./node_modules/electron-compile/node_modules/rxjs/observable/empty.js");\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/observable/empty.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/observable/fromPromise.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/observable/fromPromise.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar fromPromise_1 = __webpack_require__(/*! ../../observable/fromPromise */ "./node_modules/electron-compile/node_modules/rxjs/observable/fromPromise.js");\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/observable/fromPromise.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/observable/range.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/observable/range.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar range_1 = __webpack_require__(/*! ../../observable/range */ "./node_modules/electron-compile/node_modules/rxjs/observable/range.js");\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/observable/range.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/observable/throw.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/observable/throw.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar throw_1 = __webpack_require__(/*! ../../observable/throw */ "./node_modules/electron-compile/node_modules/rxjs/observable/throw.js");\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/observable/throw.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/observable/timer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/observable/timer.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar timer_1 = __webpack_require__(/*! ../../observable/timer */ "./node_modules/electron-compile/node_modules/rxjs/observable/timer.js");\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/observable/timer.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/catch.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/catch.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar catch_1 = __webpack_require__(/*! ../../operator/catch */ "./node_modules/electron-compile/node_modules/rxjs/operator/catch.js");\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/catch.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/filter.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/filter.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar filter_1 = __webpack_require__(/*! ../../operator/filter */ "./node_modules/electron-compile/node_modules/rxjs/operator/filter.js");\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/filter.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/map.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/map.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar map_1 = __webpack_require__(/*! ../../operator/map */ "./node_modules/electron-compile/node_modules/rxjs/operator/map.js");\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/map.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/mergeMap.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/mergeMap.js ***!
  \**********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar mergeMap_1 = __webpack_require__(/*! ../../operator/mergeMap */ "./node_modules/electron-compile/node_modules/rxjs/operator/mergeMap.js");\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/mergeMap.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/publish.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/publish.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar publish_1 = __webpack_require__(/*! ../../operator/publish */ "./node_modules/electron-compile/node_modules/rxjs/operator/publish.js");\nObservable_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/publish.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/retryWhen.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/retryWhen.js ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar retryWhen_1 = __webpack_require__(/*! ../../operator/retryWhen */ "./node_modules/electron-compile/node_modules/rxjs/operator/retryWhen.js");\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/retryWhen.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/switch.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/switch.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar switch_1 = __webpack_require__(/*! ../../operator/switch */ "./node_modules/electron-compile/node_modules/rxjs/operator/switch.js");\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/switch.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/switchMap.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/switchMap.js ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar switchMap_1 = __webpack_require__(/*! ../../operator/switchMap */ "./node_modules/electron-compile/node_modules/rxjs/operator/switchMap.js");\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/switchMap.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/timeout.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/timeout.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar timeout_1 = __webpack_require__(/*! ../../operator/timeout */ "./node_modules/electron-compile/node_modules/rxjs/operator/timeout.js");\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/timeout.js?')},"./node_modules/electron-compile/node_modules/rxjs/add/operator/zip.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/add/operator/zip.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Observable_1 = __webpack_require__(/*! ../../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar zip_1 = __webpack_require__(/*! ../../operator/zip */ "./node_modules/electron-compile/node_modules/rxjs/operator/zip.js");\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/add/operator/zip.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/ArrayObservable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/ArrayObservable.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar ScalarObservable_1 = __webpack_require__(/*! ./ScalarObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/ScalarObservable.js");\nvar EmptyObservable_1 = __webpack_require__(/*! ./EmptyObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/EmptyObservable.js");\nvar isScheduler_1 = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/electron-compile/node_modules/rxjs/util/isScheduler.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class="informal">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src="./img/of.png" width="100%">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then \'a\', \'b\', \'c\', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of(\'a\', \'b\', \'c\');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/ArrayObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/ConnectableObservable.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/ConnectableObservable.js ***!
  \*********************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(/*! ../Subject */ "./node_modules/electron-compile/node_modules/rxjs/Subject.js");\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\nvar Subscription_1 = __webpack_require__(/*! ../Subscription */ "./node_modules/electron-compile/node_modules/rxjs/Subscription.js");\nvar refCount_1 = __webpack_require__(/*! ../operators/refCount */ "./node_modules/electron-compile/node_modules/rxjs/operators/refCount.js");\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(/** @deprecated internal use only */ source, \n        /** @deprecated internal use only */ subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        /** @deprecated internal use only */ this._refCount = 0;\n        this._isComplete = false;\n    }\n    /** @deprecated internal use only */ ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    /** @deprecated internal use only */ ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber\'s connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber\'s downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable\'s shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn\'t have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber\'s connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/ConnectableObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/DeferObservable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/DeferObservable.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar subscribeToResult_1 = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js");\nvar OuterSubscriber_1 = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class="informal">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src="./img/defer.png" width="100%">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, \'click\');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the "document"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers\' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/DeferObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/EmptyObservable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/EmptyObservable.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ \"./node_modules/electron-compile/node_modules/rxjs/Observable.js\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/EmptyObservable.js?")},"./node_modules/electron-compile/node_modules/rxjs/observable/ErrorObservable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/ErrorObservable.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ \"./node_modules/electron-compile/node_modules/rxjs/Observable.js\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    /** @deprecated internal use only */ ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/ErrorObservable.js?")},"./node_modules/electron-compile/node_modules/rxjs/observable/PromiseObservable.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/PromiseObservable.js ***!
  \*****************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(/*! ../util/root */ "./node_modules/electron-compile/node_modules/rxjs/util/root.js");\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class="informal">Returns an Observable that just emits the Promise\'s\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch(\'http://myserver.com/\'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    /** @deprecated internal use only */ PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/PromiseObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/RangeObservable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/RangeObservable.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class="informal">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src="./img/range.png" width="100%">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/RangeObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/ScalarObservable.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/ScalarObservable.js ***!
  \****************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/ScalarObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/TimerObservable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/TimerObservable.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/electron-compile/node_modules/rxjs/util/isNumeric.js");\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar async_1 = __webpack_require__(/*! ../scheduler/async */ "./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js");\nvar isScheduler_1 = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/electron-compile/node_modules/rxjs/util/isScheduler.js");\nvar isDate_1 = __webpack_require__(/*! ../util/isDate */ "./node_modules/electron-compile/node_modules/rxjs/util/isDate.js");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class="informal">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src="./img/timer.png" width="100%">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of "time".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    /** @deprecated internal use only */ TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/TimerObservable.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/defer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/defer.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar DeferObservable_1 = __webpack_require__(/*! ./DeferObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/DeferObservable.js");\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/defer.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/empty.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/empty.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar EmptyObservable_1 = __webpack_require__(/*! ./EmptyObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/EmptyObservable.js");\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/empty.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/fromPromise.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/fromPromise.js ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar PromiseObservable_1 = __webpack_require__(/*! ./PromiseObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/PromiseObservable.js");\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/fromPromise.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/range.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/range.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar RangeObservable_1 = __webpack_require__(/*! ./RangeObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/RangeObservable.js");\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/range.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/throw.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/throw.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar ErrorObservable_1 = __webpack_require__(/*! ./ErrorObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/ErrorObservable.js");\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/throw.js?')},"./node_modules/electron-compile/node_modules/rxjs/observable/timer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/observable/timer.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar TimerObservable_1 = __webpack_require__(/*! ./TimerObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/TimerObservable.js");\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/observable/timer.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/catch.js":
/*!***************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/catch.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar catchError_1 = __webpack_require__(/*! ../operators/catchError */ \"./node_modules/electron-compile/node_modules/rxjs/operators/catchError.js\");\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    return catchError_1.catchError(selector)(this);\n}\nexports._catch = _catch;\n//# sourceMappingURL=catch.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/catch.js?")},"./node_modules/electron-compile/node_modules/rxjs/operator/filter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/filter.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar filter_1 = __webpack_require__(/*! ../operators/filter */ "./node_modules/electron-compile/node_modules/rxjs/operators/filter.js");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class="informal">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src="./img/filter.png" width="100%">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === \'DIV\');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return filter_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n//# sourceMappingURL=filter.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/filter.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/map.js":
/*!*************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/map.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar map_1 = __webpack_require__(/*! ../operators/map */ "./node_modules/electron-compile/node_modules/rxjs/operators/map.js");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src="./img/map.png" width="100%">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return map_1.map(project, thisArg)(this);\n}\nexports.map = map;\n//# sourceMappingURL=map.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/map.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/mergeMap.js":
/*!******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/mergeMap.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar mergeMap_1 = __webpack_require__(/*! ../operators/mergeMap */ "./node_modules/electron-compile/node_modules/rxjs/operators/mergeMap.js");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class="informal">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src="./img/mergeMap.png" width="100%">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of(\'a\', \'b\', \'c\');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the "index" of the value that came from the source\n * - `innerIndex`: the "index" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(project, resultSelector, concurrent)(this);\n}\nexports.mergeMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/mergeMap.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/publish.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/publish.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar publish_1 = __webpack_require__(/*! ../operators/publish */ "./node_modules/electron-compile/node_modules/rxjs/operators/publish.js");\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src="./img/publish.png" width="100%">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return publish_1.publish(selector)(this);\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/publish.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/retryWhen.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/retryWhen.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar retryWhen_1 = __webpack_require__(/*! ../operators/retryWhen */ "./node_modules/electron-compile/node_modules/rxjs/operators/retryWhen.js");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src="./img/retryWhen.png" width="100%">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return retryWhen_1.retryWhen(notifier)(this);\n}\nexports.retryWhen = retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/retryWhen.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/switch.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/switch.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar switchAll_1 = __webpack_require__(/*! ../operators/switchAll */ "./node_modules/electron-compile/node_modules/rxjs/operators/switchAll.js");\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class="informal">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src="./img/switch.png" width="100%">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return switchAll_1.switchAll()(this);\n}\nexports._switch = _switch;\n//# sourceMappingURL=switch.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/switch.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/switchMap.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/switchMap.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar switchMap_1 = __webpack_require__(/*! ../operators/switchMap */ "./node_modules/electron-compile/node_modules/rxjs/operators/switchMap.js");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class="informal">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src="./img/switchMap.png" width="100%">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called "inner") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the "index" of the value that came from the source\n * - `innerIndex`: the "index" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return switchMap_1.switchMap(project, resultSelector)(this);\n}\nexports.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/switchMap.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/timeout.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/timeout.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar async_1 = __webpack_require__(/*! ../scheduler/async */ "./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js");\nvar timeout_1 = __webpack_require__(/*! ../operators/timeout */ "./node_modules/electron-compile/node_modules/rxjs/operators/timeout.js");\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class="informal">Timeouts on Observable that doesn\'t emit values fast enough.</span>\n *\n * <img src="./img/timeout.png" width="100%">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let\'s use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date("December 17, 2020 03:24:00"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return timeout_1.timeout(due, scheduler)(this);\n}\nexports.timeout = timeout;\n//# sourceMappingURL=timeout.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/timeout.js?')},"./node_modules/electron-compile/node_modules/rxjs/operator/zip.js":
/*!*************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operator/zip.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar zip_1 = __webpack_require__(/*! ../operators/zip */ "./node_modules/electron-compile/node_modules/rxjs/operators/zip.js");\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return zip_1.zip.apply(void 0, observables)(this);\n}\nexports.zipProto = zipProto;\n//# sourceMappingURL=zip.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operator/zip.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/catchError.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/catchError.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(/*! ../OuterSubscriber */ \"./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js\");\nvar subscribeToResult_1 = __webpack_require__(/*! ../util/subscribeToResult */ \"./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js\");\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nfunction catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nexports.catchError = catchError;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/catchError.js?")},"./node_modules/electron-compile/node_modules/rxjs/operators/filter.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/filter.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class="informal">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src="./img/filter.png" width="100%">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === \'DIV\');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/filter.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/map.js":
/*!**************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/map.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src="./img/map.png" width="100%">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== \'function\') {\n            throw new TypeError(\'argument is not a function. Are you looking for `mapTo()`?\');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it\'s actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/map.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/mergeMap.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/mergeMap.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js");\nvar OuterSubscriber_1 = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class="informal">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src="./img/mergeMap.png" width="100%">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of(\'a\', \'b\', \'c\');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the "index" of the value that came from the source\n * - `innerIndex`: the "index" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === \'number\') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/mergeMap.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/multicast.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/multicast.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar ConnectableObservable_1 = __webpack_require__(/*! ../observable/ConnectableObservable */ "./node_modules/electron-compile/node_modules/rxjs/observable/ConnectableObservable.js");\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src="./img/multicast.png" width="100%">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence\'s elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === \'function\') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === \'function\') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexports.multicast = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexports.MulticastOperator = MulticastOperator;\n//# sourceMappingURL=multicast.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/multicast.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/publish.js":
/*!******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/publish.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Subject_1 = __webpack_require__(/*! ../Subject */ "./node_modules/electron-compile/node_modules/rxjs/Subject.js");\nvar multicast_1 = __webpack_require__(/*! ./multicast */ "./node_modules/electron-compile/node_modules/rxjs/operators/multicast.js");\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src="./img/publish.png" width="100%">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return selector ?\n        multicast_1.multicast(function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast(new Subject_1.Subject());\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/publish.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/refCount.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/refCount.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/electron-compile/node_modules/rxjs/Subscriber.js\");\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nexports.refCount = refCount;\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=refCount.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/refCount.js?")},"./node_modules/electron-compile/node_modules/rxjs/operators/retryWhen.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/retryWhen.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = __webpack_require__(/*! ../Subject */ "./node_modules/electron-compile/node_modules/rxjs/Subject.js");\nvar tryCatch_1 = __webpack_require__(/*! ../util/tryCatch */ "./node_modules/electron-compile/node_modules/rxjs/util/tryCatch.js");\nvar errorObject_1 = __webpack_require__(/*! ../util/errorObject */ "./node_modules/electron-compile/node_modules/rxjs/util/errorObject.js");\nvar OuterSubscriber_1 = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js");\nvar subscribeToResult_1 = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js");\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src="./img/retryWhen.png" width="100%">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    /** @deprecated internal use only */ RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/retryWhen.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/switchAll.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/switchAll.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar switchMap_1 = __webpack_require__(/*! ./switchMap */ "./node_modules/electron-compile/node_modules/rxjs/operators/switchMap.js");\nvar identity_1 = __webpack_require__(/*! ../util/identity */ "./node_modules/electron-compile/node_modules/rxjs/util/identity.js");\nfunction switchAll() {\n    return switchMap_1.switchMap(identity_1.identity);\n}\nexports.switchAll = switchAll;\n//# sourceMappingURL=switchAll.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/switchAll.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/switchMap.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/switchMap.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js");\nvar subscribeToResult_1 = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js");\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class="informal">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src="./img/switchMap.png" width="100%">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called "inner") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, \'click\');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the "index" of the value that came from the source\n * - `innerIndex`: the "index" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/switchMap.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/timeout.js":
/*!******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/timeout.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(/*! ../scheduler/async */ "./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js");\nvar isDate_1 = __webpack_require__(/*! ../util/isDate */ "./node_modules/electron-compile/node_modules/rxjs/util/isDate.js");\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\nvar TimeoutError_1 = __webpack_require__(/*! ../util/TimeoutError */ "./node_modules/electron-compile/node_modules/rxjs/util/TimeoutError.js");\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class="informal">Timeouts on Observable that doesn\'t emit values fast enough.</span>\n *\n * <img src="./img/timeout.png" width="100%">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let\'s use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date("December 17, 2020 03:24:00"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError())); };\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we\'ve already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that\'s the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated internal use only */ TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/timeout.js?')},"./node_modules/electron-compile/node_modules/rxjs/operators/zip.js":
/*!**************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/operators/zip.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = __webpack_require__(/*! ../observable/ArrayObservable */ \"./node_modules/electron-compile/node_modules/rxjs/observable/ArrayObservable.js\");\nvar isArray_1 = __webpack_require__(/*! ../util/isArray */ \"./node_modules/electron-compile/node_modules/rxjs/util/isArray.js\");\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ \"./node_modules/electron-compile/node_modules/rxjs/Subscriber.js\");\nvar OuterSubscriber_1 = __webpack_require__(/*! ../OuterSubscriber */ \"./node_modules/electron-compile/node_modules/rxjs/OuterSubscriber.js\");\nvar subscribeToResult_1 = __webpack_require__(/*! ../util/subscribeToResult */ \"./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js\");\nvar iterator_1 = __webpack_require__(/*! ../symbol/iterator */ \"./node_modules/electron-compile/node_modules/rxjs/symbol/iterator.js\");\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\nexports.zip = zip;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/operators/zip.js?")},"./node_modules/electron-compile/node_modules/rxjs/scheduler/Action.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/scheduler/Action.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(/*! ../Subscription */ "./node_modules/electron-compile/node_modules/rxjs/Subscription.js");\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/scheduler/Action.js?')},"./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncAction.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncAction.js ***!
  \**********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(/*! ../util/root */ \"./node_modules/electron-compile/node_modules/rxjs/util/root.js\");\nvar Action_1 = __webpack_require__(/*! ./Action */ \"./node_modules/electron-compile/node_modules/rxjs/scheduler/Action.js\");\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.pending = false;\n        this.work = work;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncAction.js?")},"./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncScheduler.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncScheduler.js ***!
  \*************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = __webpack_require__(/*! ../Scheduler */ "./node_modules/electron-compile/node_modules/rxjs/Scheduler.js");\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncScheduler.js?')},"./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar AsyncAction_1 = __webpack_require__(/*! ./AsyncAction */ "./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncAction.js");\nvar AsyncScheduler_1 = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/electron-compile/node_modules/rxjs/scheduler/AsyncScheduler.js");\n/**\n *\n * Async Scheduler\n *\n * <span class="informal">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to "defer" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log(\'it works!\');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // "it works!"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/scheduler/async.js?')},"./node_modules/electron-compile/node_modules/rxjs/symbol/iterator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/symbol/iterator.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ \"./node_modules/electron-compile/node_modules/rxjs/util/root.js\");\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/symbol/iterator.js?")},"./node_modules/electron-compile/node_modules/rxjs/symbol/observable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/symbol/observable.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ \"./node_modules/electron-compile/node_modules/rxjs/util/root.js\");\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/symbol/observable.js?")},"./node_modules/electron-compile/node_modules/rxjs/symbol/rxSubscriber.js":
/*!********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/symbol/rxSubscriber.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ \"./node_modules/electron-compile/node_modules/rxjs/util/root.js\");\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/symbol/rxSubscriber.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/ObjectUnsubscribedError.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/ObjectUnsubscribedError.js ***!
  \*****************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/ObjectUnsubscribedError.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/TimeoutError.js":
/*!******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/TimeoutError.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = (function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError() {\n        var err = _super.call(this, 'Timeout has occurred');\n        this.name = err.name = 'TimeoutError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return TimeoutError;\n}(Error));\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/TimeoutError.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/UnsubscriptionError.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/UnsubscriptionError.js ***!
  \*************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/UnsubscriptionError.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/errorObject.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/errorObject.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/errorObject.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/identity.js":
/*!**************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/identity.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nfunction identity(x) {\n    return x;\n}\nexports.identity = identity;\n//# sourceMappingURL=identity.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/identity.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isArray.js":
/*!*************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isArray.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isArray.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isArrayLike.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isArrayLike.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isArrayLike.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isDate.js":
/*!************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isDate.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isDate.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isFunction.js":
/*!****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isFunction.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isFunction.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isNumeric.js":
/*!***************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isNumeric.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar isArray_1 = __webpack_require__(/*! ../util/isArray */ "./node_modules/electron-compile/node_modules/rxjs/util/isArray.js");\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|"")\n    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isNumeric.js?')},"./node_modules/electron-compile/node_modules/rxjs/util/isObject.js":
/*!**************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isObject.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isObject.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isPromise.js":
/*!***************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isPromise.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isPromise.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/isScheduler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/isScheduler.js ***!
  \*****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/isScheduler.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/noop.js":
/*!**********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/noop.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/noop.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/pipe.js":
/*!**********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/pipe.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar noop_1 = __webpack_require__(/*! ./noop */ "./node_modules/electron-compile/node_modules/rxjs/util/noop.js");\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/pipe.js?')},"./node_modules/electron-compile/node_modules/rxjs/util/root.js":
/*!**********************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/root.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/root.js?")},"./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar root_1 = __webpack_require__(/*! ./root */ "./node_modules/electron-compile/node_modules/rxjs/util/root.js");\nvar isArrayLike_1 = __webpack_require__(/*! ./isArrayLike */ "./node_modules/electron-compile/node_modules/rxjs/util/isArrayLike.js");\nvar isPromise_1 = __webpack_require__(/*! ./isPromise */ "./node_modules/electron-compile/node_modules/rxjs/util/isPromise.js");\nvar isObject_1 = __webpack_require__(/*! ./isObject */ "./node_modules/electron-compile/node_modules/rxjs/util/isObject.js");\nvar Observable_1 = __webpack_require__(/*! ../Observable */ "./node_modules/electron-compile/node_modules/rxjs/Observable.js");\nvar iterator_1 = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/electron-compile/node_modules/rxjs/symbol/iterator.js");\nvar InnerSubscriber_1 = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/InnerSubscriber.js");\nvar observable_1 = __webpack_require__(/*! ../symbol/observable */ "./node_modules/electron-compile/node_modules/rxjs/symbol/observable.js");\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.iterator] === \'function\') {\n        var iterator = result[iterator_1.iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.observable] === \'function\') {\n        var obs = result[observable_1.observable]();\n        if (typeof obs.subscribe !== \'function\') {\n            destination.error(new TypeError(\'Provided object does not correctly implement Symbol.observable\'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? \'an invalid object\' : "\'" + result + "\'";\n        var msg = ("You provided " + value + " where a stream was expected.")\n            + \' You can provide an Observable, Promise, Array, or Iterable.\';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/subscribeToResult.js?')},"./node_modules/electron-compile/node_modules/rxjs/util/toSubscriber.js":
/*!******************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/toSubscriber.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ "./node_modules/electron-compile/node_modules/rxjs/Subscriber.js");\nvar rxSubscriber_1 = __webpack_require__(/*! ../symbol/rxSubscriber */ "./node_modules/electron-compile/node_modules/rxjs/symbol/rxSubscriber.js");\nvar Observer_1 = __webpack_require__(/*! ../Observer */ "./node_modules/electron-compile/node_modules/rxjs/Observer.js");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/toSubscriber.js?')},"./node_modules/electron-compile/node_modules/rxjs/util/tryCatch.js":
/*!**************************************************************************!*\
  !*** ./node_modules/electron-compile/node_modules/rxjs/util/tryCatch.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar errorObject_1 = __webpack_require__(/*! ./errorObject */ "./node_modules/electron-compile/node_modules/rxjs/util/errorObject.js");\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n//# sourceURL=webpack:///./node_modules/electron-compile/node_modules/rxjs/util/tryCatch.js?')},"./node_modules/lru-cache/index.js":
/*!*****************************************!*\
  !*** ./node_modules/lru-cache/index.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = __webpack_require__(/*! pseudomap */ \"./node_modules/pseudomap/map.js\")\nvar util = __webpack_require__(/*! util */ \"util\")\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = __webpack_require__(/*! yallist */ \"./node_modules/lru-cache/node_modules/yallist/yallist.js\")\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\n/* istanbul ignore next */\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n\n\n//# sourceURL=webpack:///./node_modules/lru-cache/index.js?")},"./node_modules/lru-cache/node_modules/yallist/yallist.js":
/*!****************************************************************!*\
  !*** ./node_modules/lru-cache/node_modules/yallist/yallist.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports){eval("module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/lru-cache/node_modules/yallist/yallist.js?")},"./node_modules/mkdirp/index.js":
/*!**************************************!*\
  !*** ./node_modules/mkdirp/index.js ***!
  \**************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var path = __webpack_require__(/*! path */ \"path\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\n\n//# sourceURL=webpack:///./node_modules/mkdirp/index.js?")},"./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?")},"./node_modules/pify/index.js":
/*!************************************!*\
  !*** ./node_modules/pify/index.js ***!
  \************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar processFn = function (fn, P, opts) {\n\treturn function () {\n\t\tvar that = this;\n\t\tvar args = new Array(arguments.length);\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\treturn new P(function (resolve, reject) {\n\t\t\targs.push(function (err, result) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else if (opts.multiArgs) {\n\t\t\t\t\tvar results = new Array(arguments.length - 1);\n\n\t\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\tresults[i - 1] = arguments[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(results);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfn.apply(that, args);\n\t\t});\n\t};\n};\n\nvar pify = module.exports = function (obj, P, opts) {\n\tif (typeof P !== 'function') {\n\t\topts = P;\n\t\tP = Promise;\n\t}\n\n\topts = opts || {};\n\topts.exclude = opts.exclude || [/.+Sync$/];\n\n\tvar filter = function (key) {\n\t\tvar match = function (pattern) {\n\t\t\treturn typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\t\t};\n\n\t\treturn opts.include ? opts.include.some(match) : !opts.exclude.some(match);\n\t};\n\n\tvar ret = typeof obj === 'function' ? function () {\n\t\tif (opts.excludeMain) {\n\t\t\treturn obj.apply(this, arguments);\n\t\t}\n\n\t\treturn processFn(obj, P, opts).apply(this, arguments);\n\t} : {};\n\n\treturn Object.keys(obj).reduce(function (ret, key) {\n\t\tvar x = obj[key];\n\n\t\tret[key] = typeof x === 'function' && filter(key) ? processFn(x, P, opts) : x;\n\n\t\treturn ret;\n\t}, ret);\n};\n\npify.all = pify;\n\n\n//# sourceURL=webpack:///./node_modules/pify/index.js?")},"./node_modules/pseudomap/map.js":
/*!***************************************!*\
  !*** ./node_modules/pseudomap/map.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = __webpack_require__(/*! ./pseudomap */ \"./node_modules/pseudomap/pseudomap.js\")\n}\n\n\n//# sourceURL=webpack:///./node_modules/pseudomap/map.js?")},"./node_modules/pseudomap/pseudomap.js":
/*!*********************************************!*\
  !*** ./node_modules/pseudomap/pseudomap.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports){eval("var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n\n\n//# sourceURL=webpack:///./node_modules/pseudomap/pseudomap.js?")},"./src/electron.js":
/*!*************************!*\
  !*** ./src/electron.js ***!
  \*************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electron */ \"electron\");\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(electron__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var electron_compile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! electron-compile */ \"./node_modules/electron-compile/lib/index.js\");\n/* harmony import */ var electron_compile__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(electron_compile__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\nlet appIcon = null;\nlet authWindow;\nconst isDevMode = process.execPath.match(/[\\\\/]electron/);\n\nif (isDevMode) Object(electron_compile__WEBPACK_IMPORTED_MODULE_1__[\"enableLiveReload\"])({ strategy: 'react-hmr' });\n\nconst createWindow = async () => {\n  mainWindow = new electron__WEBPACK_IMPORTED_MODULE_0__[\"BrowserWindow\"]({\n    width: 1000,\n    height: 770,\n    minHeight: 600,\n    minWidth: 600,\n    show: false,\n    frame: true,\n    backgroundColor: '#f4f4f5',\n    title: 'Remotify',\n  });\n\n  authWindow = new electron__WEBPACK_IMPORTED_MODULE_0__[\"BrowserWindow\"]({\n    width: 550,\n    height: 500,\n    show: true,\n    minHeight: 310,\n    minWidth: 310,\n    frame: false,\n    backgroundColor: '#f4f4f5',\n    title: 'Remotify',\n  });\n\n  mainWindow.loadURL(`file://${__dirname}/index.html`);\n  // Open the DevTools.\n  if (isDevMode) {\n    mainWindow.webContents.openDevTools();\n  }\n\n  authWindow.loadURL(`file://${__dirname}/login.html`);\n  // Open the DevTools.\n  // if (isDevMode) {\n  //   mainWindow.webContents.openDevTools();\n  // }\n\n  // Emitted when the window is closed.\n  mainWindow.on('closed', () => {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    mainWindow = null;\n  });\n};\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('ready', createWindow);\n\n// Quit when all windows are closed.\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('window-all-closed', () => {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    electron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].quit();\n  }\n});\n\n// console.log('hello');\n\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('activate', () => {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (mainWindow === null) {\n    createWindow();\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and import them here.\n\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"ipcMain\"].on('authenticate-user', (event, arg) => {\n  authWindow.show();\n  mainWindow.hide();\n});\n\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"ipcMain\"].on('authenticated', (event, arg) => {\n  authWindow.hide();\n  mainWindow.show();\n});\n\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"ipcMain\"].on('create-tray', (event) => {\n  const icon = process.platform === 'win32' ? 'win.png' : 'win.png';\n  const iconPath = path__WEBPACK_IMPORTED_MODULE_2___default.a.join(__dirname, icon);\n  appIcon = new electron__WEBPACK_IMPORTED_MODULE_0__[\"Tray\"](iconPath);\n\n  const contextMenu = electron__WEBPACK_IMPORTED_MODULE_0__[\"Menu\"].buildFromTemplate([\n    {\n      label: 'Remove',\n      click: () => {\n        event.sender.send('remove-tray');\n      },\n    },\n  ]);\n\n  appIcon.setToolTip('Remotify');\n  appIcon.setContextMenu(contextMenu);\n});\n\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"ipcMain\"].on('delete-tray', (event, arg) => {\n  appIcon.destroy();\n});\n\n\n//# sourceURL=webpack:///./src/electron.js?")},crypto:
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/*! no static exports found */function(module,exports){eval('module.exports = require("crypto");\n\n//# sourceURL=webpack:///external_%22crypto%22?')},electron:
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/*! no static exports found */function(module,exports){eval('module.exports = require("electron");\n\n//# sourceURL=webpack:///external_%22electron%22?')},fs:
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("fs");\n\n//# sourceURL=webpack:///external_%22fs%22?')},module:
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/*! no static exports found */function(module,exports){eval('module.exports = require("module");\n\n//# sourceURL=webpack:///external_%22module%22?')},net:
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("net");\n\n//# sourceURL=webpack:///external_%22net%22?')},path:
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("path");\n\n//# sourceURL=webpack:///external_%22path%22?')},tty:
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("tty");\n\n//# sourceURL=webpack:///external_%22tty%22?')},url:
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("url");\n\n//# sourceURL=webpack:///external_%22url%22?')},util:
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("util");\n\n//# sourceURL=webpack:///external_%22util%22?')},zlib:
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/*! no static exports found */function(module,exports){eval('module.exports = require("zlib");\n\n//# sourceURL=webpack:///external_%22zlib%22?')}});